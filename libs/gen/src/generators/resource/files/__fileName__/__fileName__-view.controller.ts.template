import {
  Query,
  ValidationPipe,
  ParamId,
  Controller,
  ApiBearerAuth,
  ApiTags,
  ACCESS_TOKEN,
} from './imports';

import { <%- className %>ViewName, <%- className %>Rest as Rest } from './<%- fileName %>.meta';
import { <%- className %>ViewService } from './<%- fileName %>-view.service';
import { Query<%- className %>ViewDto } from './dto';

@ApiBearerAuth(ACCESS_TOKEN)
@ApiTags(<%- className %>ViewName + 'Controller')
@Controller('view')
export class <%- className %>ViewController {
  constructor(private readonly service: <%- className %>ViewService) {}

  @Rest.Get()
  findAll(@Query(ValidationPipe) query: Query<%- className %>ViewDto) {
    return this.service.findAll(query);
  }

  @Rest.GetById()
  findOneById(@ParamId() id: number) {
    return this.service.findOneById(id);
  }
}

{
    "pipes": [
        {
            "name": "PluralPipe",
            "id": "pipe-PluralPipe-5efaaa8cab72f2fa7ea0454d9d4ee783fa72401e538625c35b7fa24999d8846dc90efaf01d5b67b53a91e4c1685f00ac22ce6ff96c8cfac988df109eee08cb50",
            "file": "libs/material/src/lib/pipes/plural.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "plural",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { plural } from '@techbir/utils';\n\n@Pipe({\n  name: 'plural',\n  standalone: true,\n})\nexport class PluralPipe implements PipeTransform {\n  transform(value: string): unknown {\n    return plural(value);\n  }\n}\n"
        }
    ],
    "interfaces": [],
    "injectables": [
        {
            "name": "CanActivateService",
            "id": "injectable-CanActivateService-f970b14915a22ef8707e824ba4d5f5ad1be9bc2c5ebcc948d8dabe441e83818fb827ca6631f98715a0d6ae772da636d5c7c9028715c5879bda85c22daf2447ff",
            "file": "libs/material/src/lib/api/services/can-active.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "canCreate",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "canDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "canUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "canView",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "itemName",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\nimport { ENTITY_NAME_TOKEN } from './resource.service';\r\nimport { LocalStoreService } from './local-storage.service';\r\n\r\n@Injectable({ providedIn: 'root', useExisting: true })\r\nexport class CanActivateService {\r\n  constructor(\r\n    @Inject(ENTITY_NAME_TOKEN) private readonly entiytName: string,\r\n    private readonly localStoreService: LocalStoreService\r\n  ) {}\r\n\r\n  private itemName(name: string) {\r\n    return `CanActivate${this.entiytName}${name}`;\r\n  }\r\n\r\n  private get(actionName: string) {\r\n    return this.localStoreService.get(this.itemName(actionName));\r\n  }\r\n\r\n  private set(actionName: string) {\r\n    this.localStoreService.set(this.itemName(actionName), true);\r\n  }\r\n\r\n  canCreate(value?: boolean) {\r\n    return true;\r\n  }\r\n  \r\n  canUpdate() {\r\n    return this.localStoreService.get(this.itemName('Update'));\r\n  }\r\n  canDelete() {\r\n    return this.localStoreService.get(this.itemName('Delete'));\r\n  }\r\n  canConfig() {\r\n    return this.localStoreService.get(this.itemName('Config'));\r\n  }\r\n  canView() {\r\n    return this.localStoreService.get(this.itemName('View'));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "entiytName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "entiytName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FiveDayRangeSelectionStrategy",
            "id": "injectable-FiveDayRangeSelectionStrategy-7fc5dbdcf0fdd9f458ea93eea3ec38374705126c4c05451b3fca5c738c227e4edd4440042f14db9bd360be3db027db8e79c1779bc117f366e9ab1274d1aae892",
            "file": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
            "properties": [],
            "methods": [
                {
                    "name": "__create",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPreview",
                    "args": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionFinished",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, Provider, Type } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport {\r\n  DateRange,\r\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n  MatDateRangeSelectionStrategy,\r\n} from '@angular/material/datepicker';\r\n\r\nexport function provideDateRangeSelectionStrategy(\r\n  strategy: Type<MatDateRangeSelectionStrategy<any>>\r\n): Provider {\r\n  return {\r\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n    useClass: strategy,\r\n  };\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FiveDayRangeSelectionStrategy<D>\r\n  implements MatDateRangeSelectionStrategy<D>\r\n{\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const start = this._dateAdapter.addCalendarDays(date, -2);\r\n      const end = this._dateAdapter.addCalendarDays(date, 2);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekDaysStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n      const start = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 1);\r\n      const end = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 5);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekEndsStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      // 3 --> 0 6\r\n\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n\r\n      // Set saturday\r\n      let saturday = 0;\r\n\r\n      if (dayOfWeek === 0) {\r\n        saturday = -1;\r\n      } else if (dayOfWeek === 6) {\r\n        saturday = 0;\r\n      } else {\r\n        saturday = -dayOfWeek - 1;\r\n      }\r\n\r\n      const start = this._dateAdapter.addCalendarDays(date, saturday);\r\n      const end = this._dateAdapter.addCalendarDays(date, saturday + 1);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "LocalStoreService",
            "id": "injectable-LocalStoreService-3c9633e9e1190e14406e13239f0b888e75add0a6b0a0fef65b1850d835faadbf49207484af7f004271abed1fae5181678386c2a1fdfbb5f1300339e9bef6956e",
            "file": "libs/material/src/lib/api/services/local-storage.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "__key",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "defaultValue",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T | undefined",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "defaultValue",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Localstore Servcie is for persisting module configurations or data to browser local storeage.\nThis service should be provided because it is required for some components.</p>\n",
            "rawdescription": "\n\nLocalstore Servcie is for persisting module configurations or data to browser local storeage.\nThis service should be provided because it is required for some components.\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\nimport { APP_NAME_TOKEN, MODULE_NAME_TOKEN } from '../providers';\r\n\r\n/**\r\n * Localstore Servcie is for persisting module configurations or data to browser local storeage.\r\n * This service should be provided because it is required for some components.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalStoreService {\r\n  constructor(\r\n    @Inject(APP_NAME_TOKEN) private readonly appName: string,\r\n    @Inject(MODULE_NAME_TOKEN) private readonly moduleName: string\r\n  ) {\r\n    console.log(this.appName, this.moduleName);\r\n  }\r\n\r\n  protected __key(key: string) {\r\n    return `${this.appName}_${this.moduleName}_${key}`;\r\n  }\r\n\r\n  set(key: string, value: any) {\r\n    const valueAsString = JSON.stringify(value);\r\n    localStorage.setItem(this.__key(key), valueAsString);\r\n  }\r\n\r\n  get<T>(key: string, defaultValue?: T): T | undefined {\r\n    const value = localStorage.getItem(this.__key(key));\r\n    if (value != undefined) {\r\n      return JSON.parse(value) as T;\r\n    } else {\r\n      return defaultValue;\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "moduleName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "moduleName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ResourceService",
            "id": "injectable-ResourceService-ef3c5f53f422b15b5676806ed55d209475316f5b2d6b52e9df392e0a450a30c4a2e76bfc0f6fd908a495676971ed08b95252aa7abb4831082bfaab214fde3489",
            "file": "libs/material/src/lib/api/services/resource.service.ts",
            "properties": [
                {
                    "name": "allCount$",
                    "defaultValue": "inject(HttpClient)\r\n    .get<{ count: number }>(`api/meta/count/${this.nameVariants.fileName}`)\r\n    .pipe(\r\n      debounceTime(1000),\r\n      map((value) => {\r\n        const count = value?.count;\r\n        if (count != undefined) {\r\n          return count;\r\n        }\r\n        return 999999;\r\n      }),\r\n      catchError(() => {\r\n        return of(99999999);\r\n      })\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "errorMessages$",
                    "defaultValue": "this.errors$.pipe(\r\n    map((err) => {\r\n      return err.payload.data.error.error.error.message as ErrorType[];\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "nameVariants",
                    "defaultValue": "names(this.entityName)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methods": [
                {
                    "name": "deleteItem",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUse this method\n",
                    "description": "<p>Use this method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1879,
                                "end": 1881,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "id"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1873,
                                "end": 1878,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 1889,
                                "end": 1896,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "nid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "queryItem",
                    "args": [
                        {
                            "name": "query",
                            "type": "QueryObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "QueryObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2176,
                                "end": 2180,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "item"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2170,
                                "end": 2175,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUse this method\n",
                    "description": "<p>Use this method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2022,
                                "end": 2026,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "item"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2016,
                                "end": 2021,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 2034,
                                "end": 2041,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable, Provider, inject } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from '@ngrx/data';\r\nimport {\r\n  Observable,\r\n  catchError,\r\n  debounceTime,\r\n  firstValueFrom,\r\n  map,\r\n  of,\r\n} from 'rxjs';\r\nimport { excludeUndefined, names } from '@techbir/utils';\r\n\r\nexport type QueryObject = {\r\n  take?: number;\r\n  skip?: number;\r\n  orderBy?: string;\r\n  orderDir?: string;\r\n  withDeleted?: boolean;\r\n  search?: string;\r\n};\r\n\r\nexport const ENTITY_NAME_TOKEN = 'ENTITY_NAME_TOKEN';\r\n\r\nexport function provideEntityName(name: string): Provider {\r\n  return {\r\n    provide: ENTITY_NAME_TOKEN,\r\n    useValue: name,\r\n  };\r\n}\r\n\r\nexport type ErrorType = {\r\n  property: string;\r\n  constraints: Record<string, string>;\r\n};\r\n\r\n@Injectable({ providedIn: 'root', useExisting: true })\r\nexport class ResourceService<T> extends EntityCollectionServiceBase<T> {\r\n  errorMessages$ = this.errors$.pipe(\r\n    map((err) => {\r\n      return err.payload.data.error.error.error.message as ErrorType[];\r\n    })\r\n  );\r\n  nameVariants = names(this.entityName);\r\n\r\n  allCount$: Observable<number> = inject(HttpClient)\r\n    .get<{ count: number }>(`api/meta/count/${this.nameVariants.fileName}`)\r\n    .pipe(\r\n      debounceTime(1000),\r\n      map((value) => {\r\n        const count = value?.count;\r\n        if (count != undefined) {\r\n          return count;\r\n        }\r\n        return 999999;\r\n      }),\r\n      catchError(() => {\r\n        return of(99999999);\r\n      })\r\n    );\r\n\r\n  constructor(\r\n    @Inject(ENTITY_NAME_TOKEN) entityName: string,\r\n    serviceElementsFactory: EntityCollectionServiceElementsFactory\r\n  ) {\r\n    super(entityName, serviceElementsFactory);\r\n  }\r\n\r\n  private nid() {\r\n    return new Date().getTime();\r\n  }\r\n\r\n  /**\r\n   * Use this method\r\n   * @param id\r\n   * @returns\r\n   */\r\n  deleteItem(id: number) {\r\n    return this.removeOneFromCache(id);\r\n  }\r\n\r\n  /**\r\n   * Use this method\r\n   * @param item\r\n   * @returns\r\n   */\r\n  updateItem(item: T) {\r\n    return this.updateOneInCache(item);\r\n  }\r\n\r\n  /**\r\n   * @important Use this method!\r\n   * @param item\r\n   */\r\n  saveItem(item: T) {\r\n    this.add({ ...item, id: this.nid() });\r\n  }\r\n\r\n  queryItem(query: QueryObject) {\r\n    this.clearCache();\r\n    const q = excludeUndefined(query);\r\n    this.getWithQuery(q);\r\n  }\r\n\r\n  search(text: string) {\r\n    this.getWithQuery({ search: text });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "serviceElementsFactory",
                        "type": "EntityCollectionServiceElementsFactory",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 63,
                "jsdoctags": [
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "serviceElementsFactory",
                        "type": "EntityCollectionServiceElementsFactory",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "EntityCollectionServiceBase"
            ],
            "type": "injectable"
        },
        {
            "name": "WeekDaysStrategy",
            "id": "injectable-WeekDaysStrategy-7fc5dbdcf0fdd9f458ea93eea3ec38374705126c4c05451b3fca5c738c227e4edd4440042f14db9bd360be3db027db8e79c1779bc117f366e9ab1274d1aae892",
            "file": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
            "properties": [],
            "methods": [
                {
                    "name": "__create",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPreview",
                    "args": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionFinished",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, Provider, Type } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport {\r\n  DateRange,\r\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n  MatDateRangeSelectionStrategy,\r\n} from '@angular/material/datepicker';\r\n\r\nexport function provideDateRangeSelectionStrategy(\r\n  strategy: Type<MatDateRangeSelectionStrategy<any>>\r\n): Provider {\r\n  return {\r\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n    useClass: strategy,\r\n  };\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FiveDayRangeSelectionStrategy<D>\r\n  implements MatDateRangeSelectionStrategy<D>\r\n{\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const start = this._dateAdapter.addCalendarDays(date, -2);\r\n      const end = this._dateAdapter.addCalendarDays(date, 2);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekDaysStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n      const start = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 1);\r\n      const end = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 5);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekEndsStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      // 3 --> 0 6\r\n\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n\r\n      // Set saturday\r\n      let saturday = 0;\r\n\r\n      if (dayOfWeek === 0) {\r\n        saturday = -1;\r\n      } else if (dayOfWeek === 6) {\r\n        saturday = 0;\r\n      } else {\r\n        saturday = -dayOfWeek - 1;\r\n      }\r\n\r\n      const start = this._dateAdapter.addCalendarDays(date, saturday);\r\n      const end = this._dateAdapter.addCalendarDays(date, saturday + 1);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "WeekEndsStrategy",
            "id": "injectable-WeekEndsStrategy-7fc5dbdcf0fdd9f458ea93eea3ec38374705126c4c05451b3fca5c738c227e4edd4440042f14db9bd360be3db027db8e79c1779bc117f366e9ab1274d1aae892",
            "file": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
            "properties": [],
            "methods": [
                {
                    "name": "__create",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPreview",
                    "args": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionFinished",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, Provider, Type } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport {\r\n  DateRange,\r\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n  MatDateRangeSelectionStrategy,\r\n} from '@angular/material/datepicker';\r\n\r\nexport function provideDateRangeSelectionStrategy(\r\n  strategy: Type<MatDateRangeSelectionStrategy<any>>\r\n): Provider {\r\n  return {\r\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n    useClass: strategy,\r\n  };\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FiveDayRangeSelectionStrategy<D>\r\n  implements MatDateRangeSelectionStrategy<D>\r\n{\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const start = this._dateAdapter.addCalendarDays(date, -2);\r\n      const end = this._dateAdapter.addCalendarDays(date, 2);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekDaysStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n      const start = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 1);\r\n      const end = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 5);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekEndsStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      // 3 --> 0 6\r\n\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n\r\n      // Set saturday\r\n      let saturday = 0;\r\n\r\n      if (dayOfWeek === 0) {\r\n        saturday = -1;\r\n      } else if (dayOfWeek === 6) {\r\n        saturday = 0;\r\n      } else {\r\n        saturday = -dayOfWeek - 1;\r\n      }\r\n\r\n      const start = this._dateAdapter.addCalendarDays(date, saturday);\r\n      const end = this._dateAdapter.addCalendarDays(date, saturday + 1);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "InputValueFilter",
            "id": "class-InputValueFilter-82201a1f93a66f9bb6d8fedd631edb716a65e87a4db51505fa6f160b64bf9cd78f1d2005385b0ab74a0f088080e912bee46ffdb0aa9ba18cc764987ada900ef0",
            "file": "libs/material/src/lib/api/providers/input-filter.provider.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class InputValueFilter<V> {\r\n  filter(v: V): V | undefined {\r\n    return undefined;\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "v",
                            "type": "V",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "V | undefined",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "V",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MockResourceService",
            "id": "class-MockResourceService-5d7caf05d6da35728c04e0763a5dae2ec219133c8c2b4d6d7bd279220d3a1a7118757d1a2b51d0d2e6eaf8b85b37f6a65c465547ecc8fecc099cb95a9ae1e719",
            "file": "libs/material/src/lib/form/search/search.component.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {\r\n  moduleMetadata,\r\n  type Meta,\r\n  type StoryObj,\r\n  applicationConfig,\r\n} from '@storybook/angular';\r\nimport { SearchComponent } from './search.component';\r\n\r\nimport { within } from '@storybook/testing-library';\r\nimport { expect } from '@storybook/jest';\r\nimport { CommonFieldModule } from '../common-field';\r\nimport { ResourceService, provideFormGroup } from '../../api';\r\nimport { provideAnimations } from '@angular/platform-browser/animations';\r\nimport { BehaviorSubject, map, of, switchMap } from 'rxjs';\r\n\r\nclass MockResourceService {\r\n  allEntities$ = of([\r\n    { id: 1, name: 'Category 1' },\r\n    { id: 2, name: 'Category 2' },\r\n    { id: 3, name: 'Category 3' },\r\n    { id: 4, name: 'Category 4' },\r\n    { id: 5, name: 'Category 5' },\r\n    { id: 6, name: 'Category 6' },\r\n    { id: 7, name: 'Category 7' },\r\n    { id: 8, name: 'Category 8' },\r\n  ]);\r\n\r\n  searchText = new BehaviorSubject<string>('');\r\n\r\n  entities$ = this.searchText.pipe(\r\n    switchMap((text) => {\r\n      return this.allEntities$.pipe(\r\n        map((obj) => {\r\n          return obj.filter((e) =>\r\n            e.name.toLowerCase().includes(text.toLowerCase())\r\n          );\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\n  search(text: string) {\r\n    this.searchText.next(text);\r\n  }\r\n}\r\n\r\nconst meta: Meta<SearchComponent> = {\r\n  component: SearchComponent,\r\n  title: 'SearchComponent',\r\n\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule],\r\n      providers: [\r\n        provideFormGroup({ category: '' }),\r\n        {\r\n          provide: ResourceService,\r\n          useClass: MockResourceService,\r\n        },\r\n      ],\r\n    }),\r\n  ],\r\n};\r\nexport default meta;\r\ntype Story = StoryObj<SearchComponent>;\r\n\r\nexport const Primary: Story = {\r\n  args: {\r\n    name: 'category',\r\n    icon: 'category',\r\n    label: 'Select Category',\r\n  },\r\n};\r\n\r\nexport const Heading: Story = {\r\n  args: {\r\n    name: 'category',\r\n    icon: 'category',\r\n    label: 'Select Category',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/search works!/gi)).toBeTruthy();\r\n  },\r\n};\r\n",
            "properties": [
                {
                    "name": "allEntities$",
                    "defaultValue": "of([\r\n    { id: 1, name: 'Category 1' },\r\n    { id: 2, name: 'Category 2' },\r\n    { id: 3, name: 'Category 3' },\r\n    { id: 4, name: 'Category 4' },\r\n    { id: 5, name: 'Category 5' },\r\n    { id: 6, name: 'Category 6' },\r\n    { id: 7, name: 'Category 7' },\r\n    { id: 8, name: 'Category 8' },\r\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "entities$",
                    "defaultValue": "this.searchText.pipe(\r\n    switchMap((text) => {\r\n      return this.allEntities$.pipe(\r\n        map((obj) => {\r\n          return obj.filter((e) =>\r\n            e.name.toLowerCase().includes(text.toLowerCase())\r\n          );\r\n        })\r\n      );\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "searchText",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methods": [
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "NavItem",
            "id": "class-NavItem-c3010237381f2ccd31aba58617a1f190619ea2aca7f1eda0e9bc1b403721a17add203ce5ff30518da3ba5ceb64708aaa4dc60e4a3ea5a4f6ecdf7635f363cad6",
            "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Provider } from '@angular/core';\r\n\r\nexport const NAV_ITEMS_TOKEN = 'NAV_ITEMS_TOKEN';\r\n\r\nexport type NavItemParams = {\r\n  ignoreLastRoute?: boolean;\r\n};\r\n\r\nexport class NavItem {\r\n  route!: string;\r\n  name!: string;\r\n  icon!: string;\r\n  params?: NavItemParams;\r\n}\r\n\r\nexport function provideNavItems(navItems: NavItem[]): Provider {\r\n  return {\r\n    provide: NAV_ITEMS_TOKEN,\r\n    useValue: navItems,\r\n  };\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItemParams",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-f0a2245342c94cc37afcea4407e677931b9798107cb95308b8e1f0a9ef88b8cec81788c6b0beb4146a3d09631adf245633d8cf76194a3848ee9dc0f9c94e6608",
            "file": "libs/material/src/lib/website/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-about",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-about',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './about.component.html',\n  styles: [],\n})\nexport class AboutComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>about works!</p>\n"
        },
        {
            "name": "AutocompleteComponent",
            "id": "component-AutocompleteComponent-5565f68678bb4347260cf203223d6c22578f2eee16160d9ff9f63c96a6787678b2d0f889e914e1e75b7c8cc2c343aeb00235bdd6d827d8b1aab87441632ab6cf",
            "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-autocomplete",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./autocomplete.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75,
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "resetInputValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonFieldComponent, CommonFieldModule } from '../common-field';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\n@Component({\n  selector: 'techbir-autocomplete',\n  standalone: true,\n  imports: [CommonFieldModule, MatAutocompleteModule],\n  templateUrl: './autocomplete.component.html',\n  styles: [],\n})\nexport class AutocompleteComponent extends CommonFieldComponent {\n  resetInputValue() {\n    this.control.setValue('');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-form-field [appearance]=\"appearance\">\n    <mat-label>{{ label || name | titlecase }}</mat-label>\n    <input\n      type=\"text\"\n      matInput\n      [formControlName]=\"name\"\n      [matAutocomplete]=\"auto\"\n      (click)=\"resetInputValue()\"\n    />\n    <mat-icon matPrefix color=\"primary\">{{ icon }}</mat-icon>\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n      <ng-container *ngFor=\"let option of filteredOptions$ | async\">\n        <mat-option [value]=\"option.id\">{{ option.label }}</mat-option>\n      </ng-container>\n    </mat-autocomplete>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "ChatComponent",
            "id": "component-ChatComponent-72c6a50806979c95b91eb9eb6017fafacff2bfdaaf40ca144166b9d890f7de9c448b9f42a2cd784456610e7bbaf6013cbfae5c9cb7610f078e98c7590c2a9ff8",
            "file": "libs/material/src/lib/chat/chat.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-chat",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./chat.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-chat',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './chat.component.html',\n  styles: [],\n})\nexport class ChatComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>chat works!</p>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-8919c1f365f182e7c9e617edc85ef45779cdfa6fb8bbf6e0a97ac136cc327632010e0582d25d165825b869c68859c55be61d3f1de1f27d63398c56ca04d9f0e9",
            "file": "libs/material/src/lib/form/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75,
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {\r\n  CommonFieldComponent,\r\n  CommonFieldModule,\r\n} from '../common-field/common-field.component';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\n@Component({\r\n  selector: 'techbir-checkbox',\r\n  standalone: true,\r\n  imports: [CommonFieldModule, MatCheckboxModule],\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n})\r\nexport class CheckboxComponent extends CommonFieldComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\r\n  <mat-checkbox class=\"example-margin\" [formControlName]=\"name\">\r\n    {{ label || name | titlecase }}\r\n  </mat-checkbox>\r\n</div>\r\n"
        },
        {
            "name": "CheckboxGroupComponent",
            "id": "component-CheckboxGroupComponent-0be3650cd2e7d62402fc11759dbfe0db04e2c6c108e3d707427bdb5850c4ae90d072ebff92b699c4f28fa471b525c90841337788f85ae5fd3950dc308a3cac4f",
            "file": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-checkbox-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkbox-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "__intermediate",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "__parentValues",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75,
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "setChildValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatCheckboxChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "parentId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "childId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatCheckboxChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parentId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "childId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setControlValue",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setParentValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatCheckboxChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "parentId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatCheckboxChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parentId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CommonFieldComponent, CommonFieldModule } from '../common-field';\nimport {\n  MatCheckboxChange,\n  MatCheckboxModule,\n} from '@angular/material/checkbox';\n\n@Component({\n  selector: 'techbir-checkbox-group',\n  standalone: true,\n  imports: [CommonFieldModule, MatCheckboxModule],\n  templateUrl: './checkbox-group.component.html',\n  styles: [],\n})\nexport class CheckboxGroupComponent extends CommonFieldComponent {\n  __intermediate: any = {};\n  __parentValues: any = {};\n\n  setParentValue(event: MatCheckboxChange, parentId: any) {\n    const found = this.options?.find((e) => e.id === parentId);\n\n    if (found) {\n      this.__parentValues[parentId] = event.checked;\n\n      if (found.children) {\n        found.children.forEach((e) => (e.value = event.checked));\n      }\n    }\n    this.__intermediate[parentId] = false;\n    this.setControlValue();\n  }\n\n  setChildValue(event: MatCheckboxChange, parentId: any, childId: any) {\n    const found = this.options?.find((e) => e.id === parentId);\n\n    if (found) {\n      const foundChild = found.children?.find((e) => e.id === childId);\n\n      if (foundChild) {\n        foundChild.value = event.checked;\n      }\n\n      const isAllChecked = found.children\n        ?.map((v) => v.value)\n        .reduce((p, c) => p && c);\n\n      const isAllUnChecked = found.children\n        ?.map((e) => e.value)\n        .reduce((p, c) => !p && !c);\n\n      if (isAllChecked) {\n        this.__parentValues[parentId] = true;\n        this.__intermediate[parentId] = false;\n      } else if (isAllUnChecked) {\n        this.__intermediate[parentId] = false;\n        this.__parentValues[parentId] = false;\n      } else {\n        this.__intermediate[parentId] = true;\n      }\n    }\n    this.setControlValue();\n  }\n\n  setControlValue() {\n    const currentValue = this.options\n      ?.map((e) => ({\n        [e.id]:\n          e.children\n            ?.map((k) => ({ [k.id]: k.value }))\n            .reduce((p, c) => ({ ...p, ...c })) || this.__parentValues[e.id],\n      }))\n      .reduce((p, c) => ({ ...p, ...c }));\n\n    this.control?.setValue(currentValue);\n    return currentValue;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <input\n    type=\"text\"\n    [formControlName]=\"name\"\n    style=\"visibility: collapse; position: absolute\"\n  />\n  <fieldset>\n    <legend>{{ label || name | titlecase }}</legend>\n    <div style=\"display: flex; gap: 3em\">\n      <div *ngFor=\"let o of options\">\n        <mat-checkbox\n          [indeterminate]=\"__intermediate[o.id]\"\n          [checked]=\"__parentValues[o.id]\"\n          (change)=\"setParentValue($event, o.id)\"\n        >\n          {{ o.label }}\n        </mat-checkbox>\n        <div *ngIf=\"o.children\">\n          <div style=\"padding-left: 1em\" *ngFor=\"let c of o.children\">\n            <mat-checkbox\n              [checked]=\"c.value\"\n              (change)=\"setChildValue($event, o.id, c.id)\"\n            >\n              {{ c.label }}\n            </mat-checkbox>\n          </div>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n</div>\n"
        },
        {
            "name": "CommonFieldComponent",
            "id": "component-CommonFieldComponent-6ed741e70ae90c81fe2dceaf863ec20a56b07b17198a6a4d6b5873980c9e2bb9931f5686160aad8de1d267938d6352cc10e0877f3c8d0d738073373e3ca9de97",
            "file": "libs/material/src/lib/form/common-field/common-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n"
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Inject,\r\n  Input,\r\n  NgModule,\r\n  OnInit,\r\n  Optional,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n} from '@angular/forms';\r\nimport {\r\n  FORM_FIELD_APPEARANCE_TOKEN,\r\n  InputOptions,\r\n  ResourceService,\r\n} from '../../api';\r\nimport { MatFormField, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Observable, map } from 'rxjs';\r\n\r\nconst formModules = [\r\n  CommonModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [...formModules],\r\n  exports: [...formModules],\r\n})\r\nexport class CommonFieldModule {}\r\n\r\n@Component({ template: '' })\r\nexport class CommonFieldComponent implements OnInit {\r\n  /**\r\n   * Property name\r\n   */\r\n  @Input() name!: string;\r\n\r\n  /**\r\n   * Property label\r\n   */\r\n  @Input() label = '';\r\n\r\n  /**\r\n   * Property icon\r\n   */\r\n  @Input() icon = '';\r\n\r\n  /**\r\n   * Options for readio/checkbox-group and select components\r\n   */\r\n  @Input() enums?: string[];\r\n\r\n  /**\r\n   * Options for readio/checkbox-group and select components\r\n   */\r\n  @Input() options?: InputOptions[];\r\n\r\n  /**\r\n   * FormControl instance\r\n   */\r\n  control!: AbstractControl;\r\n\r\n  filteredOptions$?: Observable<any>;\r\n\r\n  constructor(\r\n    @Inject(FormGroup) public readonly formGroup: FormGroup,\r\n    @Optional()\r\n    @Inject(FORM_FIELD_APPEARANCE_TOKEN)\r\n    public readonly appearance: MatFormField['appearance']\r\n  ) {\r\n    if (!appearance) this.appearance = 'outline';\r\n    if (!formGroup) throw new Error('FormGroup must be provided!');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const foundControl = this.formGroup.get(this.name);\r\n\r\n    if (!foundControl) {\r\n      throw new Error(`${this.name} control is not found in formGroup!`);\r\n    }\r\n\r\n    this.control = foundControl;\r\n\r\n    if (this.enums) {\r\n      this.options = this.enums.map((e) => ({ id: e, label: e, value: e }));\r\n    }\r\n\r\n    this.filteredOptions$ = this.control.valueChanges.pipe(\r\n      map((value) => {\r\n        return this.options?.filter((e) => {\r\n          return (e.value as string)\r\n            ?.toLowerCase()\r\n            .includes((value as string).toLowerCase() || '');\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  getErrors() {\r\n    return Object.values(this.control.errors || {}).join(', ');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appearance",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 75,
                "jsdoctags": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appearance",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ConfigComponent",
            "id": "component-ConfigComponent-8a26ad10dde1fd82a948a1508510851e0610f5615ebdbbbdaf12779da6809678776b27d423d9212cd2f6c3c73b4128248d8061dd997df5fe4a2dbe3b2611df90",
            "file": "libs/material/src/lib/resource/config/config.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-config",
            "styleUrls": [
                "./config.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./config.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-config',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss'],\n})\nexport class ConfigComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./config.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>config works!</p>\n"
        },
        {
            "name": "ContactComponent",
            "id": "component-ContactComponent-f56cdad3fb3fa97bdb5d16553086c56c7ff96f94993804e3b30dd5e0f856b571e05fcb8792520b9666afb83d9aae58b4569348051deac8bfcab604c5a18b8c75",
            "file": "libs/material/src/lib/website/contact/contact.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-contact",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./contact.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-contact',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './contact.component.html',\n  styles: [],\n})\nexport class ContactComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>contact works!</p>\n"
        },
        {
            "name": "CreateComponent",
            "id": "component-CreateComponent-8483684dfd0ae0811d51822623b92d88c6aed0ec75dbbe5ce8243956a0dbdbc0d34d729f9c3b212c47a4bfde6d80119d9079d36464efdd09d061b3d5129bc318",
            "file": "libs/material/src/lib/resource/create/create.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-create",
            "styleUrls": [],
            "styles": [],
            "template": "<techbir-form> </techbir-form>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "entityActions$",
                    "defaultValue": "this.service.entityActions$.pipe(\r\n    tap((action) => {\r\n      if (action.type.endsWith('success')) {\r\n        this.snack.open($localize`Awesome work!`, 'close', {\r\n          duration: 10000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'center',\r\n        });\r\n      } else if (action.type.endsWith('error')) {\r\n        this.snack.open($localize`Form is invalid!`, 'close', {\r\n          duration: 10000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'center',\r\n        });\r\n      }\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "inheritance": {
                        "file": "FormComponent"
                    }
                },
                {
                    "name": "errorMessages$",
                    "defaultValue": "this.service.errorMessages$.pipe(\r\n    map((errors) => {\r\n      if (errors?.length > 0) {\r\n        for (const error of errors) {\r\n          this.formGroup.get(error.property)?.setErrors(error.constraints);\r\n        }\r\n      }\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "FormComponent"
                    }
                },
                {
                    "name": "formFields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormField[]",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELDS_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "inheritance": {
                        "file": "FormComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "inheritance": {
                        "file": "FormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs form invalid or untouched?\n",
                    "description": "<p>Is form invalid or untouched?</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2127,
                                "end": 2134,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "FormComponent"
                    }
                },
                {
                    "name": "isFormValid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs form dirth and valid?\n",
                    "description": "<p>Is form dirth and valid?</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1978,
                                "end": 1985,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "FormComponent"
                    }
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "FormComponent"
                    }
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "FormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormComponent } from '../../form/form.component';\n\n@Component({\n  selector: 'techbir-create',\n  standalone: true,\n  imports: [CommonModule, FormComponent],\n  template: ` <techbir-form> </techbir-form> `,\n})\nexport class CreateComponent extends FormComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "FormComponent"
            ]
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-f18981863338fcb33ec2a2908a3300322c1d9e0e295d9d508233671310af8cad9e36d1af052cdaa5b964d3046518a5d68f848d09620f36a25fff14eb317a708f",
            "file": "libs/material/src/lib/resource/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-dashboard",
            "styleUrls": [
                "./dashboard.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cards",
                    "defaultValue": "this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 },\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 },\n      ];\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Based on the screen size, switch from standard to one column per row</p>\n",
                    "line": 43,
                    "rawdescription": "\nBased on the screen size, switch from standard to one column per row"
                },
                {
                    "name": "count$",
                    "defaultValue": "this.service.allCount$.pipe(\n    delay(2000),\n    map((data) => {\n      console.log(data);\n      this.isCountLoading = false;\n      return data;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "entityName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "ENTITY_NAME_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "isCountLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatGridListModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "SkeletonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, inject } from '@angular/core';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { delay, map } from 'rxjs/operators';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { ENTITY_NAME_TOKEN, ResourceService } from '../../api';\nimport { Observable } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { SkeletonComponent } from '../../skeleton/skeleton.component';\n\n@Component({\n  selector: 'techbir-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    SkeletonComponent,\n  ],\n})\nexport class DashboardComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  isCountLoading = true;\n  readonly count$: Observable<number> = this.service.allCount$.pipe(\n    delay(2000),\n    map((data) => {\n      console.log(data);\n      this.isCountLoading = false;\n      return data;\n    })\n  );\n\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 },\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 },\n      ];\n    })\n  );\n\n  constructor(\n    private readonly service: ResourceService<unknown>,\n    @Inject(ENTITY_NAME_TOKEN)\n    public readonly entityName: string\n  ) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grid-container {\n  margin: 20px;\n}\n\n.dashboard-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.dashboard-card-content {\n  text-align: center;\n}\n",
                    "styleUrl": "./dashboard.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ResourceService<>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ResourceService<>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"grid-container\">\r\n  <h1 class=\"mat-h1\">Dashboard</h1>\r\n\r\n  <p style=\"position: relative\">\r\n    <span *ngIf=\"count$ | async as itemCount\">\r\n      There are {{ itemCount }} {{ entityName }}.\r\n    </span>\r\n  </p>\r\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\r\n    <mat-grid-tile\r\n      *ngFor=\"let card of cards | async\"\r\n      [colspan]=\"card.cols\"\r\n      [rowspan]=\"card.rows\"\r\n    >\r\n      <mat-card class=\"dashboard-card\">\r\n        <mat-card-header>\r\n          <mat-card-title>\r\n            {{ card.title }}\r\n            <button\r\n              mat-icon-button\r\n              class=\"more-button\"\r\n              [matMenuTriggerFor]=\"menu\"\r\n              aria-label=\"Toggle menu\"\r\n            >\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n              <button mat-menu-item>Expand</button>\r\n              <button mat-menu-item>Remove</button>\r\n            </mat-menu>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"dashboard-card-content\"> </mat-card-content>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</div>\r\n"
        },
        {
            "name": "DateComponent",
            "id": "component-DateComponent-6d56e51412820a3d893f246d9d3313d1dce85fb7b5097944c771440affcea193050f5223b0315c65f937e84eacd54566ac8da3d8a0303856b3e712ab3164fbe0",
            "file": "libs/material/src/lib/form/date/date.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-date",
            "styleUrls": [
                "./date.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75,
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {\r\n  CommonFieldComponent,\r\n  CommonFieldModule,\r\n} from '../common-field/common-field.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'techbir-date',\r\n  standalone: true,\r\n  imports: [CommonFieldModule, MatDatepickerModule, MatNativeDateModule],\r\n  templateUrl: './date.component.html',\r\n  styleUrls: ['./date.component.scss'],\r\n})\r\nexport class DateComponent extends CommonFieldComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./date.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\r\n  <mat-form-field>\r\n    <mat-label>{{ label || name | titlecase }}</mat-label>\r\n    <input matInput [matDatepicker]=\"picker\" [formControlName]=\"name\" />\r\n    <mat-hint>MM/DD/YYYY</mat-hint>\r\n    <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-datepicker #picker></mat-datepicker>\r\n    <mat-error> {{ getErrors() }}</mat-error>\r\n  </mat-form-field>\r\n</div>\r\n"
        },
        {
            "name": "DateRangeComponent",
            "id": "component-DateRangeComponent-372a817b684fdfd74c8c1498602ec5afb61b1edef8fe7065f0ade229d3f4a298979f9abd06c5b6880e3e30891b3efaf66dfb9b36a62234fb5f3059b5f0d5f72d",
            "file": "libs/material/src/lib/form/date-range/date-range.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-date-range",
            "styleUrls": [
                "./date-range.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-range.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "updateValue$",
                    "defaultValue": "combineLatest([\r\n    this.__startControl.valueChanges,\r\n    this.__endControl.valueChanges,\r\n  ]).pipe(\r\n    debounceTime(400),\r\n    map(([start, end]) => {\r\n      this.formGroup.get(this.name)?.setValue({ start, end });\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75,
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {\r\n  CommonFieldComponent,\r\n  CommonFieldModule,\r\n} from '../common-field/common-field.component';\r\nimport { combineLatest, debounceTime, map } from 'rxjs';\r\nimport '@angular/localize/init';\r\n\r\n@Component({\r\n  selector: 'techbir-date-range',\r\n  standalone: true,\r\n  imports: [CommonFieldModule, MatDatepickerModule, MatNativeDateModule],\r\n  templateUrl: './date-range.component.html',\r\n  styleUrls: ['./date-range.component.scss'],\r\n})\r\nexport class DateRangeComponent extends CommonFieldComponent {\r\n  /**\r\n   * @ignore\r\n   */\r\n  __startControl = new FormControl('');\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  __endControl = new FormControl('');\r\n\r\n  updateValue$ = combineLatest([\r\n    this.__startControl.valueChanges,\r\n    this.__endControl.valueChanges,\r\n  ]).pipe(\r\n    debounceTime(400),\r\n    map(([start, end]) => {\r\n      this.formGroup.get(this.name)?.setValue({ start, end });\r\n    })\r\n  );\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./date-range.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<ng-container *ngIf=\"updateValue$ | async\"></ng-container>\r\n<div [formGroup]=\"formGroup\">\r\n  <mat-form-field class=\"example-form-field\">\r\n    <mat-label>{{ label || name | titlecase }}</mat-label>\r\n    <mat-date-range-input [rangePicker]=\"dateRangePicker\">\r\n      <input\r\n        matStartDate\r\n        i18n-placeholder\r\n        placeholder=\"Start date\"\r\n        [formControl]=\"__startControl\"\r\n      />\r\n      <input\r\n        matEndDate\r\n        i18n-placeholder\r\n        placeholder=\"End date\"\r\n        [formControl]=\"__endControl\"\r\n      />\r\n    </mat-date-range-input>\r\n    <mat-hint>MM/DD/YYYY – MM/DD/YYYY</mat-hint>\r\n    <mat-datepicker-toggle\r\n      matIconSuffix\r\n      [for]=\"dateRangePicker\"\r\n    ></mat-datepicker-toggle>\r\n    <mat-date-range-picker #dateRangePicker></mat-date-range-picker>\r\n    <mat-error> {{ getErrors() }}</mat-error>\r\n  </mat-form-field>\r\n</div>\r\n"
        },
        {
            "name": "DateTimeComponent",
            "id": "component-DateTimeComponent-8d7b85d09843f4cb614f0223efe40cf790322f64cf7c350f30362d60321e553aac0acfecd3a5a643646b100e4cfcd1c91d8915e5c9d362c0ecdd3a70aae50281",
            "file": "libs/material/src/lib/form/date-time/date-time.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-date-time",
            "styleUrls": [
                "./date-time.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-time.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75,
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {\r\n  CommonFieldComponent,\r\n  CommonFieldModule,\r\n} from '../common-field/common-field.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {} from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'techbir-date-time',\r\n  standalone: true,\r\n  imports: [CommonFieldModule, MatDatepickerModule, MatNativeDateModule],\r\n  templateUrl: './date-time.component.html',\r\n  styleUrls: ['./date-time.component.scss'],\r\n})\r\nexport class DateTimeComponent extends CommonFieldComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./date-time.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\r\n  <mat-form-field>\r\n    <input matInput type=\"datetime-local\" [formControlName]=\"name\" />\r\n    <mat-label>{{ label || name | titlecase }}</mat-label>\r\n    <mat-hint>MM/DD/YYYY</mat-hint>\r\n    <mat-error> {{ getErrors() }}</mat-error>\r\n  </mat-form-field>\r\n</div>\r\n"
        },
        {
            "name": "DeleteComponent",
            "id": "component-DeleteComponent-6c7104faf5ca053daff2ea1598fafcf32fa0d5c24ffb35b30d8cc4e1a410088c26d4089c3a0b600848cd8720c32686151a046fef4b67ff9e0a2e6fcd5f4a13da",
            "file": "libs/material/src/lib/resource/delete/delete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-delete",
            "styleUrls": [
                "./delete.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./delete.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-delete',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.scss'],\n})\nexport class DeleteComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./delete.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>delete works!</p>\n"
        },
        {
            "name": "DetailComponent",
            "id": "component-DetailComponent-32e2fc40bc7ade520b7d9523241e3407b4ce5954a6de6f4ad197b6e9ed4a15827c1c72c1d1fe8147836c41eb74d36d5612463456594e40d8afafdfd1b074744d",
            "file": "libs/material/src/lib/resource/detail/detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-detail",
            "styleUrls": [
                "./detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./detail.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-detail',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss'],\n})\nexport class DetailComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./detail.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>detail works!</p>\n"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-ee7bee652fa79610ed6fcb49040f452a22afb9afa3ddc40a33cee5a4f5bfe251f837dc2aa03d32bab24699c28d63e08cbfb65f833e070d9ed8430fa5b85ff410",
            "file": "libs/material/src/lib/form/form.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-form",
            "styleUrls": [
                "./form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "entityActions$",
                    "defaultValue": "this.service.entityActions$.pipe(\r\n    tap((action) => {\r\n      if (action.type.endsWith('success')) {\r\n        this.snack.open($localize`Awesome work!`, 'close', {\r\n          duration: 10000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'center',\r\n        });\r\n      } else if (action.type.endsWith('error')) {\r\n        this.snack.open($localize`Form is invalid!`, 'close', {\r\n          duration: 10000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'center',\r\n        });\r\n      }\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "errorMessages$",
                    "defaultValue": "this.service.errorMessages$.pipe(\r\n    map((errors) => {\r\n      if (errors?.length > 0) {\r\n        for (const error of errors) {\r\n          this.formGroup.get(error.property)?.setErrors(error.constraints);\r\n        }\r\n      }\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "formFields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormField[]",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELDS_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs form invalid or untouched?\n",
                    "description": "<p>Is form invalid or untouched?</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2127,
                                "end": 2134,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "isFormValid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs form dirth and valid?\n",
                    "description": "<p>Is form dirth and valid?</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1978,
                                "end": 1985,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatStepperModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatSnackBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FORM_FIELDS_TOKEN, FormField, ResourceService } from '../api';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { map, tap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'techbir-form',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatStepperModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class FormComponent {\r\n  entityActions$ = this.service.entityActions$.pipe(\r\n    tap((action) => {\r\n      if (action.type.endsWith('success')) {\r\n        this.snack.open($localize`Awesome work!`, 'close', {\r\n          duration: 10000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'center',\r\n        });\r\n      } else if (action.type.endsWith('error')) {\r\n        this.snack.open($localize`Form is invalid!`, 'close', {\r\n          duration: 10000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'center',\r\n        });\r\n      }\r\n    })\r\n  );\r\n  errorMessages$ = this.service.errorMessages$.pipe(\r\n    map((errors) => {\r\n      if (errors?.length > 0) {\r\n        for (const error of errors) {\r\n          this.formGroup.get(error.property)?.setErrors(error.constraints);\r\n        }\r\n      }\r\n    })\r\n  );\r\n\r\n  constructor(\r\n    @Inject(FormGroup) public formGroup: FormGroup,\r\n    @Inject(FORM_FIELDS_TOKEN)\r\n    public formFields: FormField[],\r\n    private service: ResourceService<unknown>,\r\n    private snack: MatSnackBar\r\n  ) {}\r\n\r\n  /**\r\n   * Is form dirth and valid?\r\n   * @returns\r\n   */\r\n  isFormValid() {\r\n    return this.formGroup.dirty && this.formGroup.valid;\r\n  }\r\n\r\n  /**\r\n   * Is form invalid or untouched?\r\n   * @returns\r\n   */\r\n  isFormInvalid() {\r\n    return this.formGroup.invalid || this.formGroup.untouched;\r\n  }\r\n\r\n  /**\r\n   * Submit form\r\n   */\r\n  submit() {\r\n    if (this.isFormValid()) {\r\n      const formValue = { ...this.formGroup.value };\r\n      this.service.saveItem(formValue);\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.formGroup.reset();\r\n    this.formGroup.markAsUntouched();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-component {\r\n  position: relative;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1em;\r\n  padding: 1em;\r\n  max-width: 600px;\r\n  min-width: 300px;\r\n\r\n  .form-actions {\r\n    display: flex;\r\n    gap: 2em;\r\n    button {\r\n      flex-grow: 1;\r\n    }\r\n  }\r\n\r\n  mat-form-field {\r\n    width: 100%;\r\n  }\r\n\r\n  textarea {\r\n    resize: none;\r\n    min-height: 5em;\r\n  }\r\n\r\n  input,\r\n  textarea {\r\n    letter-spacing: 2px !important;\r\n  }\r\n}\r\n",
                    "styleUrl": "./form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formFields",
                        "type": "FormField[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "ResourceService<>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snack",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formFields",
                        "type": "FormField[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "ResourceService<>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snack",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<ng-container *ngIf=\"errorMessages$ | async\"></ng-container>\n<ng-container *ngIf=\"entityActions$ | async as result\"></ng-container>\n<form class=\"form-component\" [noValidate]=\"true\">\n  <ng-container *ngFor=\"let field of formFields\">\n    <ng-container\n      *ngComponentOutlet=\"\n        field.component;\n        inputs: { name: field.name, label: field.label, icon: field.icon }\n      \"\n    ></ng-container>\n  </ng-container>\n  <div class=\"form-actions\">\n    <button\n      type=\"button\"\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"submit()\"\n      [disabled]=\"isFormInvalid()\"\n    >\n      Submit\n    </button>\n    <button type=\"button\" mat-raised-button (click)=\"reset()\">Reset</button>\n  </div>\n</form>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-4e624f6fd9245dc5d1d769f5b9227e32887ade1f1f974ed3f8aecfc789aab5b2022764c58ed40996b4af5657b81d7259ab9ce73b04495e8eac3164926421169f",
            "file": "libs/material/src/lib/website/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "APP_NAME_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { APP_NAME_TOKEN } from '../../api';\nimport '@angular/localize/init';\n\n@Component({\n  selector: 'techbir-home',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './home.component.html',\n  styles: [],\n})\nexport class HomeComponent {\n  constructor(@Inject(APP_NAME_TOKEN) public readonly appName: string) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<h1 i18n>Wellcome to {{ appName }}</h1>\n"
        },
        {
            "name": "MobileNavigationComponent",
            "id": "component-MobileNavigationComponent-56df671779bb807465fd9ba7333375b6f29b9e763603ca1d141c68e779957f3c5f6314231df8557d83a7b1e80a443816f9899b1ee48d9b21d369d3cef4c92931",
            "file": "libs/material/src/lib/navigations/mobile-navigation/mobile-navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-mobile-navigation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./mobile-navigation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-mobile-navigation',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './mobile-navigation.component.html',\n  styles: [],\n})\nexport class MobileNavigationComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>mobile-navigation works!</p>\n"
        },
        {
            "name": "NavigationComponent",
            "id": "component-NavigationComponent-b5a3d9ee9d97eb2fd68a6d780c3b0303f03a651ebe8bb9c8fea76c90371f85c2a8202aff65d667dd89d60afd1c1ded47994fa87106f0bc9d22ffd632a185332f",
            "file": "libs/material/src/lib/navigations/navigation/navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-navigation",
            "styleUrls": [
                "./navigation.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "APP_NAME_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "drawer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDrawer",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'drawer'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "isHandset",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver\r\n    .observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map((result) => {\r\n        this.isHandset = result.matches;\r\n        return this.isHandset;\r\n      }),\r\n      shareReplay()\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "lastRouteStoreKey",
                    "defaultValue": "`last_route`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "miniSidenav",
                    "defaultValue": "this.lss.get<boolean>(this.miniSideNavStoreKey, false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "miniSideNavStoreKey",
                    "defaultValue": "`mini_sidenav`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "moduleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MODULE_NAME_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "navItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "NAV_ITEMS_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "inject(Title)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "canPersistRoute",
                    "args": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "homePageClickHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navItemClickHandler",
                    "args": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMiniSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatSidenavModule",
                    "type": "module"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  Inject,\r\n  ViewChild,\r\n  inject,\r\n} from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDrawer, MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport {\r\n  APP_NAME_TOKEN,\r\n  LocalStoreService,\r\n  MODULE_NAME_TOKEN,\r\n  NAV_ITEMS_TOKEN,\r\n  NavItem,\r\n  NavItemParams,\r\n} from '../../api';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@Component({\r\n  selector: 'techbir-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n  ],\r\n})\r\nexport class NavigationComponent implements AfterViewInit {\r\n  protected readonly lastRouteStoreKey = `last_route`;\r\n  protected readonly miniSideNavStoreKey = `mini_sidenav`;\r\n\r\n  @ViewChild('drawer') drawer!: MatDrawer;\r\n\r\n  private breakpointObserver = inject(BreakpointObserver);\r\n  readonly title = inject(Title);\r\n\r\n  miniSidenav = this.lss.get<boolean>(this.miniSideNavStoreKey, false);\r\n\r\n  isHandset = false;\r\n  isHandset$: Observable<boolean> = this.breakpointObserver\r\n    .observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map((result) => {\r\n        this.isHandset = result.matches;\r\n        return this.isHandset;\r\n      }),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(\r\n    @Inject(NAV_ITEMS_TOKEN) public readonly navItems: NavItem[],\r\n    @Inject(APP_NAME_TOKEN) public readonly appName: string,\r\n    @Inject(MODULE_NAME_TOKEN) public readonly moduleName: string,\r\n    protected readonly lss: LocalStoreService,\r\n    protected readonly router: Router,\r\n    protected readonly route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    const lastRoute = this.lss.get(this.lastRouteStoreKey);\r\n    const params: NavItemParams = this.route.snapshot\r\n      .queryParams as NavItemParams;\r\n    if (params.ignoreLastRoute) {\r\n      return;\r\n    } else if (lastRoute) {\r\n      this.router.navigate([lastRoute], { relativeTo: this.route });\r\n    }\r\n  }\r\n\r\n  async toggleMiniSidenav() {\r\n    this.miniSidenav = !this.miniSidenav;\r\n    this.lss.set(this.miniSideNavStoreKey, this.miniSidenav);\r\n    await this.drawer.close();\r\n    await this.drawer.open();\r\n  }\r\n\r\n  canPersistRoute(navItem: NavItem) {\r\n    return /[a-z-]{1,}/.test(navItem.route);\r\n  }\r\n\r\n  homePageClickHandler() {\r\n    this.lss.set(this.lastRouteStoreKey, '');\r\n  }\r\n\r\n  navItemClickHandler(navItem: NavItem) {\r\n    if (this.isHandset && !this.miniSidenav) this.drawer.close();\r\n\r\n    if (this.canPersistRoute(navItem)) {\r\n      this.lss.set(this.lastRouteStoreKey, navItem.route);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sidenav-container {\r\n  height: 100%;\r\n}\r\n\r\n.sidenav {\r\n  width: 300px;\r\n  transition: width ease-in-out 400ms;\r\n}\r\n\r\n.mini-sidenav {\r\n  width: 60px;\r\n  /* transition: width ease-in-out 400ms; */\r\n}\r\n\r\n.sidenav .mat-toolbar {\r\n  background: inherit;\r\n}\r\n\r\n.mat-toolbar.mat-primary {\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1;\r\n}\r\n\r\n\r\n.nav-item {\r\n  border: 1px dashed transparent;\r\n  box-sizing: border-box;\r\n  transition: border-color ease-in-out 400ms;\r\n}\r\n\r\n\r\n\r\n@keyframes fadeInOnEnter {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.nav-item:hover mat-icon {\r\n  font-variation-settings: 'FILL' 1 !important;\r\n  animation: fadeInOnEnter 2000ms cubic-bezier(0.075, 0.82, 0.165, 1);\r\n}\r\n\r\n.material-icons {\r\n  transition: color ease-in-out 400ms;\r\n}\r\n\r\n\r\n\r\n.router-link-active {\r\n  border: 1px dashed orangered;\r\n\r\n  .material-icons {\r\n    color: orangered;\r\n  }\r\n}\r\n\r\n\r\nmat-sidenav-content {\r\n  border: 3px dashed rgba(201, 175, 175, 0.472);\r\n  box-sizing: border-box;\r\n  overflow-y: auto;\r\n}",
                    "styleUrl": "./navigation.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "navItems",
                        "type": "NavItem[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "moduleName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 65,
                "jsdoctags": [
                    {
                        "name": "navItems",
                        "type": "NavItem[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "moduleName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav\r\n    #drawer\r\n    class=\"sidenav\"\r\n    [class.mini-sidenav]=\"miniSidenav\"\r\n    fixedInViewport\r\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n    [opened]=\"(isHandset$ | async) === false\"\r\n  >\r\n    <mat-toolbar>\r\n      <img src=\"./assets/icons/icon-72x72.png\" alt=\"App Logo\" width=\"30\" />\r\n    </mat-toolbar>\r\n\r\n    <mat-nav-list>\r\n      <a\r\n        mat-list-item\r\n        (click)=\"toggleMiniSidenav()\"\r\n        i18n-aria-label\r\n        aria-label=\"Minimize Sidenav\"\r\n        [matTooltip]=\"miniSidenav ? 'Maximize Sidenav' : 'Minimize Sidenav'\"\r\n        matTooltipPosition=\"right\"\r\n      >\r\n        <span matListItemIcon style=\"transform: rotate(90deg)\">\r\n          <mat-icon [class.big-icon]=\"miniSidenav\" class=\"outline\">\r\n            {{ miniSidenav ? 'unfold_more' : 'unfold_less' }}\r\n          </mat-icon>\r\n        </span>\r\n      </a>\r\n\r\n      <!-- Nav Items -->\r\n      <a\r\n        mat-list-item\r\n        [routerLink]=\"[item.route]\"\r\n        [queryParams]=\"item.params\"\r\n        routerLinkActive=\"router-link-active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n        matTooltip=\"{{ item.name | titlecase }}\"\r\n        matTooltipPosition=\"right\"\r\n        [matTooltipDisabled]=\"!miniSidenav\"\r\n        class=\"nav-item\"\r\n        (click)=\"navItemClickHandler(item)\"\r\n        i18n-aria-label\r\n        [attr.aria-label]=\"item.name + ' Page'\"\r\n        *ngFor=\"let item of navItems\"\r\n      >\r\n        <span matListItemLine>\r\n          {{ item.name | titlecase }}\r\n        </span>\r\n\r\n        <span matListItemIcon>\r\n          <mat-icon\r\n            [class.big-icon]=\"miniSidenav\"\r\n            color=\"primary\"\r\n            class=\"outline\"\r\n          >\r\n            {{ item.icon }}\r\n          </mat-icon>\r\n        </span>\r\n      </a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <div class=\"flex column flex-grow-1\" style=\"height: 100%\">\r\n      <mat-toolbar color=\"primary\">\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"Toggle sidenav\"\r\n          mat-icon-button\r\n          (click)=\"drawer.toggle()\"\r\n        >\r\n          <mat-icon aria-label=\"Side nav toggle icon\">\r\n            {{ drawer.opened ? 'menu_open' : 'menu' }}\r\n          </mat-icon>\r\n        </button>\r\n        <span>{{ title.getTitle() }} | {{ moduleName }}</span>\r\n      </mat-toolbar>\r\n      <router-outlet></router-outlet>\r\n      <div class=\"flex-grow-1\"></div>\r\n      <mat-toolbar>Toolbar </mat-toolbar>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n"
        },
        {
            "name": "NumberComponent",
            "id": "component-NumberComponent-5daea5a303a99da36155f06df38b1987647da3193b7cb8d0e6ff6c8460fdc20586dc73f3b8a6839e4dc8db2e50d0422d2e5daeb6eb4ea0560cafb2c21da03210",
            "file": "libs/material/src/lib/form/number/number.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-number",
            "styleUrls": [
                "./number.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./number.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75,
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonFieldComponent, CommonFieldModule } from '../common-field';\n\n@Component({\n  selector: 'techbir-number',\n  standalone: true,\n  imports: [CommonFieldModule],\n  templateUrl: './number.component.html',\n  styleUrls: ['./number.component.scss'],\n})\nexport class NumberComponent extends CommonFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./number.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-form-field [appearance]=\"appearance\">\n    <mat-label>{{ label || 'Form Field' }}</mat-label>\n    <input\n      type=\"number\"\n      #inputRef\n      matInput\n      [formControlName]=\"name\"\n    />\n    <mat-icon matPrefix color=\"primary\">{{ icon || 'info' }}</mat-icon>\n    <mat-error> {{ getErrors() }}</mat-error>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-ad1806e6941970905bc8656e2a4cb2d9b9695832d60b63181eafcb9efa4733116548a2fefc3a9e217e850ae96f4db5b6f003aef23111716d4a22b34efad33398",
            "file": "libs/material/src/lib/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-page-not-found",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport '@angular/localize/init';\r\n\r\n@Component({\r\n  selector: 'techbir-page-not-found',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './page-not-found.component.html',\r\n  styles: [],\r\n})\r\nexport class PageNotFoundComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p i18n>Page Not Found</p>\r\n"
        },
        {
            "name": "PricingComponent",
            "id": "component-PricingComponent-fcfb84db9f83f066950aed8380aa5a9569f1b7d31c94c2fa7b82dd1755ab7322200e8e90a2eaed6a7cffd6b4f97c48ae5f1eac355311fc8a9a34781f82da7876",
            "file": "libs/material/src/lib/website/pricing/pricing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-pricing",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pricing.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-pricing',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './pricing.component.html',\n  styles: [],\n})\nexport class PricingComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>pricing works!</p>\n"
        },
        {
            "name": "RadioComponent",
            "id": "component-RadioComponent-ee99268e282eeda6e8d12073fcc0d00d60e6a7d9b0a734cb9e73e92aa071a247bd01e9b70cf0a72fec817fb2b8218c187ff0c37f2fcf7f88c0b1ed07bacc9006",
            "file": "libs/material/src/lib/form/radio/radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-radio",
            "styleUrls": [
                "./radio.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75,
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatRadioModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { CommonFieldComponent, CommonFieldModule } from '../common-field';\n\n@Component({\n  selector: 'techbir-radio',\n  standalone: true,\n  imports: [CommonFieldModule,  MatRadioModule],\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss'],\n})\nexport class RadioComponent extends CommonFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./radio.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-radio-group\n    [attr.aria-label]=\"label || 'Select'\"\n    [formControlName]=\"name\"\n  >\n    <fieldset>\n      <legend>{{ label || name | titlecase }}</legend>\n      <mat-radio-button *ngFor=\"let o of enums\" [value]=\"o\">\n        {{ o | titlecase }}\n      </mat-radio-button>\n    </fieldset>\n  </mat-radio-group>\n</div>\n"
        },
        {
            "name": "ResourceComponent",
            "id": "component-ResourceComponent-56f52e440f27233ee6ac157119c2f7db34aaff8e005525d44cc5da5ed20a8e2b9ae933c9850444fb69c9135d571db0723703c9656378ba7bc445a3ba1b7e371a",
            "file": "libs/material/src/lib/resource/resource.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-resource",
            "styleUrls": [
                "./resource.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./resource.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "inject(Title)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'techbir-resource',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './resource.component.html',\r\n  styleUrls: ['./resource.component.scss'],\r\n})\r\nexport class ResourceComponent {\r\n  title = inject(Title);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./resource.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<h1>Welcome to {{ title.getTitle() }}</h1>\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-5d83d9fcb3b2b54e05cd58a54e4beae67282a0641ea94b6e245b994620ac407c62e8c602cffd039c61ec087181bbcc99e27062bcafd27719caf946fca33d01a7",
            "file": "libs/material/src/lib/form/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "entities$",
                    "defaultValue": "this.service.entities$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type[]>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75,
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "resetInputValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "search",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Optional } from '@angular/core';\nimport { CommonFieldComponent, CommonFieldModule } from '../common-field';\nimport { FormGroup } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { FORM_FIELD_APPEARANCE_TOKEN, ResourceService } from '../../api';\nimport { Observable, of } from 'rxjs';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\n@Component({\n  selector: 'techbir-search',\n  standalone: true,\n  imports: [CommonFieldModule, MatAutocompleteModule],\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent extends CommonFieldComponent {\n  entities$: Observable<{ id: any; name: string }[]> = this.service.entities$;\n\n  constructor(\n    @Inject(FormGroup) formGroup: FormGroup,\n    @Optional()\n    @Inject(FORM_FIELD_APPEARANCE_TOKEN)\n    appearance: MatFormField['appearance'],\n    protected readonly service: ResourceService<any>\n  ) {\n    super(formGroup, appearance);\n  }\n\n  search() {\n    this.service.search(this.control.value);\n  }\n\n  resetInputValue() {\n    this.control.setValue('');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appearance",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "ResourceService<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appearance",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "ResourceService<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-form-field [appearance]=\"appearance\">\n    <mat-label>{{ label || name | titlecase }}</mat-label>\n    <input\n      type=\"text\"\n      style=\"visibility: collapse; position: absolute\"\n      [formControlName]=\"name\"\n    />\n    <input\n      type=\"text\"\n      matInput\n      [matAutocomplete]=\"auto\"\n      (click)=\"resetInputValue()\"\n      (input)=\"search()\"\n    />\n    <mat-icon matPrefix color=\"primary\">{{ icon }}</mat-icon>\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n      <ng-container *ngFor=\"let option of entities$ | async\">\n        <mat-option [value]=\"option.name\">{{ option.name }}</mat-option>\n      </ng-container>\n    </mat-autocomplete>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-73444dc2cd5319fba8ba3d0fba1ce37e1e9323b4fa1619f5fcce2e53d61335abdf5c3c6f22107cfb7e4eca3cd758494d95dd4936be359b07eb33ee81d645a0fd",
            "file": "libs/material/src/lib/form/select/select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-select",
            "styleUrls": [
                "./select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-select',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n})\nexport class SelectComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./select.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>select works!</p>\n"
        },
        {
            "name": "ServicesComponent",
            "id": "component-ServicesComponent-77652e5ca0145ffdb7324f389bd5e37e913196ce631a64bcffdd4cdb4320d93c96300c1239c2243690f6d0703afd81c40702b1ffbdd49f9ddf7c81cb3881bb64",
            "file": "libs/material/src/lib/website/services/services.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-services",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./services.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-services',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './services.component.html',\n  styles: [],\n})\nexport class ServicesComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>services works!</p>\n"
        },
        {
            "name": "SkeletonComponent",
            "id": "component-SkeletonComponent-39a0d59294adfb72d69d8e33e6a7a44adcecbe0bf4733e720774bb31cbb005a12bbda578fac202d0ec254e82559198114051b5572cfd97dab7b6d420f4e6e2b3",
            "file": "libs/material/src/lib/skeleton/skeleton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-skeleton",
            "styleUrls": [
                "./skeleton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./skeleton.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-skeleton',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './skeleton.component.html',\n  styleUrls: ['./skeleton.component.scss'],\n})\nexport class SkeletonComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@keyframes skeleton-loading {\r\n  0% {\r\n    background-color: hsl(200, 20%, 80%);\r\n  }\r\n  100% {\r\n    background-color: hsl(200, 20%, 95%);\r\n  }\r\n}\r\n\r\n.skeleton {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: white;\r\n  animation: skeleton-loading 1s linear infinite alternate;\r\n  border-radius: 10px;\r\n  color: transparent;\r\n}\r\n",
                    "styleUrl": "./skeleton.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"skeleton\">...</div>\n"
        },
        {
            "name": "SliderFieldComponent",
            "id": "component-SliderFieldComponent-08c3b8e4f45d703703e1f4e2d5a14fb5a93042a962376b6b0f36e14aa612f9229b9952b304beeeadb37ba5a7c4a262cf7a9fe59e44ffcbbab1744743490520d4",
            "file": "libs/material/src/lib/form/slider-field/slider-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-slider-field",
            "styleUrls": [
                "./slider-field.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slider-field.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-slider-field',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './slider-field.component.html',\n  styleUrls: ['./slider-field.component.scss'],\n})\nexport class SliderFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./slider-field.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>slider-field works!</p>\n"
        },
        {
            "name": "SwitchComponent",
            "id": "component-SwitchComponent-8bd9acc73d4e19c42cecfbf0362307c7d60b5be625c49ad8e0687b0fae365ee00d90b99711adccf6b583d6db07f989977aecf7a8ab316841d216bb7ca5769f67",
            "file": "libs/material/src/lib/form/switch/switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-switch",
            "styleUrls": [
                "./switch.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./switch.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-switch',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.scss'],\n})\nexport class SwitchComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./switch.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>switch works!</p>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-c3a3dd2f64f32bfe1d12f12847c153a44edb63c2fa515eadcd649182eaf0b91d86014f9a434ba6254962638165656f29c47dcca76218648f4ced9b89c17873c6",
            "file": "libs/material/src/lib/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-table",
            "styleUrls": [
                "./table.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "this.lss.get<string>('active') || 'id'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "count$",
                    "defaultValue": "this.service.allCount$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "data$",
                    "defaultValue": "this.service.filteredEntities$.pipe(\n    debounceTime(400),\n    map((data) => {\n      this.data = [];\n      let i = 0;\n      for (const d of data) {\n        setTimeout(() => {\n          this.data = [...this.data, d];\n        }, i * 50);\n        i++;\n      }\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "direction",
                    "defaultValue": "this.lss.get<SortDirection>('direction') || 'asc'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SortDirection",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "displayedColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "entityName",
                    "defaultValue": "this.service.entityName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "matPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "matSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "this.lss.get<number>('pageIndex') || 0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "pageSize",
                    "defaultValue": "this.lss.get<number>('pageSize') || 20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "searchControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "SEARCH_CONTROL_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "tableEvents$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "visibleColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableColumn[]",
                    "optional": false,
                    "description": "",
                    "line": 78
                }
            ],
            "methodsClass": [
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prepareQuery",
                    "args": [],
                    "optional": false,
                    "returnType": "QueryObject",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                },
                {
                    "name": "PluralPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  Inject,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\nimport { MatSortModule, MatSort, SortDirection } from '@angular/material/sort';\nimport { Observable, debounceTime, map, merge, tap } from 'rxjs';\nimport {\n  LocalStoreService,\n  QueryObject,\n  ResourceService,\n  SEARCH_CONTROL_TOKEN,\n  TABLE_COLUMNS_TOKEN,\n  TableColumn,\n} from '../api';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { PluralPipe } from '../pipes/plural.pipe';\nimport { slideInRightOnEnterAnimation } from 'angular-animations';\nimport '@angular/localize/init';\n\n@Component({\n  selector: 'techbir-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    PluralPipe,\n  ],\n  animations: [\n    slideInRightOnEnterAnimation({ anchor: 'enter', duration: 200 }),\n  ],\n})\nexport class TableComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatPaginator) matPage!: MatPaginator;\n  @ViewChild(MatSort) matSort!: MatSort;\n\n  readonly entityName = this.service.entityName;\n  readonly count$: Observable<number> = this.service.allCount$;\n  data: any[] = [];\n  readonly data$: Observable<any> = this.service.filteredEntities$.pipe(\n    debounceTime(400),\n    map((data) => {\n      this.data = [];\n      let i = 0;\n      for (const d of data) {\n        setTimeout(() => {\n          this.data = [...this.data, d];\n        }, i * 50);\n        i++;\n      }\n    })\n  );\n\n  tableEvents$!: Observable<void>;\n\n  columns!: string[];\n  displayedColumns!: string[];\n  visibleColumns!: TableColumn[];\n\n  pageSize = this.lss.get<number>('pageSize') || 20;\n  pageIndex = this.lss.get<number>('pageIndex') || 0;\n  active = this.lss.get<string>('active') || 'id';\n  direction: SortDirection = this.lss.get<SortDirection>('direction') || 'asc';\n\n  constructor(\n    private readonly service: ResourceService<any>,\n    private readonly lss: LocalStoreService,\n    @Inject(TABLE_COLUMNS_TOKEN)\n    private readonly tableColumns: TableColumn[],\n    @Inject(SEARCH_CONTROL_TOKEN)\n    public readonly searchControl: FormControl\n  ) {}\n\n  ngOnInit(): void {\n    const dColumns = this.lss.get<TableColumn[]>('visibleColumns');\n    this.columns = this.tableColumns.map((e) => e.name);\n    if (dColumns) {\n      this.visibleColumns = [...dColumns];\n      this.displayedColumns = this.visibleColumns.map((e) => e.name);\n    } else {\n      this.visibleColumns = [...this.tableColumns];\n      this.displayedColumns = [...this.columns];\n    }\n\n    this.columns.unshift('id');\n    this.displayedColumns.unshift('id');\n  }\n\n  ngAfterViewInit(): void {\n    this.tableEvents$ = merge(\n      this.matPage.page,\n      this.matSort.sortChange,\n      this.searchControl.valueChanges.pipe(\n        tap((e) => {\n          this.matPage.firstPage();\n        })\n      )\n    ).pipe(\n      debounceTime(600),\n      tap((value) => {\n        this.getAll();\n      }),\n      map((value: any) => {\n        return value;\n      })\n    );\n\n    this.getAll();\n  }\n\n  ngOnDestroy(): void {\n    // Save page config\n    const pageIndex = this.matPage.pageIndex;\n    const pageSize = this.matPage.pageSize;\n    this.lss.set('pageIndex', pageIndex);\n    this.lss.set('pageSize', pageSize);\n\n    // Save sort config\n    const direction = this.matSort.direction;\n    const active = this.matSort.active;\n    this.lss.set('direction', direction);\n    this.lss.set('active', active);\n  }\n\n  getAll() {\n    this.service.queryItem(this.prepareQuery());\n  }\n\n  private prepareQuery(): QueryObject {\n    return {\n      take: this.matPage.pageSize,\n      skip: this.matPage.pageIndex * this.matPage.pageSize,\n      orderBy: this.matSort.active,\n      orderDir: this.matSort.direction,\n      search: this.searchControl.value || undefined,\n      withDeleted: false,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\n  width: 100%;\n}\n\ntable{ \n  overflow: hidden;\n}\n\n.table-th{ \n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  \n  gap: 1em;\n}\n",
                    "styleUrl": "./table.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ResourceService<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "tableColumns",
                        "type": "TableColumn[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "searchControl",
                        "type": "FormControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 83,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ResourceService<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tableColumns",
                        "type": "TableColumn[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "searchControl",
                        "type": "FormControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<ng-container *ngIf=\"tableEvents$ | async\"></ng-container>\n<ng-container *ngIf=\"data$ | async\"></ng-container>\n\n<div>\n  <mat-form-field\n    style=\"\n      position: sticky;\n      top: 0px;\n      z-index: 1;\n      width: 100%;\n      cursor: pointer;\n      letter-spacing: 1px;\n    \"\n  >\n    <mat-label i18n>Search {{ entityName | plural }}</mat-label>\n    <input\n      matInput\n      type=\"search\"\n      autocomplete=\"off\"\n      [formControl]=\"searchControl\"\n    />\n    <mat-icon matPrefix color=\"primary\">search</mat-icon>\n  </mat-form-field>\n  <table\n    mat-table\n    [dataSource]=\"data\"\n    class=\"full-width-table\"\n    matSort\n    aria-label=\"Elements\"\n    [matSortActive]=\"active\"\n    [matSortDirection]=\"direction\"\n  >\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n    </ng-container>\n\n    <ng-container [matColumnDef]=\"col.name\" *ngFor=\"let col of visibleColumns\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\n        <div class=\"table-th\">\n          <mat-icon color=\"primary\">{{ col.icon }}</mat-icon>\n          <span>{{ col.label }}</span>\n        </div>\n      </th>\n      <td mat-cell *matCellDef=\"let row\">{{ row[col.name] }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" [@enter]></tr>\n  </table>\n\n  <mat-paginator\n    #paginator\n    [pageSize]=\"pageSize\"\n    [pageIndex]=\"pageIndex\"\n    [length]=\"count$ | async\"\n    [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n    [showFirstLastButtons]=\"true\"\n    aria-label=\"Select page\"\n    style=\"position: sticky; bottom: 0px\"\n  >\n  </mat-paginator>\n</div>\n"
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-355206ed128f832e16caf1fc35fbc11606f5f2ce6e8432d6e5c522cf1d5834b0c2b38f2327a895e6122f06f53db34556127994d105564b3cb4ae906eba8531ad",
            "file": "libs/material/src/lib/form/textarea/textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-textarea",
            "styleUrls": [
                "./textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textarea.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75,
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  CommonFieldComponent,\n  CommonFieldModule,\n} from '../common-field/common-field.component';\n\n@Component({\n  selector: 'techbir-textarea',\n  standalone: true,\n  imports: [CommonModule, CommonFieldModule],\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss'],\n})\nexport class TextareaComponent extends CommonFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./textarea.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-form-field [appearance]=\"appearance\">\n    <mat-label>{{ label || 'Form Field' }}</mat-label>\n    <textarea type=\"text\" matInput [formControlName]=\"name\"></textarea>\n    <mat-icon matPrefix color=\"primary\">{{ icon || 'info' }}</mat-icon>\n    <mat-error> {{ getErrors() }}</mat-error>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "TextFieldComponent",
            "id": "component-TextFieldComponent-4b42b03442de030e9ab873434ff89484612fb9d1b9420030d8f51384e847d722f1aaf3022e0651f30808ed028e624e78eceeec6b3f3b1f8a734911a3c95d2cd5",
            "file": "libs/material/src/lib/form/text-field/text-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-text-field",
            "styleUrls": [
                "./text-field.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-field.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "enums",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 63,
                    "type": "string[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions for readio/checkbox-group and select components\n",
                    "description": "<p>Options for readio/checkbox-group and select components</p>\n",
                    "line": 68,
                    "type": "InputOptions[]",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nFormControl instance\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "filteredOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 75,
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n  CommonFieldComponent,\n  CommonFieldModule,\n} from '../common-field/common-field.component';\n\n@Component({\n  selector: 'techbir-text-field',\n  standalone: true,\n  imports: [CommonFieldModule],\n  templateUrl: './text-field.component.html',\n  styleUrls: ['./text-field.component.scss'],\n})\nexport class TextFieldComponent extends CommonFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./text-field.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-form-field [appearance]=\"appearance\">\n    <mat-label>{{ label || 'Form Field' }}</mat-label>\n    <input #inputRef type=\"text\" matInput [formControlName]=\"name\" />\n    <mat-icon matPrefix color=\"primary\">{{ icon || 'info' }}</mat-icon>\n    <mat-error> {{ getErrors() }}</mat-error>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "UpdateComponent",
            "id": "component-UpdateComponent-48bf266a103ed8743a8b2f34e1b20a4f93f6c3839cb97dc19e7aeb0314e526f2ff27aa93e942d180ae1add309eb5afe2968ad51b81bf479e3243577d01f2082d",
            "file": "libs/material/src/lib/resource/update/update.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-update",
            "styleUrls": [
                "./update.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./update.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-update',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss'],\n})\nexport class UpdateComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./update.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>update works!</p>\n"
        },
        {
            "name": "ViewComponent",
            "id": "component-ViewComponent-ee894c47af964fe4cb8b716cc7c3e001819d067d0da3730ab8d7f8cf99c077a0ae23bf09e21b9491d2de5b5617f3f98692b95e05dae587ae90ecb17c6036f477",
            "file": "libs/material/src/lib/resource/view/view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-view",
            "styleUrls": [
                "./view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "viewComponent",
                    "defaultValue": "TableComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Optional } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { VIEW_COMPONENT_TOKEN } from '../../api/providers/view.provider';\r\nimport { TableComponent } from '../../table/table.component';\r\n\r\n@Component({\r\n  selector: 'techbir-view',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './view.component.html',\r\n  styleUrls: ['./view.component.scss'],\r\n})\r\nexport class ViewComponent {\r\n  viewComponent = TableComponent;\r\n  constructor(@Optional() @Inject(VIEW_COMPONENT_TOKEN) viewComponent: any) {\r\n    if (viewComponent) {\r\n      this.viewComponent = viewComponent;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "viewComponent",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "viewComponent",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<ng-container *ngIf=\"viewComponent\">\n  <ng-container *ngComponentOutlet=\"viewComponent\"></ng-container>\n</ng-container>\n\n<p *ngIf=\"!viewComponent\">View component is not provided!</p>\n"
        },
        {
            "name": "WebNavigationComponent",
            "id": "component-WebNavigationComponent-6b9cfd747feebe1c41828a9454375d582fb382c287c2ca0bbe208d4dee8f5f8258048d19d3e45d756efa3227cc9c1aa95e62aad423691246f2411634a57b7cbf",
            "file": "libs/material/src/lib/navigations/web-navigation/web-navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-navigation",
            "styleUrls": [
                "./web-navigation.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./web-navigation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "miniSidenav",
                    "defaultValue": "this.lss.get<boolean>(this.miniSideNavStoreKey, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "APP_NAME_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "drawer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDrawer",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'drawer'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "isHandset",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver\r\n    .observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map((result) => {\r\n        this.isHandset = result.matches;\r\n        return this.isHandset;\r\n      }),\r\n      shareReplay()\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "lastRouteStoreKey",
                    "defaultValue": "`last_route`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "miniSideNavStoreKey",
                    "defaultValue": "`mini_sidenav`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "moduleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MODULE_NAME_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "navItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "NAV_ITEMS_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "title",
                    "defaultValue": "inject(Title)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "canPersistRoute",
                    "args": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "homePageClickHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "navItemClickHandler",
                    "args": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                },
                {
                    "name": "toggleMiniSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "inheritance": {
                        "file": "NavigationComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatSidenavModule",
                    "type": "module"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { NavigationComponent } from '../navigation/navigation.component';\r\n\r\n@Component({\r\n  selector: 'techbir-navigation',\r\n  templateUrl: './web-navigation.component.html',\r\n  styleUrls: ['./web-navigation.component.css'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n  ],\r\n})\r\nexport class WebNavigationComponent\r\n  extends NavigationComponent\r\n  implements AfterViewInit\r\n{\r\n  override miniSidenav = this.lss.get<boolean>(this.miniSideNavStoreKey, true);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sidenav-container {\r\n  height: 100%;\r\n}\r\n\r\n.sidenav {\r\n  width: 300px;\r\n  transition: width ease-in-out 400ms;\r\n}\r\n\r\n.mini-sidenav {\r\n  width: 60px;\r\n  /* transition: width ease-in-out 400ms; */\r\n}\r\n\r\n.sidenav .mat-toolbar {\r\n  background: inherit;\r\n}\r\n\r\n.mat-toolbar.mat-primary {\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1;\r\n}\r\n\r\n\r\n.nav-item {\r\n  border: 1px dashed transparent;\r\n  box-sizing: border-box;\r\n  transition: border-color ease-in-out 400ms;\r\n}\r\n\r\n\r\n\r\n@keyframes fadeInOnEnter {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.nav-item:hover mat-icon {\r\n  font-variation-settings: 'FILL' 1 !important;\r\n  animation: fadeInOnEnter 2000ms cubic-bezier(0.075, 0.82, 0.165, 1);\r\n}\r\n\r\n.material-icons {\r\n  transition: color ease-in-out 400ms;\r\n}\r\n\r\n\r\n\r\n.router-link-active {\r\n  border: 1px dashed orangered;\r\n\r\n  .material-icons {\r\n    color: orangered;\r\n  }\r\n}\r\n\r\n\r\nmat-sidenav-content {\r\n  box-sizing: border-box;\r\n  overflow-y: auto;\r\n}",
                    "styleUrl": "./web-navigation.component.css"
                }
            ],
            "stylesData": "",
            "extends": [
                "NavigationComponent"
            ],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav\r\n    #drawer\r\n    class=\"sidenav\"\r\n    [class.mini-sidenav]=\"miniSidenav\"\r\n    fixedInViewport\r\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n    [opened]=\"(isHandset$ | async) === false\"\r\n  >\r\n    <mat-toolbar>\r\n      <img src=\"./assets/icons/icon-72x72.png\" alt=\"App Logo\" width=\"30\" />\r\n    </mat-toolbar>\r\n\r\n    <mat-nav-list>\r\n      <a\r\n        mat-list-item\r\n        (click)=\"toggleMiniSidenav()\"\r\n        i18n-aria-label\r\n        aria-label=\"Minimize Sidenav\"\r\n        [matTooltip]=\"miniSidenav ? 'Maximize Sidenav' : 'Minimize Sidenav'\"\r\n        matTooltipPosition=\"right\"\r\n      >\r\n        <span matListItemIcon style=\"transform: rotate(90deg)\">\r\n          <mat-icon [class.big-icon]=\"miniSidenav\" class=\"outline\">\r\n            {{ miniSidenav ? 'unfold_more' : 'unfold_less' }}\r\n          </mat-icon>\r\n        </span>\r\n      </a>\r\n\r\n      <!-- Nav Items -->\r\n      <a\r\n        mat-list-item\r\n        [routerLink]=\"[item.route]\"\r\n        routerLinkActive=\"router-link-active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n        matTooltip=\"{{ item.name | titlecase }}\"\r\n        matTooltipPosition=\"right\"\r\n        [matTooltipDisabled]=\"!miniSidenav\"\r\n        class=\"nav-item\"\r\n        (click)=\"navItemClickHandler(item)\"\r\n        i18n-aria-label\r\n        [attr.aria-label]=\"item.name + ' Page'\"\r\n        *ngFor=\"let item of navItems\"\r\n      >\r\n        <span matListItemLine>\r\n          {{ item.name | titlecase }}\r\n        </span>\r\n\r\n        <span matListItemIcon>\r\n          <mat-icon\r\n            [class.big-icon]=\"miniSidenav\"\r\n            color=\"primary\"\r\n            class=\"outline\"\r\n          >\r\n            {{ item.icon }}\r\n          </mat-icon>\r\n        </span>\r\n      </a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n      >\r\n        <mat-icon aria-label=\"Side nav toggle icon\">\r\n          {{ drawer.opened ? 'menu_open' : 'menu' }}\r\n        </mat-icon>\r\n      </button>\r\n      <span>{{ title.getTitle() }}</span>\r\n    </mat-toolbar>\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n"
        },
        {
            "name": "WebsiteComponent",
            "id": "component-WebsiteComponent-03c0f6d354732186f7c6a23e2d22f9d595671456ecc385139faf4286cec6b88cb71e35bfc00f87d0561504d86487a52bd2d1da61c0b0f14a47a8f3a096d6a505",
            "file": "libs/material/src/lib/website/website.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-website",
            "styleUrls": [
                "./website.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./website.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'techbir-website',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './website.component.html',\r\n  styleUrls: ['./website.component.scss'],\r\n})\r\nexport class WebsiteComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./website.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<router-outlet></router-outlet>"
        }
    ],
    "modules": [
        {
            "name": "CommonFieldModule",
            "id": "module-CommonFieldModule-6ed741e70ae90c81fe2dceaf863ec20a56b07b17198a6a4d6b5873980c9e2bb9931f5686160aad8de1d267938d6352cc10e0877f3c8d0d738073373e3ca9de97",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/lib/form/common-field/common-field.component.ts",
            "methods": [],
            "sourceCode": "import {\r\n  Component,\r\n  Inject,\r\n  Input,\r\n  NgModule,\r\n  OnInit,\r\n  Optional,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n} from '@angular/forms';\r\nimport {\r\n  FORM_FIELD_APPEARANCE_TOKEN,\r\n  InputOptions,\r\n  ResourceService,\r\n} from '../../api';\r\nimport { MatFormField, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Observable, map } from 'rxjs';\r\n\r\nconst formModules = [\r\n  CommonModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [...formModules],\r\n  exports: [...formModules],\r\n})\r\nexport class CommonFieldModule {}\r\n\r\n@Component({ template: '' })\r\nexport class CommonFieldComponent implements OnInit {\r\n  /**\r\n   * Property name\r\n   */\r\n  @Input() name!: string;\r\n\r\n  /**\r\n   * Property label\r\n   */\r\n  @Input() label = '';\r\n\r\n  /**\r\n   * Property icon\r\n   */\r\n  @Input() icon = '';\r\n\r\n  /**\r\n   * Options for readio/checkbox-group and select components\r\n   */\r\n  @Input() enums?: string[];\r\n\r\n  /**\r\n   * Options for readio/checkbox-group and select components\r\n   */\r\n  @Input() options?: InputOptions[];\r\n\r\n  /**\r\n   * FormControl instance\r\n   */\r\n  control!: AbstractControl;\r\n\r\n  filteredOptions$?: Observable<any>;\r\n\r\n  constructor(\r\n    @Inject(FormGroup) public readonly formGroup: FormGroup,\r\n    @Optional()\r\n    @Inject(FORM_FIELD_APPEARANCE_TOKEN)\r\n    public readonly appearance: MatFormField['appearance']\r\n  ) {\r\n    if (!appearance) this.appearance = 'outline';\r\n    if (!formGroup) throw new Error('FormGroup must be provided!');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const foundControl = this.formGroup.get(this.name);\r\n\r\n    if (!foundControl) {\r\n      throw new Error(`${this.name} control is not found in formGroup!`);\r\n    }\r\n\r\n    this.control = foundControl;\r\n\r\n    if (this.enums) {\r\n      this.options = this.enums.map((e) => ({ id: e, label: e, value: e }));\r\n    }\r\n\r\n    this.filteredOptions$ = this.control.valueChanges.pipe(\r\n      map((value) => {\r\n        return this.options?.filter((e) => {\r\n          return (e.value as string)\r\n            ?.toLowerCase()\r\n            .includes((value as string).toLowerCase() || '');\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  getErrors() {\r\n    return Object.values(this.control.errors || {}).join(', ');\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "APP_NAME_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'APP_NAME_TOKEN'",
                "rawdescription": "Sometimes we deploy multiple application together.\r\nThese applications are using the same components and services.\r\nTo differenciate the apps provide appname for each module if required.",
                "description": "<p>Sometimes we deploy multiple application together.\nThese applications are using the same components and services.\nTo differenciate the apps provide appname for each module if required.</p>\n"
            },
            {
                "name": "DATE_PICKER_FILTER_STRATEGY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'DATE_PICKER_FILTER_STRATEGY'"
            },
            {
                "name": "ENTITY_NAME_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/services/resource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'ENTITY_NAME_TOKEN'"
            },
            {
                "name": "FORM_FIELD_APPEARANCE_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'FORM_FIELD_APPEARANCE_TOKEN'"
            },
            {
                "name": "FORM_FIELDS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'FORM_FIELDS_TOKEN'",
                "rawdescription": "Inject list of FormFields",
                "description": "<p>Inject list of FormFields</p>\n"
            },
            {
                "name": "formModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/common-field/common-field.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  CommonModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n]"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/resource works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/skeleton works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/table works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    label: 'Category',\r\n    icon: 'category',\r\n    enums: ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh'],\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/text-field works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: { name: 'active', label: 'Is user active?' },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/checkbox works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'permissions',\r\n    label: 'Select User Roles',\r\n    options: [\r\n      {\r\n        id: 1,\r\n        label: 'User',\r\n        children: [\r\n          { id: 'read', label: 'Read' },\r\n          { id: 'write', label: 'Write' },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        label: 'Category',\r\n        children: [\r\n          { id: 'read', label: 'Read' },\r\n          { id: 'write', label: 'Write' },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/checkbox works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'dob',\r\n    label: 'Date of Birth',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/date works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'range',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/date-range works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: { name: 'dob', label: 'Dob & Time' },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/date-time works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: { name: 'age', label: 'Age', icon: 'attach_money' },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/number works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: { name: 'gender', label: 'Gender', enums: ['male', 'female'] },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/radio works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'category',\r\n    icon: 'category',\r\n    label: 'Select Category',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/search works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/select works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/slider-field works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/switch works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    label: 'First Name',\r\n    icon: 'badge',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/text-field works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: { name: 'name' },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/textarea works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/config works!/gi)).toBeTruthy();\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormComponent>",
                "defaultValue": "{\r\n  component: FormComponent,\r\n  title: 'FormComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ResourceComponent>",
                "defaultValue": "{\r\n  component: ResourceComponent,\r\n  title: 'ResourceComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SkeletonComponent>",
                "defaultValue": "{\r\n  component: SkeletonComponent,\r\n  title: 'SkeletonComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\r\n  component: TableComponent,\r\n  title: 'TableComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AutocompleteComponent>",
                "defaultValue": "{\r\n  component: AutocompleteComponent,\r\n  title: 'AutocompleteComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule, MatAutocompleteModule],\r\n      providers: [provideFormGroup({ name: '' })],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\r\n  component: CheckboxComponent,\r\n  title: 'CheckboxComponent',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule, MatCheckboxModule],\r\n      providers: [provideFormGroup({ active: false })],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxGroupComponent>",
                "defaultValue": "{\r\n  component: CheckboxGroupComponent,\r\n  title: 'CheckboxGroupComponent',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule, MatCheckboxModule],\r\n      providers: [provideFormGroup({ permissions: '' })],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateComponent>",
                "defaultValue": "{\r\n  component: DateComponent,\r\n  title: 'DateComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule, MatDatepickerModule, MatNativeDateModule],\r\n      providers: [provideFormGroup({ dob: '' })],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateRangeComponent>",
                "defaultValue": "{\r\n  component: DateRangeComponent,\r\n  title: 'DateRangeComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule, MatDatepickerModule, MatNativeDateModule],\r\n      providers: [\r\n        provideFormGroup({ range: '' }),\r\n        // provideDateRangeSelectionStrategy(FiveDayRangeSelectionStrategy),\r\n        // provideDateRangeSelectionStrategy(WeekDaysStrategy),\r\n        provideDateRangeSelectionStrategy(WeekEndsStrategy),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateTimeComponent>",
                "defaultValue": "{\r\n  component: DateTimeComponent,\r\n  title: 'DateTimeComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        CommonFieldModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n      ],\r\n      providers: [provideFormGroup({ dob: '' })],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NumberComponent>",
                "defaultValue": "{\r\n  component: NumberComponent,\r\n  title: 'NumberComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule],\r\n      providers: [provideFormGroup({ age: '' })],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioComponent>",
                "defaultValue": "{\r\n  component: RadioComponent,\r\n  title: 'RadioComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule],\r\n      providers: [provideFormGroup({ gender: '' })],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SearchComponent>",
                "defaultValue": "{\r\n  component: SearchComponent,\r\n  title: 'SearchComponent',\r\n\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule],\r\n      providers: [\r\n        provideFormGroup({ category: '' }),\r\n        {\r\n          provide: ResourceService,\r\n          useClass: MockResourceService,\r\n        },\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectComponent>",
                "defaultValue": "{\r\n  component: SelectComponent,\r\n  title: 'SelectComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SliderFieldComponent>",
                "defaultValue": "{\r\n  component: SliderFieldComponent,\r\n  title: 'SliderFieldComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SwitchComponent>",
                "defaultValue": "{\r\n  component: SwitchComponent,\r\n  title: 'SwitchComponent',\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextFieldComponent>",
                "defaultValue": "{\r\n  component: TextFieldComponent,\r\n  title: 'TextFieldComponent',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule],\r\n      providers: [provideFormGroup({ name: '' })],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextareaComponent>",
                "defaultValue": "{\r\n  component: TextareaComponent,\r\n  title: 'TextareaComponent',\r\n\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule],\r\n      providers: [\r\n        provideFormGroup({ name: '' }),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ConfigComponent>",
                "defaultValue": "{\r\n  component: ConfigComponent,\r\n  title: 'ConfigComponent',\r\n}"
            },
            {
                "name": "MODULE_NAME_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'MODULE_NAME_TOKEN'",
                "rawdescription": "Sometimes we deploy multiple application together.\r\nThese applications are using the same components and services.\r\nTo differenciate the apps provide appname for each module if required.",
                "description": "<p>Sometimes we deploy multiple application together.\nThese applications are using the same components and services.\nTo differenciate the apps provide appname for each module if required.</p>\n"
            },
            {
                "name": "NAV_ITEMS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'NAV_ITEMS_TOKEN'"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    label: 'Category',\r\n    icon: 'category',\r\n    enums: ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh'],\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'active',\r\n    label: 'Is user active?',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'permissions',\r\n    label: 'Select User Roles',\r\n    options: [\r\n      {\r\n        id: 'user',\r\n        label: 'User',\r\n        children: [\r\n          { id: 'read', label: 'Read' },\r\n          { id: 'write', label: 'Write' },\r\n        ],\r\n      },\r\n      {\r\n        id: 'category',\r\n        label: 'Category',\r\n        children: [\r\n          { id: 'read', label: 'Read' },\r\n          { id: 'write', label: 'Write' },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'dob',\r\n    label: 'Date of Birth',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'range',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: { name: 'dob', label: 'Dob & Time' },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: { name: 'age', label: 'Age', icon: 'attach_money' },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: { name: 'gender', label: 'Gender', enums: ['male', 'female'] },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'category',\r\n    icon: 'category',\r\n    label: 'Select Category',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    label: 'First Name',\r\n    icon: 'badge',\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: { name: 'name' },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "ResourceRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/resource.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Routes",
                "defaultValue": "(appName: string, moduleName: string, entityName: string) => [\r\n  {\r\n    path: '',\r\n    loadComponent: () =>\r\n      import('../navigations').then((n) => n.NavigationComponent),\r\n    providers: [\r\n      LocalStoreService,\r\n      ResourceService,\r\n      provideSearchControl(),\r\n      provideAppName(appName),\r\n      provideModuleName(moduleName),\r\n      provideEntityName(entityName),\r\n      provideNavItems([\r\n        {\r\n          icon: 'home',\r\n          name: $localize`Home`,\r\n          route: '../',\r\n          params: { ignoreLastRoute: true },\r\n        },\r\n        { icon: 'overview', name: $localize`Overview`, route: './' },\r\n        { icon: 'dashboard', name: $localize`Dashboard`, route: 'dashboard' },\r\n        { icon: 'dataset', name: $localize`View`, route: 'view' },\r\n        { icon: 'add_box', name: $localize`Create`, route: 'create' },\r\n        { icon: 'settings', name: $localize`Config`, route: 'config' },\r\n      ]),\r\n    ],\r\n\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadComponent: () =>\r\n          import('./resource.component').then((c) => c.ResourceComponent),\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        loadComponent: () =>\r\n          import('./dashboard/dashboard.component').then(\r\n            (c) => c.DashboardComponent\r\n          ),\r\n        providers: [provideModuleName('Dashboard')],\r\n      },\r\n\r\n      {\r\n        path: 'view',\r\n        loadComponent: () =>\r\n          import('./view/view.component').then((c) => c.ViewComponent),\r\n        providers: [provideModuleName('View')],\r\n      },\r\n      {\r\n        path: 'view/:id',\r\n        loadComponent: () =>\r\n          import('./detail/detail.component').then((c) => c.DetailComponent),\r\n        providers: [provideModuleName('Detail')],\r\n      },\r\n      {\r\n        path: 'create',\r\n        loadComponent: () =>\r\n          import('./create/create.component').then((c) => c.CreateComponent),\r\n        providers: [provideModuleName('Create')],\r\n      },\r\n      {\r\n        path: 'update/:id',\r\n        loadComponent: () =>\r\n          import('./update/update.component').then((c) => c.UpdateComponent),\r\n        providers: [provideModuleName('Update')],\r\n      },\r\n      {\r\n        path: 'delete/:id',\r\n        loadComponent: () =>\r\n          import('./delete/delete.component').then((c) => c.DeleteComponent),\r\n        providers: [provideModuleName('Delete')],\r\n      },\r\n      {\r\n        path: 'config',\r\n        loadComponent: () =>\r\n          import('./config/config.component').then((c) => c.ConfigComponent),\r\n        providers: [provideModuleName('Config')],\r\n      },\r\n    ],\r\n  },\r\n]"
            },
            {
                "name": "SEARCH_CONTROL_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/table.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'SEARCH_CONTROL_TOKEN'"
            },
            {
                "name": "TABLE_COLUMNS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/table.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'TABLE_COLUMNS_TOKEN'"
            },
            {
                "name": "UrlInterceptorFn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/middlewares/url.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(\r\n  req: HttpRequest<any>,\r\n  next: HttpHandlerFn\r\n): Observable<HttpEvent<any>> => {\r\n  const url = req.url;\r\n  const apiReq = req.clone({ url: 'http://localhost:3000/' + url });\r\n  return next(apiReq);\r\n}"
            },
            {
                "name": "VIEW_COMPONENT_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/providers/view.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'VIEW_COMPONENT_TOKEN'"
            }
        ],
        "functions": [
            {
                "name": "DisableWeekEndsStategy",
                "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "date",
                        "type": "D",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "date",
                        "type": "D",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideAppName",
                "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideDatePickerFilter",
                "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "dateFilter",
                        "type": "DateFilterFn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "dateFilter",
                        "type": "DateFilterFn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideDateRangeSelectionStrategy",
                "file": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "strategy",
                        "type": "Type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "strategy",
                        "type": "Type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideEntityName",
                "file": "libs/material/src/lib/api/services/resource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideFormFieldAppearance",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "appearance",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "appearance",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideFormFields",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fields",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "fields",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideFormGroup",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "record",
                        "type": "Record",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "record",
                        "type": "Record",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideModuleName",
                "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Module name and app name is used for common services to identify the resource.\nFor exmaple LocalStore services use appname and module name to persist configurations in browser localstoreage.</p>\n",
                "args": [
                    {
                        "name": "appName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 919,
                            "end": 926,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "appName"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 913,
                            "end": 918,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "tagName": {
                            "pos": 932,
                            "end": 939,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "returns"
                        },
                        "comment": ""
                    }
                ]
            },
            {
                "name": "provideNavItems",
                "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "navItems",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "navItems",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideSearchControl",
                "file": "libs/material/src/lib/api/providers/table.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Provider"
            },
            {
                "name": "provideTableColumns",
                "file": "libs/material/src/lib/api/providers/table.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "tableColumns",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "tableColumns",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideViewComponent",
                "file": "libs/material/src/lib/api/providers/view.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "viewComponent",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 123,
                            "end": 136,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "viewComponent"
                        },
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 117,
                            "end": 122,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Table, List, CardGrid etc.</p>\n"
                    },
                    {
                        "tagName": {
                            "pos": 169,
                            "end": 176,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "returns"
                        },
                        "comment": ""
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "ErrorType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/services/resource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "FormField",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "InputOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/types/input-options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "InputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"checkbox\" | \"date\" | \"date-range\" | \"date-time\" | \"number\" | \"radio\" | \"select\" | \"slider\" | \"switch\" | \"text\" | \"textarea\"",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "NavItemParams",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "QueryObject",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/services/resource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "SelectItemOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/providers/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormComponent>",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ResourceComponent>",
                "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SkeletonComponent>",
                "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AutocompleteComponent>",
                "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxGroupComponent>",
                "file": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateComponent>",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateRangeComponent>",
                "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateTimeComponent>",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NumberComponent>",
                "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioComponent>",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SearchComponent>",
                "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectComponent>",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SliderFieldComponent>",
                "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SwitchComponent>",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextFieldComponent>",
                "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextareaComponent>",
                "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ConfigComponent>",
                "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "TableColumn",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/providers/table.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/material/src/lib/api/providers/app-config.provider.ts": [
                {
                    "name": "APP_NAME_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'APP_NAME_TOKEN'",
                    "rawdescription": "Sometimes we deploy multiple application together.\r\nThese applications are using the same components and services.\r\nTo differenciate the apps provide appname for each module if required.",
                    "description": "<p>Sometimes we deploy multiple application together.\nThese applications are using the same components and services.\nTo differenciate the apps provide appname for each module if required.</p>\n"
                },
                {
                    "name": "MODULE_NAME_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'MODULE_NAME_TOKEN'",
                    "rawdescription": "Sometimes we deploy multiple application together.\r\nThese applications are using the same components and services.\r\nTo differenciate the apps provide appname for each module if required.",
                    "description": "<p>Sometimes we deploy multiple application together.\nThese applications are using the same components and services.\nTo differenciate the apps provide appname for each module if required.</p>\n"
                }
            ],
            "libs/material/src/lib/api/providers/date-filter.provider.ts": [
                {
                    "name": "DATE_PICKER_FILTER_STRATEGY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'DATE_PICKER_FILTER_STRATEGY'"
                }
            ],
            "libs/material/src/lib/api/services/resource.service.ts": [
                {
                    "name": "ENTITY_NAME_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/services/resource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'ENTITY_NAME_TOKEN'"
                }
            ],
            "libs/material/src/lib/api/providers/form.provider.ts": [
                {
                    "name": "FORM_FIELD_APPEARANCE_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'FORM_FIELD_APPEARANCE_TOKEN'"
                },
                {
                    "name": "FORM_FIELDS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'FORM_FIELDS_TOKEN'",
                    "rawdescription": "Inject list of FormFields",
                    "description": "<p>Inject list of FormFields</p>\n"
                }
            ],
            "libs/material/src/lib/form/common-field/common-field.component.ts": [
                {
                    "name": "formModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/common-field/common-field.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  CommonModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n]"
                }
            ],
            "libs/material/src/lib/form/form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormComponent>",
                    "defaultValue": "{\r\n  component: FormComponent,\r\n  title: 'FormComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/lib/resource/resource.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/resource works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ResourceComponent>",
                    "defaultValue": "{\r\n  component: ResourceComponent,\r\n  title: 'ResourceComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/lib/skeleton/skeleton.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/skeleton works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SkeletonComponent>",
                    "defaultValue": "{\r\n  component: SkeletonComponent,\r\n  title: 'SkeletonComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/lib/table/table.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/table works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\r\n  component: TableComponent,\r\n  title: 'TableComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    label: 'Category',\r\n    icon: 'category',\r\n    enums: ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh'],\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/text-field works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AutocompleteComponent>",
                    "defaultValue": "{\r\n  component: AutocompleteComponent,\r\n  title: 'AutocompleteComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule, MatAutocompleteModule],\r\n      providers: [provideFormGroup({ name: '' })],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    label: 'Category',\r\n    icon: 'category',\r\n    enums: ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh'],\r\n  },\r\n}"
                }
            ],
            "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: { name: 'active', label: 'Is user active?' },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/checkbox works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\r\n  component: CheckboxComponent,\r\n  title: 'CheckboxComponent',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule, MatCheckboxModule],\r\n      providers: [provideFormGroup({ active: false })],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'active',\r\n    label: 'Is user active?',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'permissions',\r\n    label: 'Select User Roles',\r\n    options: [\r\n      {\r\n        id: 1,\r\n        label: 'User',\r\n        children: [\r\n          { id: 'read', label: 'Read' },\r\n          { id: 'write', label: 'Write' },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        label: 'Category',\r\n        children: [\r\n          { id: 'read', label: 'Read' },\r\n          { id: 'write', label: 'Write' },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/checkbox works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxGroupComponent>",
                    "defaultValue": "{\r\n  component: CheckboxGroupComponent,\r\n  title: 'CheckboxGroupComponent',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule, MatCheckboxModule],\r\n      providers: [provideFormGroup({ permissions: '' })],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'permissions',\r\n    label: 'Select User Roles',\r\n    options: [\r\n      {\r\n        id: 'user',\r\n        label: 'User',\r\n        children: [\r\n          { id: 'read', label: 'Read' },\r\n          { id: 'write', label: 'Write' },\r\n        ],\r\n      },\r\n      {\r\n        id: 'category',\r\n        label: 'Category',\r\n        children: [\r\n          { id: 'read', label: 'Read' },\r\n          { id: 'write', label: 'Write' },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n}"
                }
            ],
            "libs/material/src/lib/form/date/date.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'dob',\r\n    label: 'Date of Birth',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/date works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateComponent>",
                    "defaultValue": "{\r\n  component: DateComponent,\r\n  title: 'DateComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule, MatDatepickerModule, MatNativeDateModule],\r\n      providers: [provideFormGroup({ dob: '' })],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'dob',\r\n    label: 'Date of Birth',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/lib/form/date-range/date-range.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'range',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/date-range works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateRangeComponent>",
                    "defaultValue": "{\r\n  component: DateRangeComponent,\r\n  title: 'DateRangeComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule, MatDatepickerModule, MatNativeDateModule],\r\n      providers: [\r\n        provideFormGroup({ range: '' }),\r\n        // provideDateRangeSelectionStrategy(FiveDayRangeSelectionStrategy),\r\n        // provideDateRangeSelectionStrategy(WeekDaysStrategy),\r\n        provideDateRangeSelectionStrategy(WeekEndsStrategy),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'range',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/lib/form/date-time/date-time.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: { name: 'dob', label: 'Dob & Time' },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/date-time works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateTimeComponent>",
                    "defaultValue": "{\r\n  component: DateTimeComponent,\r\n  title: 'DateTimeComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        CommonFieldModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n      ],\r\n      providers: [provideFormGroup({ dob: '' })],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: { name: 'dob', label: 'Dob & Time' },\r\n}"
                }
            ],
            "libs/material/src/lib/form/number/number.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: { name: 'age', label: 'Age', icon: 'attach_money' },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/number works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NumberComponent>",
                    "defaultValue": "{\r\n  component: NumberComponent,\r\n  title: 'NumberComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule],\r\n      providers: [provideFormGroup({ age: '' })],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: { name: 'age', label: 'Age', icon: 'attach_money' },\r\n}"
                }
            ],
            "libs/material/src/lib/form/radio/radio.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: { name: 'gender', label: 'Gender', enums: ['male', 'female'] },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/radio works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioComponent>",
                    "defaultValue": "{\r\n  component: RadioComponent,\r\n  title: 'RadioComponent',\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule],\r\n      providers: [provideFormGroup({ gender: '' })],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: { name: 'gender', label: 'Gender', enums: ['male', 'female'] },\r\n}"
                }
            ],
            "libs/material/src/lib/form/search/search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'category',\r\n    icon: 'category',\r\n    label: 'Select Category',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/search works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SearchComponent>",
                    "defaultValue": "{\r\n  component: SearchComponent,\r\n  title: 'SearchComponent',\r\n\r\n  decorators: [\r\n    applicationConfig({ providers: [provideAnimations()] }),\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule],\r\n      providers: [\r\n        provideFormGroup({ category: '' }),\r\n        {\r\n          provide: ResourceService,\r\n          useClass: MockResourceService,\r\n        },\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'category',\r\n    icon: 'category',\r\n    label: 'Select Category',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/lib/form/select/select.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/select works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectComponent>",
                    "defaultValue": "{\r\n  component: SelectComponent,\r\n  title: 'SelectComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/slider-field works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SliderFieldComponent>",
                    "defaultValue": "{\r\n  component: SliderFieldComponent,\r\n  title: 'SliderFieldComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/lib/form/switch/switch.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/switch works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SwitchComponent>",
                    "defaultValue": "{\r\n  component: SwitchComponent,\r\n  title: 'SwitchComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/lib/form/text-field/text-field.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    label: 'First Name',\r\n    icon: 'badge',\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/text-field works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextFieldComponent>",
                    "defaultValue": "{\r\n  component: TextFieldComponent,\r\n  title: 'TextFieldComponent',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule],\r\n      providers: [provideFormGroup({ name: '' })],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'name',\r\n    label: 'First Name',\r\n    icon: 'badge',\r\n  },\r\n}"
                }
            ],
            "libs/material/src/lib/form/textarea/textarea.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: { name: 'name' },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/textarea works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextareaComponent>",
                    "defaultValue": "{\r\n  component: TextareaComponent,\r\n  title: 'TextareaComponent',\r\n\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonFieldModule],\r\n      providers: [\r\n        provideFormGroup({ name: '' }),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: { name: 'name' },\r\n}"
                }
            ],
            "libs/material/src/lib/resource/config/config.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/config works!/gi)).toBeTruthy();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ConfigComponent>",
                    "defaultValue": "{\r\n  component: ConfigComponent,\r\n  title: 'ConfigComponent',\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/src/lib/api/providers/nav-item.provider.ts": [
                {
                    "name": "NAV_ITEMS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'NAV_ITEMS_TOKEN'"
                }
            ],
            "libs/material/src/lib/resource/resource.routes.ts": [
                {
                    "name": "ResourceRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/resource.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Routes",
                    "defaultValue": "(appName: string, moduleName: string, entityName: string) => [\r\n  {\r\n    path: '',\r\n    loadComponent: () =>\r\n      import('../navigations').then((n) => n.NavigationComponent),\r\n    providers: [\r\n      LocalStoreService,\r\n      ResourceService,\r\n      provideSearchControl(),\r\n      provideAppName(appName),\r\n      provideModuleName(moduleName),\r\n      provideEntityName(entityName),\r\n      provideNavItems([\r\n        {\r\n          icon: 'home',\r\n          name: $localize`Home`,\r\n          route: '../',\r\n          params: { ignoreLastRoute: true },\r\n        },\r\n        { icon: 'overview', name: $localize`Overview`, route: './' },\r\n        { icon: 'dashboard', name: $localize`Dashboard`, route: 'dashboard' },\r\n        { icon: 'dataset', name: $localize`View`, route: 'view' },\r\n        { icon: 'add_box', name: $localize`Create`, route: 'create' },\r\n        { icon: 'settings', name: $localize`Config`, route: 'config' },\r\n      ]),\r\n    ],\r\n\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadComponent: () =>\r\n          import('./resource.component').then((c) => c.ResourceComponent),\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        loadComponent: () =>\r\n          import('./dashboard/dashboard.component').then(\r\n            (c) => c.DashboardComponent\r\n          ),\r\n        providers: [provideModuleName('Dashboard')],\r\n      },\r\n\r\n      {\r\n        path: 'view',\r\n        loadComponent: () =>\r\n          import('./view/view.component').then((c) => c.ViewComponent),\r\n        providers: [provideModuleName('View')],\r\n      },\r\n      {\r\n        path: 'view/:id',\r\n        loadComponent: () =>\r\n          import('./detail/detail.component').then((c) => c.DetailComponent),\r\n        providers: [provideModuleName('Detail')],\r\n      },\r\n      {\r\n        path: 'create',\r\n        loadComponent: () =>\r\n          import('./create/create.component').then((c) => c.CreateComponent),\r\n        providers: [provideModuleName('Create')],\r\n      },\r\n      {\r\n        path: 'update/:id',\r\n        loadComponent: () =>\r\n          import('./update/update.component').then((c) => c.UpdateComponent),\r\n        providers: [provideModuleName('Update')],\r\n      },\r\n      {\r\n        path: 'delete/:id',\r\n        loadComponent: () =>\r\n          import('./delete/delete.component').then((c) => c.DeleteComponent),\r\n        providers: [provideModuleName('Delete')],\r\n      },\r\n      {\r\n        path: 'config',\r\n        loadComponent: () =>\r\n          import('./config/config.component').then((c) => c.ConfigComponent),\r\n        providers: [provideModuleName('Config')],\r\n      },\r\n    ],\r\n  },\r\n]"
                }
            ],
            "libs/material/src/lib/api/providers/table.provider.ts": [
                {
                    "name": "SEARCH_CONTROL_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/table.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'SEARCH_CONTROL_TOKEN'"
                },
                {
                    "name": "TABLE_COLUMNS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/table.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'TABLE_COLUMNS_TOKEN'"
                }
            ],
            "libs/material/src/lib/api/middlewares/url.interceptor.ts": [
                {
                    "name": "UrlInterceptorFn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/middlewares/url.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(\r\n  req: HttpRequest<any>,\r\n  next: HttpHandlerFn\r\n): Observable<HttpEvent<any>> => {\r\n  const url = req.url;\r\n  const apiReq = req.clone({ url: 'http://localhost:3000/' + url });\r\n  return next(apiReq);\r\n}"
                }
            ],
            "libs/material/src/lib/api/providers/view.provider.ts": [
                {
                    "name": "VIEW_COMPONENT_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/providers/view.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'VIEW_COMPONENT_TOKEN'"
                }
            ]
        },
        "groupedFunctions": {
            "libs/material/src/lib/api/providers/date-filter.provider.ts": [
                {
                    "name": "DisableWeekEndsStategy",
                    "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "date",
                            "type": "D",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideDatePickerFilter",
                    "file": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "dateFilter",
                            "type": "DateFilterFn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "dateFilter",
                            "type": "DateFilterFn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/app-config.provider.ts": [
                {
                    "name": "provideAppName",
                    "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "appName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "appName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideModuleName",
                    "file": "libs/material/src/lib/api/providers/app-config.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Module name and app name is used for common services to identify the resource.\nFor exmaple LocalStore services use appname and module name to persist configurations in browser localstoreage.</p>\n",
                    "args": [
                        {
                            "name": "appName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 919,
                                "end": 926,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "appName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 913,
                                "end": 918,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 932,
                                "end": 939,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts": [
                {
                    "name": "provideDateRangeSelectionStrategy",
                    "file": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "strategy",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "strategy",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/services/resource.service.ts": [
                {
                    "name": "provideEntityName",
                    "file": "libs/material/src/lib/api/services/resource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/form.provider.ts": [
                {
                    "name": "provideFormFieldAppearance",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "appearance",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "appearance",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideFormFields",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fields",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideFormGroup",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "record",
                            "type": "Record",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "record",
                            "type": "Record",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/nav-item.provider.ts": [
                {
                    "name": "provideNavItems",
                    "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "navItems",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "navItems",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/table.provider.ts": [
                {
                    "name": "provideSearchControl",
                    "file": "libs/material/src/lib/api/providers/table.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Provider"
                },
                {
                    "name": "provideTableColumns",
                    "file": "libs/material/src/lib/api/providers/table.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "tableColumns",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "tableColumns",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/providers/view.provider.ts": [
                {
                    "name": "provideViewComponent",
                    "file": "libs/material/src/lib/api/providers/view.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "viewComponent",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 123,
                                "end": 136,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "viewComponent"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 117,
                                "end": 122,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Table, List, CardGrid etc.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 169,
                                "end": 176,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/material/src/lib/api/services/resource.service.ts": [
                {
                    "name": "ErrorType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/services/resource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "QueryObject",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/services/resource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/api/providers/form.provider.ts": [
                {
                    "name": "FormField",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "InputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"checkbox\" | \"date\" | \"date-range\" | \"date-time\" | \"number\" | \"radio\" | \"select\" | \"slider\" | \"switch\" | \"text\" | \"textarea\"",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "SelectItemOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/providers/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/api/types/input-options.ts": [
                {
                    "name": "InputOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/types/input-options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/api/providers/nav-item.provider.ts": [
                {
                    "name": "NavItemParams",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/form/form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormComponent>",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/resource/resource.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ResourceComponent>",
                    "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/skeleton/skeleton.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SkeletonComponent>",
                    "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/table/table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AutocompleteComponent>",
                    "file": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxGroupComponent>",
                    "file": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/date/date.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateComponent>",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/date-range/date-range.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateRangeComponent>",
                    "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/date-time/date-time.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateTimeComponent>",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/number/number.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NumberComponent>",
                    "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/radio/radio.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioComponent>",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/search/search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SearchComponent>",
                    "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/select/select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectComponent>",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SliderFieldComponent>",
                    "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/switch/switch.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SwitchComponent>",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/text-field/text-field.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextFieldComponent>",
                    "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/textarea/textarea.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextareaComponent>",
                    "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/resource/config/config.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ConfigComponent>",
                    "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/api/providers/table.provider.ts": [
                {
                    "name": "TableColumn",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/providers/table.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 8,
        "status": "low",
        "files": [
            {
                "filePath": "libs/material/src/lib/api/middlewares/url.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UrlInterceptorFn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideAppName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideModuleName",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP_NAME_TOKEN",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/app-config.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MODULE_NAME_TOKEN",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "DisableWeekEndsStategy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideDatePickerFilter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-filter.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DATE_PICKER_FILTER_STRATEGY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FiveDayRangeSelectionStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WeekDaysStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WeekEndsStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/date-selection-strategy.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideDateRangeSelectionStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/form.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideFormFieldAppearance",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/form.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideFormFields",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/form.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideFormGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/form.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FORM_FIELD_APPEARANCE_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/form.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FORM_FIELDS_TOKEN",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/input-filter.provider.ts",
                "type": "class",
                "linktype": "classe",
                "name": "InputValueFilter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "type": "class",
                "linktype": "classe",
                "name": "NavItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideNavItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/nav-item.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAV_ITEMS_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/table.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideSearchControl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/table.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideTableColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/table.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SEARCH_CONTROL_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/table.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TABLE_COLUMNS_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/view.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/providers/view.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VIEW_COMPONENT_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/services/can-active.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CanActivateService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/services/local-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocalStoreService",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/services/resource.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ResourceService",
                "coveragePercent": 18,
                "coverageCount": "2/11",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/services/resource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideEntityName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/services/resource.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY_NAME_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/chat/chat.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChatComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/autocomplete/autocomplete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/autocomplete/autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutocompleteComponent",
                "coveragePercent": 46,
                "coverageCount": "6/13",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox-group/checkbox-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxGroupComponent",
                "coveragePercent": 35,
                "coverageCount": "6/17",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 50,
                "coverageCount": "6/12",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/common-field/common-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommonFieldComponent",
                "coveragePercent": 46,
                "coverageCount": "6/13",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/common-field/common-field.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-range/date-range.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateRangeComponent",
                "coveragePercent": 46,
                "coverageCount": "6/13",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateTimeComponent",
                "coveragePercent": 50,
                "coverageCount": "6/12",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateComponent",
                "coveragePercent": 50,
                "coverageCount": "6/12",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 30,
                "coverageCount": "3/10",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/number/number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberComponent",
                "coveragePercent": 50,
                "coverageCount": "6/12",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioComponent",
                "coveragePercent": 50,
                "coverageCount": "6/12",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/search/search.component.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockResourceService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/search/search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/search/search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/search/search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 37,
                "coverageCount": "6/16",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/slider-field/slider-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/text-field/text-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextFieldComponent",
                "coveragePercent": 50,
                "coverageCount": "6/12",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 50,
                "coverageCount": "6/12",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/navigations/mobile-navigation/mobile-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MobileNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/navigations/navigation/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/navigations/web-navigation/web-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WebNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/pipes/plural.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "PluralPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/config/config.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfigComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/create/create.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateComponent",
                "coveragePercent": 33,
                "coverageCount": "3/9",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/resource/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/delete/delete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/detail/detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/resource.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/resource.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/resource.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/resource.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResourceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/resource.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ResourceRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/update/update.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/view/view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/skeleton/skeleton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkeletonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/website/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/website/contact/contact.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/website/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/website/pricing/pricing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PricingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/website/services/services.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ServicesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/website/website.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WebsiteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}
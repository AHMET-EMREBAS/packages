{
    "pipes": [
        {
            "name": "PluralPipe",
            "id": "pipe-PluralPipe-5efaaa8cab72f2fa7ea0454d9d4ee783fa72401e538625c35b7fa24999d8846dc90efaf01d5b67b53a91e4c1685f00ac22ce6ff96c8cfac988df109eee08cb50",
            "file": "libs/material/src/lib/pipes/plural.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "plural",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { plural } from '@techbir/utils';\n\n@Pipe({\n  name: 'plural',\n  standalone: true,\n})\nexport class PluralPipe implements PipeTransform {\n  transform(value: string): unknown {\n    return plural(value);\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "TableItem",
            "id": "interface-TableItem-acdce23c271e82416951dbd97bdcf7dd698a693cc5b9b79ef99ba7716519005c257fe32bd79d27c613dd010c2ecba129ea39837c270c95287b20e87ad736a787",
            "file": "libs/material/src/lib/table/table-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface TableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: TableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the Table view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class TableDataSource extends DataSource<TableItem> {\n  data: TableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<TableItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: TableItem[]): TableItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: TableItem[]): TableItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "CanActivateService",
            "id": "injectable-CanActivateService-e1010a7e6bb9fa43324c95c554fe16f1f4d262b8e1686af2de4c82f5b5d061ef7629d15ed7d7fe7af2c3fff552ff5ccf956db6d2ece2879c7f70f89f22b3c7ca",
            "file": "libs/material/src/lib/api/can-active.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "canCreate",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "canDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "canUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "canView",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "itemName",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\nimport { ENTITY_NAME_TOKEN } from './resource.service';\r\nimport { LocalStoreService } from './local-storage.service';\r\n\r\n@Injectable({ providedIn: 'root', useExisting: true })\r\nexport class CanActivateService {\r\n  constructor(\r\n    @Inject(ENTITY_NAME_TOKEN) private readonly entiytName: string,\r\n    private readonly localStoreService: LocalStoreService\r\n  ) {}\r\n\r\n  private itemName(name: string) {\r\n    return `CanActivate${this.entiytName}${name}`;\r\n  }\r\n\r\n  private get(actionName: string) {\r\n    return this.localStoreService.get(this.itemName(actionName));\r\n  }\r\n\r\n  private set(actionName: string) {\r\n    this.localStoreService.set(this.itemName(actionName), true);\r\n  }\r\n\r\n  canCreate(value?: boolean) {}\r\n  canUpdate() {\r\n    return this.localStoreService.get(this.itemName('Update'));\r\n  }\r\n  canDelete() {\r\n    return this.localStoreService.get(this.itemName('Delete'));\r\n  }\r\n  canConfig() {\r\n    return this.localStoreService.get(this.itemName('Config'));\r\n  }\r\n  canView() {\r\n    return this.localStoreService.get(this.itemName('View'));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "entiytName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "entiytName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FiveDayRangeSelectionStrategy",
            "id": "injectable-FiveDayRangeSelectionStrategy-356519a0897570d7376ce5df446d821cd80e048ffd3052628127e605b03fa920572a7bc48c3812ac2203f4ea6927f9e827d787af8a9807accbe1aa677a04a7da",
            "file": "libs/material/src/lib/api/date-selection-strategy.provider.ts",
            "properties": [],
            "methods": [
                {
                    "name": "__create",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPreview",
                    "args": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionFinished",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, Provider, Type } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport {\r\n  DateFilterFn,\r\n  DateRange,\r\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n  MatDateRangeSelectionStrategy,\r\n} from '@angular/material/datepicker';\r\n\r\nexport function provideDateRangeSelectionStrategy(\r\n  strategy: Type<MatDateRangeSelectionStrategy<any>>\r\n): Provider {\r\n  return {\r\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n    useClass: strategy,\r\n  };\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FiveDayRangeSelectionStrategy<D>\r\n  implements MatDateRangeSelectionStrategy<D>\r\n{\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const start = this._dateAdapter.addCalendarDays(date, -2);\r\n      const end = this._dateAdapter.addCalendarDays(date, 2);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekDaysStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n      const start = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 1);\r\n      const end = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 5);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekEndsStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      // 3 --> 0 6\r\n\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n\r\n      // Set saturday\r\n      let saturday = 0;\r\n\r\n      if (dayOfWeek === 0) {\r\n        saturday = -1;\r\n      } else if (dayOfWeek === 6) {\r\n        saturday = 0;\r\n      } else {\r\n        saturday = -dayOfWeek - 1;\r\n      }\r\n\r\n      const start = this._dateAdapter.addCalendarDays(date, saturday);\r\n      const end = this._dateAdapter.addCalendarDays(date, saturday + 1);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ResourceService",
            "id": "injectable-ResourceService-7a0c3d295658cdd254664d0a9e6ec0624b2438efd2a5c874886bdba5960c2222854319bcafd728e6993deaae2a25fb2318ff5fe2acd0d8141e52d0e1e6c2106c",
            "file": "libs/material/src/lib/api/resource.service.ts",
            "properties": [
                {
                    "name": "allCount$",
                    "defaultValue": "inject(HttpClient)\r\n    .get<{ count: number }>(`api/meta/count/${this.nameVariants.fileName}`)\r\n    .pipe(\r\n      debounceTime(1000),\r\n      map((value) => {\r\n        const count = value?.count;\r\n        if (count != undefined) {\r\n          return count;\r\n        }\r\n        return 999999;\r\n      }),\r\n      catchError(() => {\r\n        return of(99999999);\r\n      })\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "nameVariants",
                    "defaultValue": "names(this.entityName)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methods": [
                {
                    "name": "deleteItem",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUse this method\n",
                    "description": "<p>Use this method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1677,
                                "end": 1679,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "id"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1671,
                                "end": 1676,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 1687,
                                "end": 1694,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "nid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "queryItem",
                    "args": [
                        {
                            "name": "query",
                            "type": "QueryObject",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "QueryObject",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1974,
                                "end": 1978,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "item"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1968,
                                "end": 1973,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "updateItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUse this method\n",
                    "description": "<p>Use this method</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1820,
                                "end": 1824,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "item"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1814,
                                "end": 1819,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 1832,
                                "end": 1839,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable, Optional, Provider, inject } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n  MergeStrategy,\r\n} from '@ngrx/data';\r\nimport {\r\n  Observable,\r\n  catchError,\r\n  debounceTime,\r\n  delay,\r\n  firstValueFrom,\r\n  map,\r\n  of,\r\n} from 'rxjs';\r\nimport { excludeUndefined, names } from '@techbir/utils';\r\n\r\nexport type QueryObject = {\r\n  take?: number;\r\n  skip?: number;\r\n  orderBy?: string;\r\n  orderDir?: string;\r\n  withDeleted?: boolean;\r\n  search?: string;\r\n};\r\n\r\nexport const ENTITY_NAME_TOKEN = 'ENTITY_NAME_TOKEN';\r\n\r\nexport function provideEntityName(name: string): Provider {\r\n  return {\r\n    provide: ENTITY_NAME_TOKEN,\r\n    useValue: name,\r\n  };\r\n}\r\n\r\n@Injectable({ providedIn: 'root', useExisting: true })\r\nexport class ResourceService<T> extends EntityCollectionServiceBase<T> {\r\n  nameVariants = names(this.entityName);\r\n\r\n  allCount$: Observable<number> = inject(HttpClient)\r\n    .get<{ count: number }>(`api/meta/count/${this.nameVariants.fileName}`)\r\n    .pipe(\r\n      debounceTime(1000),\r\n      map((value) => {\r\n        const count = value?.count;\r\n        if (count != undefined) {\r\n          return count;\r\n        }\r\n        return 999999;\r\n      }),\r\n      catchError(() => {\r\n        return of(99999999);\r\n      })\r\n    );\r\n\r\n  constructor(\r\n    @Inject(ENTITY_NAME_TOKEN) entityName: string,\r\n    serviceElementsFactory: EntityCollectionServiceElementsFactory\r\n  ) {\r\n    super(entityName, serviceElementsFactory);\r\n  }\r\n\r\n  private nid() {\r\n    return new Date().getTime();\r\n  }\r\n\r\n  /**\r\n   * Use this method\r\n   * @param id\r\n   * @returns\r\n   */\r\n  deleteItem(id: number) {\r\n    return this.removeOneFromCache(id);\r\n  }\r\n\r\n  /**\r\n   * Use this method\r\n   * @param item\r\n   * @returns\r\n   */\r\n  updateItem(item: T) {\r\n    return this.updateOneInCache(item);\r\n  }\r\n\r\n  /**\r\n   * @important Use this method!\r\n   * @param item\r\n   */\r\n  saveItem(item: T) {\r\n    this.add({ ...item, id: this.nid() });\r\n  }\r\n\r\n  queryItem(query: QueryObject) {\r\n    this.clearCache();\r\n    this.getWithQuery(excludeUndefined(query), {\r\n      mergeStrategy: MergeStrategy.OverwriteChanges,\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "serviceElementsFactory",
                        "type": "EntityCollectionServiceElementsFactory",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "jsdoctags": [
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "serviceElementsFactory",
                        "type": "EntityCollectionServiceElementsFactory",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "EntityCollectionServiceBase"
            ],
            "type": "injectable"
        },
        {
            "name": "WeekDaysStrategy",
            "id": "injectable-WeekDaysStrategy-356519a0897570d7376ce5df446d821cd80e048ffd3052628127e605b03fa920572a7bc48c3812ac2203f4ea6927f9e827d787af8a9807accbe1aa677a04a7da",
            "file": "libs/material/src/lib/api/date-selection-strategy.provider.ts",
            "properties": [],
            "methods": [
                {
                    "name": "__create",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPreview",
                    "args": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionFinished",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, Provider, Type } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport {\r\n  DateFilterFn,\r\n  DateRange,\r\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n  MatDateRangeSelectionStrategy,\r\n} from '@angular/material/datepicker';\r\n\r\nexport function provideDateRangeSelectionStrategy(\r\n  strategy: Type<MatDateRangeSelectionStrategy<any>>\r\n): Provider {\r\n  return {\r\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n    useClass: strategy,\r\n  };\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FiveDayRangeSelectionStrategy<D>\r\n  implements MatDateRangeSelectionStrategy<D>\r\n{\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const start = this._dateAdapter.addCalendarDays(date, -2);\r\n      const end = this._dateAdapter.addCalendarDays(date, 2);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekDaysStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n      const start = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 1);\r\n      const end = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 5);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekEndsStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      // 3 --> 0 6\r\n\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n\r\n      // Set saturday\r\n      let saturday = 0;\r\n\r\n      if (dayOfWeek === 0) {\r\n        saturday = -1;\r\n      } else if (dayOfWeek === 6) {\r\n        saturday = 0;\r\n      } else {\r\n        saturday = -dayOfWeek - 1;\r\n      }\r\n\r\n      const start = this._dateAdapter.addCalendarDays(date, saturday);\r\n      const end = this._dateAdapter.addCalendarDays(date, saturday + 1);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "WeekEndsStrategy",
            "id": "injectable-WeekEndsStrategy-356519a0897570d7376ce5df446d821cd80e048ffd3052628127e605b03fa920572a7bc48c3812ac2203f4ea6927f9e827d787af8a9807accbe1aa677a04a7da",
            "file": "libs/material/src/lib/api/date-selection-strategy.provider.ts",
            "properties": [],
            "methods": [
                {
                    "name": "__create",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPreview",
                    "args": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "activeDate",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionFinished",
                    "args": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateRange<D>",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, Provider, Type } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport {\r\n  DateFilterFn,\r\n  DateRange,\r\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n  MatDateRangeSelectionStrategy,\r\n} from '@angular/material/datepicker';\r\n\r\nexport function provideDateRangeSelectionStrategy(\r\n  strategy: Type<MatDateRangeSelectionStrategy<any>>\r\n): Provider {\r\n  return {\r\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n    useClass: strategy,\r\n  };\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FiveDayRangeSelectionStrategy<D>\r\n  implements MatDateRangeSelectionStrategy<D>\r\n{\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const start = this._dateAdapter.addCalendarDays(date, -2);\r\n      const end = this._dateAdapter.addCalendarDays(date, 2);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekDaysStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n      const start = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 1);\r\n      const end = this._dateAdapter.addCalendarDays(date, -dayOfWeek + 5);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WeekEndsStrategy<D> implements MatDateRangeSelectionStrategy<D> {\r\n  constructor(private _dateAdapter: DateAdapter<D>) {}\r\n\r\n  selectionFinished(date: D | null): DateRange<D> {\r\n    return this.__create(date);\r\n  }\r\n\r\n  createPreview(activeDate: D | null): DateRange<D> {\r\n    return this.__create(activeDate);\r\n  }\r\n\r\n  private __create(date: D | null): DateRange<D> {\r\n    if (date) {\r\n      // 3 --> 0 6\r\n\r\n      const dayOfWeek = this._dateAdapter.getDayOfWeek(date);\r\n\r\n      // Set saturday\r\n      let saturday = 0;\r\n\r\n      if (dayOfWeek === 0) {\r\n        saturday = -1;\r\n      } else if (dayOfWeek === 6) {\r\n        saturday = 0;\r\n      } else {\r\n        saturday = -dayOfWeek - 1;\r\n      }\r\n\r\n      const start = this._dateAdapter.addCalendarDays(date, saturday);\r\n      const end = this._dateAdapter.addCalendarDays(date, saturday + 1);\r\n      return new DateRange<D>(start, end);\r\n    }\r\n\r\n    return new DateRange<D>(null, null);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 69,
                "jsdoctags": [
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<D>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "InputValueFilter",
            "id": "class-InputValueFilter-82201a1f93a66f9bb6d8fedd631edb716a65e87a4db51505fa6f160b64bf9cd78f1d2005385b0ab74a0f088080e912bee46ffdb0aa9ba18cc764987ada900ef0",
            "file": "libs/material/src/lib/api/input-filter.provider.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class InputValueFilter<V> {\r\n  filter(v: V): V | undefined {\r\n    return undefined;\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "v",
                            "type": "V",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "V | undefined",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "V",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LocalStoreService",
            "id": "class-LocalStoreService-b915202997db701e3eaeb41a968075c37eb5c11a3cb1e43a8fecc0550743c1af8acb88a36a608cca719701553819a9993a6fc174eaa38b2e1ec886af647dc2c6",
            "file": "libs/material/src/lib/api/local-storage.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Provider } from '@angular/core';\r\n\r\nexport const LOCAL_STOREAGE_NAME_TOKEN = 'LOCAL_STOREAGE_NAME_TOKEN';\r\n\r\nexport class LocalStoreService {\r\n  constructor(private readonly storageName: string) {}\r\n\r\n  private itemName(name: string) {\r\n    return `${this.storageName}_${name}`;\r\n  }\r\n  set(key: string, value: any) {\r\n    const valueAsString = JSON.stringify(value);\r\n    localStorage.setItem(this.itemName(key), valueAsString);\r\n  }\r\n\r\n  get<T>(key: string): T | undefined {\r\n    const value = localStorage.getItem(this.itemName(key));\r\n    if (value != undefined) {\r\n      return JSON.parse(value) as T;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function provideLocalStoreService(name: string): Provider {\r\n  return {\r\n    provide: LocalStoreService,\r\n    useValue: new LocalStoreService(name),\r\n  };\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "storageName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "storageName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T | undefined",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "itemName",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "NavItem",
            "id": "class-NavItem-43713e7afa370ed3891852bfad0fbaf68e33aac19bb77692a585204fe3ade0edf153f8f0636560e4890388791d6d598023cc3aa96f4aa9765c15b0b94c311594",
            "file": "libs/material/src/lib/api/nav-item.provider.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Provider } from '@angular/core';\r\n\r\nexport const NAV_ITEMS_TOKEN = 'NAV_ITEMS_TOKEN';\r\n\r\nexport class NavItem {\r\n  route!: string;\r\n  name!: string;\r\n  icon!: string;\r\n}\r\n\r\nexport function provideNavItems(navItems: NavItem[]): Provider {\r\n  return {\r\n    provide: NAV_ITEMS_TOKEN,\r\n    useValue: navItems,\r\n  };\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TableDataSource",
            "id": "class-TableDataSource-acdce23c271e82416951dbd97bdcf7dd698a693cc5b9b79ef99ba7716519005c257fe32bd79d27c613dd010c2ecba129ea39837c270c95287b20e87ad736a787",
            "file": "libs/material/src/lib/table/table-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface TableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: TableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the Table view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class TableDataSource extends DataSource<TableItem> {\n  data: TableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<TableItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: TableItem[]): TableItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: TableItem[]): TableItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the Table view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the Table view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<TableItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1570,
                                "end": 1577,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "TableItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TableItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "TableItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "TableItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TableItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "TableItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [
                "DataSource"
            ],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-848659ad9dffc43fa55747677e3cb295dae35f65d41eea3648bf6f33a54281e3dec2e77873f2ec96f103310ac02584d8fb486db263839a41ad36b8d0c27490eb",
            "file": "libs/material/src/lib/form/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 59,
                    "rawdescription": "\n\nFormControl instance\n",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "errorMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | undefined>",
                    "optional": false,
                    "description": "<p>Obserable error message</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nObserable error message\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet error message if any\n",
                    "description": "<p>Get error message if any</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2044,
                                "end": 2051,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>string | undefined</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  CommonFieldComponent,\n  CommonFieldModule,\n} from '../common-field/common-field.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n@Component({\n  selector: 'techbir-checkbox',\n  standalone: true,\n  imports: [CommonModule, CommonFieldModule, MatCheckboxModule],\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n})\nexport class CheckboxComponent extends CommonFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\r\n  <mat-checkbox class=\"example-margin\" [formControlName]=\"name\">\r\n    {{ label || name | titlecase }}\r\n  </mat-checkbox>\r\n</div>\r\n"
        },
        {
            "name": "CommonFieldComponent",
            "id": "component-CommonFieldComponent-3e3e6d76f848376d075daa84e9dec09430d4b0be4abc7a77ccd161e136cf87066147ac21618bf80db510dcff5742c98b9efbcc68243eedf2bf5f7b0198deaab3",
            "file": "libs/material/src/lib/form/common-field/common-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 59,
                    "rawdescription": "\n\nFormControl instance\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "errorMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | undefined>",
                    "optional": false,
                    "description": "<p>Obserable error message</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nObserable error message\n"
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet error message if any\n",
                    "description": "<p>Get error message if any</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2044,
                                "end": 2051,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>string | undefined</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Inject,\n  Input,\n  NgModule,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { FORM_FIELD_APPEARANCE_TOKEN } from '../../api';\nimport { MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport { Observable, debounceTime, map } from 'rxjs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\n\nconst formModules = [\n  CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatButtonModule,\n];\n\n@NgModule({\n  imports: [...formModules],\n  exports: [...formModules],\n})\nexport class CommonFieldModule {}\n\n@Component({ template: '' })\nexport class CommonFieldComponent implements OnInit {\n  /**\n   * Property name\n   */\n  @Input() name!: string;\n\n  /**\n   * Property label\n   */\n  @Input() label = '';\n\n  /**\n   * Property icon\n   */\n  @Input() icon = '';\n\n  /**\n   * FormControl instance\n   */\n  private control!: AbstractControl;\n\n  /**\n   * Obserable error message\n   */\n  errorMessage$!: Observable<string | undefined>;\n\n  constructor(\n    @Inject(FormGroup) public readonly formGroup: FormGroup,\n    @Optional()\n    @Inject(FORM_FIELD_APPEARANCE_TOKEN)\n    public readonly appearance: MatFormField['appearance']\n  ) {\n    if (!appearance) this.appearance = 'outline';\n    if (!formGroup) throw new Error('FormGroup must be provided!');\n  }\n\n  ngOnInit(): void {\n    const foundControl = this.formGroup.get(this.name);\n\n    if (!foundControl) {\n      throw new Error(`${this.name} control is not found in formGroup!`);\n    }\n\n    this.control = foundControl;\n\n    this.errorMessage$ = this.formGroup.valueChanges.pipe(\n      debounceTime(600),\n      map(() => {\n        return this.getErrorMessage();\n      })\n    );\n  }\n\n  /**\n   * Get error message if any\n   * @returns string | undefined\n   */\n  private getErrorMessage(): string | undefined {\n    return this.control.errors?.['error'];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appearance",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appearance",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ConfigComponent",
            "id": "component-ConfigComponent-8a26ad10dde1fd82a948a1508510851e0610f5615ebdbbbdaf12779da6809678776b27d423d9212cd2f6c3c73b4128248d8061dd997df5fe4a2dbe3b2611df90",
            "file": "libs/material/src/lib/resource/config/config.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-config",
            "styleUrls": [
                "./config.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./config.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-config',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss'],\n})\nexport class ConfigComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./config.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>config works!</p>\n"
        },
        {
            "name": "CreateComponent",
            "id": "component-CreateComponent-4bda91ea4c84e55bc0b0be003cf717678c82b79b6c2f70642e85c4fae1fedf75618715ab8fa4fa0fd141814298da84855dceb6f513af27a57ce6d01314c57a8e",
            "file": "libs/material/src/lib/resource/create/create.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-create",
            "styleUrls": [
                "./create.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formFields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormField[]",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELDS_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "inheritance": {
                        "file": "FormComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "inheritance": {
                        "file": "FormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs form invalid or untouched?\n",
                    "description": "<p>Is form invalid or untouched?</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1157,
                                "end": 1164,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "FormComponent"
                    }
                },
                {
                    "name": "isFormValid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs form dirth and valid?\n",
                    "description": "<p>Is form dirth and valid?</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1016,
                                "end": 1023,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "FormComponent"
                    }
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "FormComponent"
                    }
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "FormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormComponent } from '../../form/form.component';\n\n@Component({\n  selector: 'techbir-create',\n  standalone: true,\n  imports: [CommonModule, FormComponent],\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss'],\n})\nexport class CreateComponent extends FormComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./create.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "FormComponent"
            ],
            "templateData": "<techbir-form> </techbir-form>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-f18981863338fcb33ec2a2908a3300322c1d9e0e295d9d508233671310af8cad9e36d1af052cdaa5b964d3046518a5d68f848d09620f36a25fff14eb317a708f",
            "file": "libs/material/src/lib/resource/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-dashboard",
            "styleUrls": [
                "./dashboard.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cards",
                    "defaultValue": "this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 },\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 },\n      ];\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Based on the screen size, switch from standard to one column per row</p>\n",
                    "line": 43,
                    "rawdescription": "\nBased on the screen size, switch from standard to one column per row"
                },
                {
                    "name": "count$",
                    "defaultValue": "this.service.allCount$.pipe(\n    delay(2000),\n    map((data) => {\n      console.log(data);\n      this.isCountLoading = false;\n      return data;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "entityName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "ENTITY_NAME_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "isCountLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatGridListModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "SkeletonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, inject } from '@angular/core';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { delay, map } from 'rxjs/operators';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { ENTITY_NAME_TOKEN, ResourceService } from '../../api';\nimport { Observable } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { SkeletonComponent } from '../../skeleton/skeleton.component';\n\n@Component({\n  selector: 'techbir-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    SkeletonComponent,\n  ],\n})\nexport class DashboardComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  isCountLoading = true;\n  readonly count$: Observable<number> = this.service.allCount$.pipe(\n    delay(2000),\n    map((data) => {\n      console.log(data);\n      this.isCountLoading = false;\n      return data;\n    })\n  );\n\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 },\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 },\n      ];\n    })\n  );\n\n  constructor(\n    private readonly service: ResourceService<unknown>,\n    @Inject(ENTITY_NAME_TOKEN)\n    public readonly entityName: string\n  ) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grid-container {\n  margin: 20px;\n}\n\n.dashboard-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.dashboard-card-content {\n  text-align: center;\n}\n",
                    "styleUrl": "./dashboard.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ResourceService<>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ResourceService<>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "entityName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"grid-container\">\n  <h1 class=\"mat-h1\">Dashboard</h1>\n\n  <p style=\"position: relative\">\n    <span *ngIf=\"count$ | async as itemCount\">\n      There are {{ itemCount }} {{ entityName }}.\n    </span>\n  </p>\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile\n      *ngFor=\"let card of cards | async\"\n      [colspan]=\"card.cols\"\n      [rowspan]=\"card.rows\"\n    >\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{ card.title }}\n            <button\n              mat-icon-button\n              class=\"more-button\"\n              [matMenuTriggerFor]=\"menu\"\n              aria-label=\"Toggle menu\"\n            >\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n              <button mat-menu-item>Expand</button>\n              <button mat-menu-item>Remove</button>\n            </mat-menu>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\"> </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n"
        },
        {
            "name": "DateComponent",
            "id": "component-DateComponent-7813b5343e3f6b0b1e02e23125ae038418feb0894e4960d2ab1fd8f1460a8d3aee5c875d8b7b1755c48fb2bc71a2be6a743963ec8f209fd2fdc6c46a63c40ea1",
            "file": "libs/material/src/lib/form/date/date.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-date",
            "styleUrls": [
                "./date.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 59,
                    "rawdescription": "\n\nFormControl instance\n",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "errorMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | undefined>",
                    "optional": false,
                    "description": "<p>Obserable error message</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nObserable error message\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet error message if any\n",
                    "description": "<p>Get error message if any</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2044,
                                "end": 2051,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>string | undefined</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n  CommonFieldComponent,\n  CommonFieldModule,\n} from '../common-field/common-field.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n@Component({\n  selector: 'techbir-date',\n  standalone: true,\n  imports: [CommonFieldModule, MatDatepickerModule, MatNativeDateModule],\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss'],\n})\nexport class DateComponent extends CommonFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./date.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-form-field>\n    <mat-label>{{ label || name | titlecase }}</mat-label>\n    <input matInput [matDatepicker]=\"picker\" [formControlName]=\"name\" />\n    <mat-hint>MM/DD/YYYY</mat-hint>\n    <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-datepicker #picker></mat-datepicker>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "DateRangeComponent",
            "id": "component-DateRangeComponent-8d737ef44bcce4577bdc75e4a9f110e1de1dd6d836dd71211bfc6214628440c29c26e6eb9cbad045a84642a0f1fe5c76dcfee45f63a207fa9e596476693f092b",
            "file": "libs/material/src/lib/form/date-range/date-range.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-date-range",
            "styleUrls": [
                "./date-range.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-range.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "updateValue$",
                    "defaultValue": "combineLatest([\n    this.__startControl.valueChanges,\n    this.__endControl.valueChanges,\n  ]).pipe(\n    debounceTime(400),\n    map(([start, end]) => {\n      this.formGroup.get(this.name)?.setValue({ start, end });\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 59,
                    "rawdescription": "\n\nFormControl instance\n",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "errorMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | undefined>",
                    "optional": false,
                    "description": "<p>Obserable error message</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nObserable error message\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet error message if any\n",
                    "description": "<p>Get error message if any</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2044,
                                "end": 2051,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>string | undefined</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {\n  CommonFieldComponent,\n  CommonFieldModule,\n} from '../common-field/common-field.component';\nimport { combineLatest, debounceTime, map } from 'rxjs';\nimport '@angular/localize/init';\n\n@Component({\n  selector: 'techbir-date-range',\n  standalone: true,\n  imports: [CommonFieldModule, MatDatepickerModule, MatNativeDateModule],\n  templateUrl: './date-range.component.html',\n  styleUrls: ['./date-range.component.scss'],\n})\nexport class DateRangeComponent extends CommonFieldComponent {\n  /**\n   * @ignore\n   */\n  __startControl = new FormControl('');\n\n  /**\n   * @ignore\n   */\n  __endControl = new FormControl('');\n\n  updateValue$ = combineLatest([\n    this.__startControl.valueChanges,\n    this.__endControl.valueChanges,\n  ]).pipe(\n    debounceTime(400),\n    map(([start, end]) => {\n      this.formGroup.get(this.name)?.setValue({ start, end });\n    })\n  );\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./date-range.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "{{ formGroup.get(name)?.value | json }}\n<ng-container *ngIf=\"updateValue$ | async\"></ng-container>\n<div [formGroup]=\"formGroup\">\n  <mat-form-field class=\"example-form-field\">\n    <mat-label>{{ label || name | titlecase }}</mat-label>\n    <mat-date-range-input [rangePicker]=\"dateRangePicker\">\n      <input\n        matStartDate\n        i18n-placeholder\n        placeholder=\"Start date\"\n        [formControl]=\"__startControl\"\n      />\n      <input\n        matEndDate\n        i18n-placeholder\n        placeholder=\"End date\"\n        [formControl]=\"__endControl\"\n      />\n    </mat-date-range-input>\n    <mat-hint>MM/DD/YYYY – MM/DD/YYYY</mat-hint>\n    <mat-datepicker-toggle\n      matIconSuffix\n      [for]=\"dateRangePicker\"\n    ></mat-datepicker-toggle>\n    <mat-date-range-picker #dateRangePicker></mat-date-range-picker>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "DateTimeComponent",
            "id": "component-DateTimeComponent-9462ecd7f2f63f0a6511062af7e8e186d9c634846f2a56a3ddee524ee815909b97e85c9944d54724396971844e235eebf70a71e061cb17f2ee914a8059695d76",
            "file": "libs/material/src/lib/form/date-time/date-time.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-date-time",
            "styleUrls": [
                "./date-time.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-time.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 59,
                    "rawdescription": "\n\nFormControl instance\n",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "errorMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | undefined>",
                    "optional": false,
                    "description": "<p>Obserable error message</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nObserable error message\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet error message if any\n",
                    "description": "<p>Get error message if any</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2044,
                                "end": 2051,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>string | undefined</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n  CommonFieldComponent,\n  CommonFieldModule,\n} from '../common-field/common-field.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {} from '@angular/material/core';\n\n@Component({\n  selector: 'techbir-date-time',\n  standalone: true,\n  imports: [CommonFieldModule, MatDatepickerModule, MatNativeDateModule],\n  templateUrl: './date-time.component.html',\n  styleUrls: ['./date-time.component.scss'],\n})\nexport class DateTimeComponent extends CommonFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./date-time.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-form-field>\n    <input matInput type=\"datetime-local\" [formControlName]=\"name\" />\n    <mat-label>{{ label || name | titlecase }}</mat-label>\n    <mat-hint>MM/DD/YYYY</mat-hint>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "DeleteComponent",
            "id": "component-DeleteComponent-6c7104faf5ca053daff2ea1598fafcf32fa0d5c24ffb35b30d8cc4e1a410088c26d4089c3a0b600848cd8720c32686151a046fef4b67ff9e0a2e6fcd5f4a13da",
            "file": "libs/material/src/lib/resource/delete/delete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-delete",
            "styleUrls": [
                "./delete.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./delete.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-delete',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.scss'],\n})\nexport class DeleteComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./delete.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>delete works!</p>\n"
        },
        {
            "name": "DetailComponent",
            "id": "component-DetailComponent-32e2fc40bc7ade520b7d9523241e3407b4ce5954a6de6f4ad197b6e9ed4a15827c1c72c1d1fe8147836c41eb74d36d5612463456594e40d8afafdfd1b074744d",
            "file": "libs/material/src/lib/resource/detail/detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-detail",
            "styleUrls": [
                "./detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./detail.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-detail',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss'],\n})\nexport class DetailComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./detail.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>detail works!</p>\n"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-ca2ba08e03532ae00e519610738c31dc5a1630c940bc1582c72e71f7a52b1cdc5e5bdde26d9f682bfd175a7505ada3c79f941c33adab035083afe10da754b65b",
            "file": "libs/material/src/lib/form/form.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-form",
            "styleUrls": [
                "./form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formFields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormField[]",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELDS_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs form invalid or untouched?\n",
                    "description": "<p>Is form invalid or untouched?</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1157,
                                "end": 1164,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "isFormValid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs form dirth and valid?\n",
                    "description": "<p>Is form dirth and valid?</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1016,
                                "end": 1023,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatStepperModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Optional, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormGroup } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FORM_FIELDS_TOKEN, FormField, ResourceService } from '../api';\nimport { TextFieldComponent } from './text-field/text-field.component';\nimport { MatStepperModule } from '@angular/material/stepper';\n\n@Component({\n  selector: 'techbir-form',\n  standalone: true,\n  imports: [CommonModule, MatStepperModule, MatButtonModule, MatIconModule],\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FormComponent {\n  constructor(\n    @Inject(FormGroup) public formGroup: FormGroup,\n    @Inject(FORM_FIELDS_TOKEN)\n    public formFields: FormField[],\n    private service: ResourceService<unknown>\n  ) {}\n\n  /**\n   * Is form dirth and valid?\n   * @returns\n   */\n  isFormValid() {\n    return this.formGroup.dirty && this.formGroup.valid;\n  }\n\n  /**\n   * Is form invalid or untouched?\n   * @returns\n   */\n  isFormInvalid() {\n    return this.formGroup.invalid || this.formGroup.untouched;\n  }\n\n  /**\n   * Submit form\n   */\n  submit() {\n    if (this.isFormValid()) {\n      const formValue = { ...this.formGroup.value };\n      this.service.saveItem(formValue);\n    }\n  }\n\n  reset() {\n    this.formGroup.reset();\n    this.formGroup.markAsUntouched();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-component {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1em;\r\n  padding: 1em;\r\n  max-width: 600px;\r\n  min-width: 300px;\r\n\r\n  .form-actions {\r\n    display: flex;\r\n    gap: 2em;\r\n    button {\r\n      flex-grow: 1;\r\n    }\r\n  }\r\n\r\n  mat-form-field {\r\n    width: 100%;\r\n  }\r\n\r\n  textarea {\r\n    resize: none;\r\n    min-height: 5em;\r\n  }\r\n\r\n  input,\r\n  textarea {\r\n   letter-spacing: 2px !important;\r\n  }\r\n}\r\n",
                    "styleUrl": "./form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formFields",
                        "type": "FormField[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "ResourceService<>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formFields",
                        "type": "FormField[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "ResourceService<>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<form class=\"form-component\" [noValidate]=\"true\">\n  <ng-container *ngFor=\"let field of formFields\">\n    <ng-container\n      *ngComponentOutlet=\"\n        field.component;\n        inputs: { name: field.name, label: field.label, icon: field.icon }\n      \"\n    ></ng-container>\n  </ng-container>\n  <div class=\"form-actions\">\n    <button\n      type=\"button\"\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"submit()\"\n      [disabled]=\"isFormInvalid()\"\n    >\n      Submit\n    </button>\n    <button type=\"button\" mat-raised-button (click)=\"reset()\">Reset</button>\n  </div>\n</form>\n"
        },
        {
            "name": "NavigationComponent",
            "id": "component-NavigationComponent-6cb5d2cb6ab3b6da8542ccb61e85e538e114a5447e5731673eb80cd2b3c6d67fd1a26d272b7ed440e79902ac941282ba83e8804e7957ef152fd4ff266af01980",
            "file": "libs/material/src/lib/navigation/navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-navigation",
            "styleUrls": [
                "./navigation.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "drawer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDrawer",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'drawer'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "isHandset",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => {\n        this.isHandset = result.matches;\n        return this.isHandset;\n      }),\n      shareReplay()\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "miniSidenav",
                    "defaultValue": "!!this.lss.get<boolean>('miniSidenav')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "navItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "NAV_ITEMS_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "inject(Title)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "canPersistRoute",
                    "args": [
                        {
                            "name": "fragmentPath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fragmentPath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navItemClickHandler",
                    "args": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "navItem",
                            "type": "NavItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMiniSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatSidenavModule",
                    "type": "module"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  Inject,\n  ViewChild,\n  inject,\n} from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDrawer, MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Title } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { LocalStoreService, NAV_ITEMS_TOKEN, NavItem } from '../api';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@Component({\n  selector: 'techbir-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatTooltipModule,\n  ],\n})\nexport class NavigationComponent implements AfterViewInit {\n  @ViewChild('drawer') drawer!: MatDrawer;\n\n  private breakpointObserver = inject(BreakpointObserver);\n  readonly title = inject(Title);\n\n  miniSidenav = !!this.lss.get<boolean>('miniSidenav');\n\n  isHandset = false;\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => {\n        this.isHandset = result.matches;\n        return this.isHandset;\n      }),\n      shareReplay()\n    );\n\n  constructor(\n    @Inject(NAV_ITEMS_TOKEN) public readonly navItems: NavItem[],\n    private readonly lss: LocalStoreService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute\n  ) {}\n\n  ngAfterViewInit(): void {\n    const lastRoute = this.lss.get('lastRoute');\n\n    if (lastRoute) {\n      this.router.navigate([lastRoute], { relativeTo: this.route });\n    }\n  }\n\n  async toggleMiniSidenav() {\n    this.miniSidenav = !this.miniSidenav;\n    this.lss.set('miniSidenav', this.miniSidenav);\n    await this.drawer.close();\n    await this.drawer.open();\n  }\n\n  canPersistRoute(fragmentPath: string) {\n    return /[a-z-]{1,}/.test(fragmentPath);\n  }\n\n  navItemClickHandler(navItem: NavItem) {\n    if (this.isHandset) this.drawer.close();\n\n    if (this.canPersistRoute(navItem.route)) {\n      this.lss.set('lastRoute', navItem.route);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 300px;\n  transition: width ease-in-out 400ms;\n}\n\n.mini-sidenav {\n  width: 60px;\n  /* transition: width ease-in-out 400ms; */\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n\n.nav-item {\n  border: 1px dashed transparent;\n  box-sizing: border-box;\n  transition: border-color ease-in-out 400ms;\n}\n\n\n\n@keyframes fadeInOnEnter {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.nav-item:hover mat-icon {\n  font-variation-settings: 'FILL' 1 !important;\n  animation: fadeInOnEnter 2000ms cubic-bezier(0.075, 0.82, 0.165, 1);\n}\n\n.material-icons {\n  transition: color ease-in-out 400ms;\n}\n\n\n\n.router-link-active {\n  border: 1px dashed orangered;\n\n  .material-icons {\n    color: orangered;\n  }\n}\n\n\nmat-sidenav-content {\n  border: 3px dashed rgba(201, 175, 175, 0.472);\n  box-sizing: border-box;\n  overflow-y: auto;\n}",
                    "styleUrl": "./navigation.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "navItems",
                        "type": "NavItem[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "jsdoctags": [
                    {
                        "name": "navItems",
                        "type": "NavItem[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    [class.mini-sidenav]=\"miniSidenav\"\n    fixedInViewport\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\"\n  >\n    <mat-toolbar>\n      <img src=\"./assets/icons/icon-72x72.png\" alt=\"App Logo\" width=\"30\" />\n    </mat-toolbar>\n\n    <mat-nav-list>\n      <a\n        mat-list-item\n        (click)=\"toggleMiniSidenav()\"\n        i18n-aria-label\n        aria-label=\"Minimize Sidenav\"\n        [matTooltip]=\"miniSidenav ? 'Maximize Sidenav' : 'Minimize Sidenav'\"\n        matTooltipPosition=\"right\"\n      >\n        <span matListItemIcon style=\"transform: rotate(90deg)\">\n          <mat-icon [class.big-icon]=\"miniSidenav\" class=\"outline\">\n            {{ miniSidenav ? 'unfold_more' : 'unfold_less' }}\n          </mat-icon>\n        </span>\n      </a>\n\n      <!-- Back to main page -->\n      <a\n        [routerLink]=\"['..']\"\n        routerLinkActive=\"router-link-active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        mat-list-item\n        class=\"nav-item\"\n        aria-label=\"Go to main page\"\n        matTooltip=\"Main Page\"\n        matTooltipPosition=\"right\"\n      >\n        <span matListItemIcon>\n          <mat-icon [class.big-icon]=\"miniSidenav\" class=\"outline\">\n            home\n          </mat-icon>\n        </span>\n        <span matListItemLine i18n> Main Page</span>\n      </a>\n\n      <!-- Nav Items -->\n      <a\n        mat-list-item\n        [routerLink]=\"[item.route]\"\n        routerLinkActive=\"router-link-active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        matTooltip=\"{{ item.name | titlecase }}\"\n        matTooltipPosition=\"right\"\n        [matTooltipDisabled]=\"!miniSidenav\"\n        class=\"nav-item\"\n        (click)=\"navItemClickHandler(item)\"\n        i18n-aria-label\n        [attr.aria-label]=\"item.name + ' Page'\"\n        *ngFor=\"let item of navItems\"\n      >\n        <span matListItemLine>\n          {{ item.name | titlecase }}\n        </span>\n\n        <span matListItemIcon>\n          <mat-icon\n            [class.big-icon]=\"miniSidenav\"\n            color=\"primary\"\n            class=\"outline\"\n          >\n            {{ item.icon }}\n          </mat-icon>\n        </span>\n      </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">\n          {{ drawer.opened ? 'menu_open' : 'menu' }}\n        </mat-icon>\n      </button>\n      <span>{{ title.getTitle() }}</span>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n"
        },
        {
            "name": "NumberComponent",
            "id": "component-NumberComponent-57871c5ac45806d2a9fe273a9268041950f2cf9cd43c3155f4fce636c2f141b07e47d9db233ad922fc9ba17371c425c86c7ef105681d2608bee29efa02dcdcce",
            "file": "libs/material/src/lib/form/number/number.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-number",
            "styleUrls": [
                "./number.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./number.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-number',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './number.component.html',\n  styleUrls: ['./number.component.scss'],\n})\nexport class NumberComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./number.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>number works!</p>\n"
        },
        {
            "name": "RadioComponent",
            "id": "component-RadioComponent-eae9915893bc2c3e7645077b9cc24640cf902da1853309eb492da0f26213fd6d8ad98fe08587fe12c3893beee0532a6575846e9d9db5cf6ceadd68e3f51b57db",
            "file": "libs/material/src/lib/form/radio/radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-radio",
            "styleUrls": [
                "./radio.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-radio',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss'],\n})\nexport class RadioComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./radio.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>radio works!</p>\n"
        },
        {
            "name": "ResourceComponent",
            "id": "component-ResourceComponent-47af6abbb69e444991f59f573d37e3f2ed81e7cc5c3aa130793b32868b62878810fd43bfa9809463c2b6f0259068babdf133e10a573fd0e10545a1da89425f88",
            "file": "libs/material/src/lib/resource/resource.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-resource",
            "styleUrls": [
                "./resource.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./resource.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "inject(Title)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'techbir-resource',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './resource.component.html',\n  styleUrls: ['./resource.component.scss'],\n})\nexport class ResourceComponent {\n  title = inject(Title);\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./resource.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<h1>Welcome to {{ title.getTitle() }}</h1>\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-9c5fe763bef23c15b081e99fcfe40fbd745762d26519d5dec217e1a7967e35c34557a93789fa8ff8cd8765b21cf6e98f963872db03ab2545a162bc67c54d3567",
            "file": "libs/material/src/lib/form/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-search',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>search works!</p>\n"
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-73444dc2cd5319fba8ba3d0fba1ce37e1e9323b4fa1619f5fcce2e53d61335abdf5c3c6f22107cfb7e4eca3cd758494d95dd4936be359b07eb33ee81d645a0fd",
            "file": "libs/material/src/lib/form/select/select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-select",
            "styleUrls": [
                "./select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-select',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n})\nexport class SelectComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./select.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>select works!</p>\n"
        },
        {
            "name": "SkeletonComponent",
            "id": "component-SkeletonComponent-39a0d59294adfb72d69d8e33e6a7a44adcecbe0bf4733e720774bb31cbb005a12bbda578fac202d0ec254e82559198114051b5572cfd97dab7b6d420f4e6e2b3",
            "file": "libs/material/src/lib/skeleton/skeleton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-skeleton",
            "styleUrls": [
                "./skeleton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./skeleton.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-skeleton',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './skeleton.component.html',\n  styleUrls: ['./skeleton.component.scss'],\n})\nexport class SkeletonComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@keyframes skeleton-loading {\r\n  0% {\r\n    background-color: hsl(200, 20%, 80%);\r\n  }\r\n  100% {\r\n    background-color: hsl(200, 20%, 95%);\r\n  }\r\n}\r\n\r\n.skeleton {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: white;\r\n  animation: skeleton-loading 1s linear infinite alternate;\r\n  border-radius: 10px;\r\n  color: transparent;\r\n}\r\n",
                    "styleUrl": "./skeleton.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"skeleton\">...</div>\n"
        },
        {
            "name": "SliderFieldComponent",
            "id": "component-SliderFieldComponent-08c3b8e4f45d703703e1f4e2d5a14fb5a93042a962376b6b0f36e14aa612f9229b9952b304beeeadb37ba5a7c4a262cf7a9fe59e44ffcbbab1744743490520d4",
            "file": "libs/material/src/lib/form/slider-field/slider-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-slider-field",
            "styleUrls": [
                "./slider-field.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slider-field.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-slider-field',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './slider-field.component.html',\n  styleUrls: ['./slider-field.component.scss'],\n})\nexport class SliderFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./slider-field.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>slider-field works!</p>\n"
        },
        {
            "name": "SwitchComponent",
            "id": "component-SwitchComponent-8bd9acc73d4e19c42cecfbf0362307c7d60b5be625c49ad8e0687b0fae365ee00d90b99711adccf6b583d6db07f989977aecf7a8ab316841d216bb7ca5769f67",
            "file": "libs/material/src/lib/form/switch/switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-switch",
            "styleUrls": [
                "./switch.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./switch.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-switch',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.scss'],\n})\nexport class SwitchComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./switch.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>switch works!</p>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-d15f9df53eacef87fdf904856c874c59cbc014188dce17c9b75a957d27bb754afee7d09b195a9889d5d7e17df3b3555788706c5a5102c1ba189fe84b11cc7369",
            "file": "libs/material/src/lib/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-table",
            "styleUrls": [
                "./table.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "this.lss.get<string>('active') || 'id'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "count$",
                    "defaultValue": "this.service.allCount$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "data$",
                    "defaultValue": "this.service.filteredEntities$.pipe(\n    debounceTime(400),\n    map((data) => {\n      this.data = [];\n      let i = 0;\n      for (const d of data) {\n        setTimeout(() => {\n          this.data = [...this.data, d];\n        }, i * 50);\n        i++;\n      }\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "direction",
                    "defaultValue": "this.lss.get<SortDirection>('direction') || 'asc'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SortDirection",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "displayedColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "entityName",
                    "defaultValue": "this.service.entityName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "matPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "matSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "this.lss.get<number>('pageIndex') || 0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "pageSize",
                    "defaultValue": "this.lss.get<number>('pageSize') || 20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "searchControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "SEARCH_CONTROL_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "tableEvents$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "visibleColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableColumn[]",
                    "optional": false,
                    "description": "",
                    "line": 78
                }
            ],
            "methodsClass": [
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prepareQuery",
                    "args": [],
                    "optional": false,
                    "returnType": "QueryObject",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                },
                {
                    "name": "PluralPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  Inject,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\nimport { MatSortModule, MatSort, SortDirection } from '@angular/material/sort';\nimport { Observable, debounceTime, map, merge, tap } from 'rxjs';\nimport {\n  LocalStoreService,\n  QueryObject,\n  ResourceService,\n  SEARCH_CONTROL_TOKEN,\n  TABLE_COLUMNS_TOKEN,\n  TableColumn,\n} from '../api';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { PluralPipe } from '../pipes/plural.pipe';\nimport { slideInRightOnEnterAnimation } from 'angular-animations';\nimport '@angular/localize/init';\n\n@Component({\n  selector: 'techbir-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    PluralPipe,\n  ],\n  animations: [\n    slideInRightOnEnterAnimation({ anchor: 'enter', duration: 200 }),\n  ],\n})\nexport class TableComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatPaginator) matPage!: MatPaginator;\n  @ViewChild(MatSort) matSort!: MatSort;\n\n  readonly entityName = this.service.entityName;\n  readonly count$: Observable<number> = this.service.allCount$;\n  data: any[] = [];\n  readonly data$: Observable<any> = this.service.filteredEntities$.pipe(\n    debounceTime(400),\n    map((data) => {\n      this.data = [];\n      let i = 0;\n      for (const d of data) {\n        setTimeout(() => {\n          this.data = [...this.data, d];\n        }, i * 50);\n        i++;\n      }\n    })\n  );\n\n  tableEvents$!: Observable<void>;\n\n  columns!: string[];\n  displayedColumns!: string[];\n  visibleColumns!: TableColumn[];\n\n  pageSize = this.lss.get<number>('pageSize') || 20;\n  pageIndex = this.lss.get<number>('pageIndex') || 0;\n  active = this.lss.get<string>('active') || 'id';\n  direction: SortDirection = this.lss.get<SortDirection>('direction') || 'asc';\n\n  constructor(\n    private readonly service: ResourceService<any>,\n    private readonly lss: LocalStoreService,\n    @Inject(TABLE_COLUMNS_TOKEN)\n    private readonly tableColumns: TableColumn[],\n    @Inject(SEARCH_CONTROL_TOKEN)\n    public readonly searchControl: FormControl\n  ) {}\n\n  ngOnInit(): void {\n    const dColumns = this.lss.get<TableColumn[]>('visibleColumns');\n    this.columns = this.tableColumns.map((e) => e.name);\n    if (dColumns) {\n      this.visibleColumns = [...dColumns];\n      this.displayedColumns = this.visibleColumns.map((e) => e.name);\n    } else {\n      this.visibleColumns = [...this.tableColumns];\n      this.displayedColumns = [...this.columns];\n    }\n\n    this.columns.unshift('id');\n    this.displayedColumns.unshift('id');\n  }\n\n  ngAfterViewInit(): void {\n    this.tableEvents$ = merge(\n      this.matPage.page,\n      this.matSort.sortChange,\n      this.searchControl.valueChanges\n    ).pipe(\n      debounceTime(600),\n      tap((value) => {\n        this.getAll();\n      }),\n      map((value: any) => {\n        return value;\n      })\n    );\n\n    this.getAll();\n  }\n\n  ngOnDestroy(): void {\n    // Save page config\n    const pageIndex = this.matPage.pageIndex;\n    const pageSize = this.matPage.pageSize;\n    this.lss.set('pageIndex', pageIndex);\n    this.lss.set('pageSize', pageSize);\n\n    // Save sort config\n    const direction = this.matSort.direction;\n    const active = this.matSort.active;\n    this.lss.set('direction', direction);\n    this.lss.set('active', active);\n  }\n\n  getAll() {\n    this.service.queryItem(this.prepareQuery());\n  }\n\n  private prepareQuery(): QueryObject {\n    return {\n      take: this.matPage.pageSize,\n      skip: this.matPage.pageIndex * this.matPage.pageSize,\n      orderBy: this.matSort.active,\n      orderDir: this.matSort.direction,\n      search: this.searchControl.value || undefined,\n      withDeleted: false,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\n  width: 100%;\n}\n\ntable{ \n  overflow: hidden;\n}\n\n.table-th{ \n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  \n  gap: 1em;\n}\n",
                    "styleUrl": "./table.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ResourceService<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "tableColumns",
                        "type": "TableColumn[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "searchControl",
                        "type": "FormControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 83,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ResourceService<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lss",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tableColumns",
                        "type": "TableColumn[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "searchControl",
                        "type": "FormControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<ng-container *ngIf=\"tableEvents$ | async\"></ng-container>\n<ng-container *ngIf=\"data$ | async\"></ng-container>\n\n<div>\n  <mat-form-field\n    style=\"\n      position: sticky;\n      top: 0px;\n      z-index: 1;\n      width: 100%;\n      cursor: pointer;\n      letter-spacing: 1px;\n    \"\n  >\n    <mat-label i18n>Search {{ entityName | plural }}</mat-label>\n    <input\n      matInput\n      type=\"search\"\n      autocomplete=\"off\"\n      [formControl]=\"searchControl\"\n    />\n    <mat-icon matPrefix color=\"primary\">search</mat-icon>\n  </mat-form-field>\n  <table\n    mat-table\n    [dataSource]=\"data\"\n    class=\"full-width-table\"\n    matSort\n    aria-label=\"Elements\"\n    [matSortActive]=\"active\"\n    [matSortDirection]=\"direction\"\n  >\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n    </ng-container>\n\n    <ng-container [matColumnDef]=\"col.name\" *ngFor=\"let col of visibleColumns\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\n        <div class=\"table-th\">\n          <mat-icon color=\"primary\">{{ col.icon }}</mat-icon>\n          <span>{{ col.label }}</span>\n        </div>\n      </th>\n      <td mat-cell *matCellDef=\"let row\">{{ row[col.name] }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" [@enter]></tr>\n  </table>\n\n  <mat-paginator\n    #paginator\n    [pageSize]=\"pageSize\"\n    [pageIndex]=\"pageIndex\"\n    [length]=\"count$ | async\"\n    [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n    [showFirstLastButtons]=\"true\"\n    aria-label=\"Select page\"\n    style=\"position: sticky; bottom: 0px\"\n  >\n  </mat-paginator>\n</div>\n"
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-355206ed128f832e16caf1fc35fbc11606f5f2ce6e8432d6e5c522cf1d5834b0c2b38f2327a895e6122f06f53db34556127994d105564b3cb4ae906eba8531ad",
            "file": "libs/material/src/lib/form/textarea/textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-textarea",
            "styleUrls": [
                "./textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textarea.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 59,
                    "rawdescription": "\n\nFormControl instance\n",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "errorMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | undefined>",
                    "optional": false,
                    "description": "<p>Obserable error message</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nObserable error message\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet error message if any\n",
                    "description": "<p>Get error message if any</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2044,
                                "end": 2051,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>string | undefined</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  CommonFieldComponent,\n  CommonFieldModule,\n} from '../common-field/common-field.component';\n\n@Component({\n  selector: 'techbir-textarea',\n  standalone: true,\n  imports: [CommonModule, CommonFieldModule],\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss'],\n})\nexport class TextareaComponent extends CommonFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./textarea.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-form-field [appearance]=\"appearance\">\n    <mat-label>{{ label || 'Form Field' }}</mat-label>\n    <textarea type=\"text\" matInput [formControlName]=\"name\"></textarea>\n    <mat-icon matPrefix color=\"primary\">{{ icon || 'info' }}</mat-icon>\n    <mat-error>{{ errorMessage$ | async }}</mat-error>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "TextFieldComponent",
            "id": "component-TextFieldComponent-77afa284ca75faca1217fd1bd1df8e97ea61729396b5ef37480b482dafa87f5255dfb59b4254f3bd483e865f074b39b93d2666230c9fefe63429f8780c9c1106",
            "file": "libs/material/src/lib/form/text-field/text-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-text-field",
            "styleUrls": [
                "./text-field.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-field.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 59,
                    "rawdescription": "\n\nFormControl instance\n",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "errorMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | undefined>",
                    "optional": false,
                    "description": "<p>Obserable error message</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nObserable error message\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet error message if any\n",
                    "description": "<p>Get error message if any</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2044,
                                "end": 2051,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>string | undefined</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  CommonFieldComponent,\n  CommonFieldModule,\n} from '../common-field/common-field.component';\n\n@Component({\n  selector: 'techbir-text-field',\n  standalone: true,\n  imports: [CommonModule, CommonFieldModule],\n  templateUrl: './text-field.component.html',\n  styleUrls: ['./text-field.component.scss'],\n})\nexport class TextFieldComponent extends CommonFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./text-field.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-form-field [appearance]=\"appearance\">\n    <mat-label>{{ label || 'Form Field' }}</mat-label>\n    <input #inputRef type=\"text\" matInput [formControlName]=\"name\" />\n    <mat-icon matPrefix color=\"primary\">{{ icon || 'info' }}</mat-icon>\n    <mat-error>{{ errorMessage$ | async }}</mat-error>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "TimePickerComponent",
            "id": "component-TimePickerComponent-891d3689f1ac49a63e58e75b56372ffd4eac4a00d231f9d32c8f5f3d7ee53afc8e06a264a03e5a0e46c7aff7e3aa619c3dc9d301574e4a12b54959515c9131a7",
            "file": "libs/material/src/lib/form/time-picker/time-picker.component copy.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-time-picker",
            "styleUrls": [
                "./time-picker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./time-picker.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hour",
                    "defaultValue": "new FormControl('0')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "hours",
                    "defaultValue": "slideLeft(range(1, 12))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "minute",
                    "defaultValue": "new FormControl('0')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "minutes",
                    "defaultValue": "range(0, 59, 5)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "time",
                    "defaultValue": "new FormControl('pm')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "valueChange$",
                    "defaultValue": "combineLatest([\n    this.hour.valueChanges,\n    this.minute.valueChanges,\n    this.time.valueChanges,\n  ]).pipe(\n    debounceTime(400),\n    map((value) => {\n      const [hour, minute, time] = value as any;\n      this.formGroup?.get(this.name)?.setValue({ hour, minute, time });\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 59,
                    "rawdescription": "\n\nFormControl instance\n",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "errorMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | undefined>",
                    "optional": false,
                    "description": "<p>Obserable error message</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nObserable error message\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "setHour",
                    "args": [
                        {
                            "name": "h",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "h",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMinute",
                    "args": [
                        {
                            "name": "h",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "h",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet error message if any\n",
                    "description": "<p>Get error message if any</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2044,
                                "end": 2051,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>string | undefined</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {\n  CommonFieldComponent,\n  CommonFieldModule,\n} from '../common-field/common-field.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { combineLatest, debounceTime, map } from 'rxjs';\nfunction range(start: number, end: number, step = 1) {\n  const n = [];\n  for (let i = start; i <= end; i = i + step) {\n    n.push(i);\n  }\n  return n;\n}\n\nfunction slideLeft(arr: any[]) {\n  return [arr.pop(), ...arr];\n}\n\n@Component({\n  selector: 'techbir-time-picker',\n  standalone: true,\n  imports: [CommonFieldModule, MatButtonModule],\n  templateUrl: './time-picker.component.html',\n  styleUrls: ['./time-picker.component.scss'],\n})\nexport class TimePickerComponent extends CommonFieldComponent {\n  hour = new FormControl('0');\n  minute = new FormControl('0');\n  time = new FormControl('pm');\n  hours = slideLeft(range(1, 12));\n  minutes = range(0, 59, 5);\n\n  valueChange$ = combineLatest([\n    this.hour.valueChanges,\n    this.minute.valueChanges,\n    this.time.valueChanges,\n  ]).pipe(\n    debounceTime(400),\n    map((value) => {\n      const [hour, minute, time] = value as any;\n      this.formGroup?.get(this.name)?.setValue({ hour, minute, time });\n    })\n  );\n\n  setHour(h: string) {\n    this.hour.setValue(h);\n  }\n\n  setMinute(h: string) {\n    this.minute.setValue(h);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$bw: 30px;\r\n$cw: 150px;\r\n$br: 2px;\r\n\r\n.date-time-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n}\r\n\r\n@keyframes flover {\r\n  0% {\r\n    transform: rotateX(0deg);\r\n  }\r\n\r\n  25% {\r\n    transform: rotateX(20deg);\r\n  }\r\n\r\n  50% {\r\n    transform: rotateX(-20deg) rotateY(-20deg);\r\n  }\r\n\r\n  75% {\r\n    transform: rotateY(20deg);\r\n  }\r\n\r\n  100% {\r\n    transform: rotateX(0deg);\r\n  }\r\n}\r\n\r\nbutton {\r\n  width: $bw;\r\n  height: $bw;\r\n  border-radius: 100%;\r\n  position: absolute;\r\n  border: $br solid transparent;\r\n  transition: border ease-in-out 400ms;\r\n}\r\n\r\nbutton:focus {\r\n  border: 3px solid black;\r\n}\r\n\r\n.time-container {\r\n  width: $cw;\r\n  height: $cw;\r\n  position: relative;\r\n}\r\n.select-hours,\r\n.select-minutes {\r\n  width: $cw;\r\n  height: $cw;\r\n  padding: 0px;\r\n  position: relative;\r\n}\r\n\r\n.line {\r\n  width: $bw;\r\n  background-color: rgba(220, 220, 220, 0.769);\r\n  height: calc($cw * 0.5);\r\n  position: absolute;\r\n  top: 0px;\r\n  left: calc(($cw * 0.5) - ($bw * 0.5));\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  overflow: visible;\r\n  border-radius: 100%;\r\n  user-select: none;\r\n  cursor: pointer;\r\n}\r\n.line:hover {\r\n  background-color: rgb(124, 124, 124);\r\n  z-index: 1;\r\n}\r\n.line:hover button {\r\n  border: 3px solid rgba(0, 0, 0, 0.474);\r\n  transition: box-shadow ease-in-out 400ms;\r\n}\r\n\r\n@for $i from 0 through 59 {\r\n  @keyframes a-#{$i} {\r\n    0% {\r\n      transform: rotate(0deg);\r\n      height: 0px;\r\n      top: calc($cw * 0.5);\r\n    }\r\n    100% {\r\n      transform: rotate(#{$i * 30}deg);\r\n      height: calc($cw * 0.5);\r\n      top: 0px;\r\n    }\r\n  }\r\n\r\n  .line:nth-child(#{$i + 1}) {\r\n    transform: rotate(#{$i * 30}deg);\r\n    transform-origin: bottom;\r\n    animation: a-#{$i} 3000ms cubic-bezier(0.165, 0.84, 0.44, 1) 0ms;\r\n    button {\r\n      transform: rotate(-#{$i * 30}deg);\r\n    }\r\n  }\r\n}\r\n\r\n.time-value {\r\n  position: absolute;\r\n  margin: auto;\r\n  top: calc($cw * 0.5 - ($bw * 1.5) * 0.5);\r\n  left: calc($cw * 0.5 - ($bw * 1.5) * 0.5);\r\n  z-index: 2;\r\n  background-color: gray;\r\n  color: white;\r\n  font-size: calc($bw * 0.7);\r\n  width: calc($bw * 1.5);\r\n  height: calc($bw * 1.5);\r\n  border-radius: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: bolder;\r\n\r\n  text-align: center;\r\n  outline: none;\r\n  border: none;\r\n\r\n  animation: flover 1000ms linear 0ms infinite;\r\n}\r\n",
                    "styleUrl": "./time-picker.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-form-field>\n    <mat-label>{{ label || name | titlecase }}</mat-label>\n    <input type=\"datetime-local\" [formControlName]=\"name\" />\n    <mat-hint>MM/DD/YYYY</mat-hint>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "TimePickerComponent",
            "id": "component-TimePickerComponent-e367d3b7ce30d5af5128a0538567ea44011ee95fd399bcf81a5470b0ff0d1f346ce74ae579bea02aacf1c39eb18b2b072b9ed1992e7a5b802a125aa8c501c1a3-1",
            "file": "libs/material/src/lib/form/time-picker/time-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-time-picker",
            "styleUrls": [
                "./time-picker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./time-picker.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty icon\n",
                    "description": "<p>Property icon</p>\n",
                    "line": 54,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty label\n",
                    "description": "<p>Property label</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProperty name\n",
                    "description": "<p>Property name</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FORM_FIELD_APPEARANCE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "<p>FormControl instance</p>\n",
                    "line": 59,
                    "rawdescription": "\n\nFormControl instance\n",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "errorMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | undefined>",
                    "optional": false,
                    "description": "<p>Obserable error message</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nObserable error message\n",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "FormGroup"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet error message if any\n",
                    "description": "<p>Get error message if any</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2044,
                                "end": 2051,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>string | undefined</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CommonFieldComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n  CommonFieldComponent,\n  CommonFieldModule,\n} from '../common-field/common-field.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n@Component({\n  selector: 'techbir-time-picker',\n  standalone: true,\n  imports: [CommonFieldModule, MatDatepickerModule, MatNativeDateModule],\n  templateUrl: './time-picker.component.html',\n  styleUrls: ['./time-picker.component.scss'],\n})\nexport class TimePickerComponent extends CommonFieldComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$bw: 30px;\r\n$cw: 150px;\r\n$br: 2px;\r\n\r\n.date-time-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n}\r\n\r\n@keyframes flover {\r\n  0% {\r\n    transform: rotateX(0deg);\r\n  }\r\n\r\n  25% {\r\n    transform: rotateX(20deg);\r\n  }\r\n\r\n  50% {\r\n    transform: rotateX(-20deg) rotateY(-20deg);\r\n  }\r\n\r\n  75% {\r\n    transform: rotateY(20deg);\r\n  }\r\n\r\n  100% {\r\n    transform: rotateX(0deg);\r\n  }\r\n}\r\n\r\nbutton {\r\n  width: $bw;\r\n  height: $bw;\r\n  border-radius: 100%;\r\n  position: absolute;\r\n  border: $br solid transparent;\r\n  transition: border ease-in-out 400ms;\r\n}\r\n\r\nbutton:focus {\r\n  border: 3px solid black;\r\n}\r\n\r\n.time-container {\r\n  width: $cw;\r\n  height: $cw;\r\n  position: relative;\r\n}\r\n.select-hours,\r\n.select-minutes {\r\n  width: $cw;\r\n  height: $cw;\r\n  padding: 0px;\r\n  position: relative;\r\n}\r\n\r\n.line {\r\n  width: $bw;\r\n  background-color: rgba(220, 220, 220, 0.769);\r\n  height: calc($cw * 0.5);\r\n  position: absolute;\r\n  top: 0px;\r\n  left: calc(($cw * 0.5) - ($bw * 0.5));\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  overflow: visible;\r\n  border-radius: 100%;\r\n  user-select: none;\r\n  cursor: pointer;\r\n}\r\n.line:hover {\r\n  background-color: rgb(124, 124, 124);\r\n  z-index: 1;\r\n}\r\n.line:hover button {\r\n  border: 3px solid rgba(0, 0, 0, 0.474);\r\n  transition: box-shadow ease-in-out 400ms;\r\n}\r\n\r\n@for $i from 0 through 59 {\r\n  @keyframes a-#{$i} {\r\n    0% {\r\n      transform: rotate(0deg);\r\n      height: 0px;\r\n      top: calc($cw * 0.5);\r\n    }\r\n    100% {\r\n      transform: rotate(#{$i * 30}deg);\r\n      height: calc($cw * 0.5);\r\n      top: 0px;\r\n    }\r\n  }\r\n\r\n  .line:nth-child(#{$i + 1}) {\r\n    transform: rotate(#{$i * 30}deg);\r\n    transform-origin: bottom;\r\n    animation: a-#{$i} 3000ms cubic-bezier(0.165, 0.84, 0.44, 1) 0ms;\r\n    button {\r\n      transform: rotate(-#{$i * 30}deg);\r\n    }\r\n  }\r\n}\r\n\r\n.time-value {\r\n  position: absolute;\r\n  margin: auto;\r\n  top: calc($cw * 0.5 - ($bw * 1.5) * 0.5);\r\n  left: calc($cw * 0.5 - ($bw * 1.5) * 0.5);\r\n  z-index: 2;\r\n  background-color: gray;\r\n  color: white;\r\n  font-size: calc($bw * 0.7);\r\n  width: calc($bw * 1.5);\r\n  height: calc($bw * 1.5);\r\n  border-radius: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: bolder;\r\n\r\n  text-align: center;\r\n  outline: none;\r\n  border: none;\r\n\r\n  animation: flover 1000ms linear 0ms infinite;\r\n}\r\n",
                    "styleUrl": "./time-picker.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [
                "CommonFieldComponent"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TimePickerComponent-1",
            "templateData": "<div [formGroup]=\"formGroup\">\n  <mat-form-field>\n    <mat-label>{{ label || name | titlecase }}</mat-label>\n    <input type=\"datetime-local\" [formControlName]=\"name\" />\n    <mat-hint>MM/DD/YYYY</mat-hint>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "UpdateComponent",
            "id": "component-UpdateComponent-48bf266a103ed8743a8b2f34e1b20a4f93f6c3839cb97dc19e7aeb0314e526f2ff27aa93e942d180ae1add309eb5afe2968ad51b81bf479e3243577d01f2082d",
            "file": "libs/material/src/lib/resource/update/update.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-update",
            "styleUrls": [
                "./update.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./update.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'techbir-update',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss'],\n})\nexport class UpdateComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./update.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>update works!</p>\n"
        },
        {
            "name": "ViewComponent",
            "id": "component-ViewComponent-f84355bfdb71a561b7bba338bd20e01e337178ca28f8a826a5fe5e9e6b0ac96cb7a53b165b6e96f93bdb7f93d84869101476227a72a3256dcaad3f46c3df6bc0",
            "file": "libs/material/src/lib/resource/view/view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "techbir-view",
            "styleUrls": [
                "./view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "viewComponent",
                    "defaultValue": "TableComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VIEW_COMPONENT_TOKEN } from '../../api/view.provider';\nimport { TableComponent } from '../../table/table.component';\n\n@Component({\n  selector: 'techbir-view',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss'],\n})\nexport class ViewComponent {\n  viewComponent = TableComponent;\n  constructor(@Optional() @Inject(VIEW_COMPONENT_TOKEN) viewComponent: any) {\n    if (viewComponent) {\n      this.viewComponent = viewComponent;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./view.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "viewComponent",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "viewComponent",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<ng-container *ngIf=\"viewComponent\">\n  <ng-container *ngComponentOutlet=\"viewComponent\"></ng-container>\n</ng-container>\n\n<p *ngIf=\"!viewComponent\">View component is not provided!</p>\n"
        }
    ],
    "modules": [
        {
            "name": "CommonFieldModule",
            "id": "module-CommonFieldModule-3e3e6d76f848376d075daa84e9dec09430d4b0be4abc7a77ccd161e136cf87066147ac21618bf80db510dcff5742c98b9efbcc68243eedf2bf5f7b0198deaab3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/material/src/lib/form/common-field/common-field.component.ts",
            "methods": [],
            "sourceCode": "import {\n  Component,\n  Inject,\n  Input,\n  NgModule,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { FORM_FIELD_APPEARANCE_TOKEN } from '../../api';\nimport { MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport { Observable, debounceTime, map } from 'rxjs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\n\nconst formModules = [\n  CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatButtonModule,\n];\n\n@NgModule({\n  imports: [...formModules],\n  exports: [...formModules],\n})\nexport class CommonFieldModule {}\n\n@Component({ template: '' })\nexport class CommonFieldComponent implements OnInit {\n  /**\n   * Property name\n   */\n  @Input() name!: string;\n\n  /**\n   * Property label\n   */\n  @Input() label = '';\n\n  /**\n   * Property icon\n   */\n  @Input() icon = '';\n\n  /**\n   * FormControl instance\n   */\n  private control!: AbstractControl;\n\n  /**\n   * Obserable error message\n   */\n  errorMessage$!: Observable<string | undefined>;\n\n  constructor(\n    @Inject(FormGroup) public readonly formGroup: FormGroup,\n    @Optional()\n    @Inject(FORM_FIELD_APPEARANCE_TOKEN)\n    public readonly appearance: MatFormField['appearance']\n  ) {\n    if (!appearance) this.appearance = 'outline';\n    if (!formGroup) throw new Error('FormGroup must be provided!');\n  }\n\n  ngOnInit(): void {\n    const foundControl = this.formGroup.get(this.name);\n\n    if (!foundControl) {\n      throw new Error(`${this.name} control is not found in formGroup!`);\n    }\n\n    this.control = foundControl;\n\n    this.errorMessage$ = this.formGroup.valueChanges.pipe(\n      debounceTime(600),\n      map(() => {\n        return this.getErrorMessage();\n      })\n    );\n  }\n\n  /**\n   * Get error message if any\n   * @returns string | undefined\n   */\n  private getErrorMessage(): string | undefined {\n    return this.control.errors?.['error'];\n  }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "DATE_PICKER_FILTER_STRATEGY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/date-filter.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'DATE_PICKER_FILTER_STRATEGY'"
            },
            {
                "name": "ENTITY_NAME_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/resource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'ENTITY_NAME_TOKEN'"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/table/table-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TableItem[]",
                "defaultValue": "[\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n]"
            },
            {
                "name": "FORM_FIELD_APPEARANCE_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'FORM_FIELD_APPEARANCE_TOKEN'"
            },
            {
                "name": "FORM_FIELDS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'FORM_FIELDS_TOKEN'",
                "rawdescription": "Inject list of FormFields",
                "description": "<p>Inject list of FormFields</p>\n"
            },
            {
                "name": "formModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/common-field/common-field.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatButtonModule,\n]"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/navigation/navigation.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/navigation works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/resource works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/skeleton works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/table works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { name: 'active', label: 'Is user active?' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/checkbox works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'dob',\n    label: 'Date of Birth',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'range',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-range works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { name: 'dob', label: 'Dob & Time' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-time works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/number works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/radio works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/search works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/select works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/slider-field works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/switch works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'name',\n    label: 'First Name',\n    icon: 'badge',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/text-field works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { name: 'name' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/textarea works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { name: 'time' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/time-picker works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/config works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "LOCAL_STOREAGE_NAME_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/local-storage.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'LOCAL_STOREAGE_NAME_TOKEN'"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormComponent>",
                "defaultValue": "{\n  component: FormComponent,\n  title: 'FormComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/navigation/navigation.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavigationComponent>",
                "defaultValue": "{\n  component: NavigationComponent,\n  title: 'NavigationComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterTestingModule.withRoutes([], {}),\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatListModule,\n        MatIconModule,\n        MatTooltipModule,\n      ],\n\n      providers: [\n        provideNavItems([{ name: 'Home', icon: 'home', route: 'home' }]),\n        provideLocalStoreService('navigation'),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ResourceComponent>",
                "defaultValue": "{\n  component: ResourceComponent,\n  title: 'ResourceComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SkeletonComponent>",
                "defaultValue": "{\n  component: SkeletonComponent,\n  title: 'SkeletonComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\n  component: TableComponent,\n  title: 'TableComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\n  component: CheckboxComponent,\n  title: 'CheckboxComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [CommonFieldModule, MatCheckboxModule],\n      providers: [provideFormGroup({ active: false })],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateComponent>",
                "defaultValue": "{\n  component: DateComponent,\n  title: 'DateComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        BrowserAnimationsModule,\n        CommonFieldModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n      ],\n      providers: [provideFormGroup({ dob: '' })],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateRangeComponent>",
                "defaultValue": "{\n  component: DateRangeComponent,\n  title: 'DateRangeComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonFieldModule,\n        BrowserAnimationsModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n      ],\n      providers: [\n        provideFormGroup({ range: '' }),\n        // provideDateRangeSelectionStrategy(FiveDayRangeSelectionStrategy),\n        // provideDateRangeSelectionStrategy(WeekDaysStrategy),\n        provideDateRangeSelectionStrategy(WeekEndsStrategy),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DateTimeComponent>",
                "defaultValue": "{\n  component: DateTimeComponent,\n  title: 'DateTimeComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        BrowserAnimationsModule,\n        CommonFieldModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n      ],\n      providers: [provideFormGroup({ dob: '' })],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NumberComponent>",
                "defaultValue": "{\n  component: NumberComponent,\n  title: 'NumberComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioComponent>",
                "defaultValue": "{\n  component: RadioComponent,\n  title: 'RadioComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SearchComponent>",
                "defaultValue": "{\n  component: SearchComponent,\n  title: 'SearchComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectComponent>",
                "defaultValue": "{\n  component: SelectComponent,\n  title: 'SelectComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SliderFieldComponent>",
                "defaultValue": "{\n  component: SliderFieldComponent,\n  title: 'SliderFieldComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SwitchComponent>",
                "defaultValue": "{\n  component: SwitchComponent,\n  title: 'SwitchComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextFieldComponent>",
                "defaultValue": "{\n  component: TextFieldComponent,\n  title: 'TextFieldComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [CommonFieldModule],\n      providers: [provideFormGroup({ name: '' })],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextareaComponent>",
                "defaultValue": "{\n  component: TextareaComponent,\n  title: 'TextareaComponent',\n\n  decorators: [\n    moduleMetadata({\n      imports: [CommonFieldModule],\n      providers: [\n        provideFormGroup({ name: '' }),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TimePickerComponent>",
                "defaultValue": "{\n  component: TimePickerComponent,\n  title: 'TimePickerComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [CommonFieldModule],\n      providers: [provideFormGroup({ time: '' })],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ConfigComponent>",
                "defaultValue": "{\n  component: ConfigComponent,\n  title: 'ConfigComponent',\n}"
            },
            {
                "name": "NAV_ITEMS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/nav-item.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'NAV_ITEMS_TOKEN'"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/navigation/navigation.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'active',\n    label: 'Is user active?',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'dob',\n    label: 'Date of Birth',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'range',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { name: 'dob', label: 'Dob & Time' },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'name',\n    label: 'First Name',\n    icon: 'badge',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { name: 'name' },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { name: 'time' },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "ResourceRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/resource/resource.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Routes",
                "defaultValue": "(\r\n  entityName: string\r\n) => [\r\n  {\r\n    title: entityName,\r\n    providers: [\r\n      provideEntityName(entityName),\r\n      provideSearchControl(),\r\n      provideNavItems([\r\n        { icon: 'dashboard', name: 'dashboard', route: 'dashboard' },\r\n        { icon: 'dataset', name: `view`, route: 'view' },\r\n        { icon: 'add_box', name: `create`, route: 'create' },\r\n        { icon: 'settings', name: `config`, route: 'config' },\r\n      ]),\r\n      provideLocalStoreService(entityName + 'Navigation'),\r\n      ResourceService,\r\n    ],\r\n    path: '',\r\n    loadComponent: () =>\r\n      import('../navigation/navigation.component').then(\r\n        (c) => c.NavigationComponent\r\n      ),\r\n\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadComponent: () =>\r\n          import('./resource.component').then((c) => c.ResourceComponent),\r\n      },\r\n      {\r\n        title: $localize`${entityName} Dashboard`,\r\n        path: 'dashboard',\r\n\r\n        loadComponent: () =>\r\n          import('./dashboard/dashboard.component').then(\r\n            (c) => c.DashboardComponent\r\n          ),\r\n\r\n        providers: [provideLocalStoreService(entityName + 'Dashboard')],\r\n      },\r\n\r\n      {\r\n        title: $localize`View ${entityName}s`,\r\n        path: 'view',\r\n        loadComponent: () =>\r\n          import('./view/view.component').then((c) => c.ViewComponent),\r\n        providers: [provideLocalStoreService(entityName + 'View')],\r\n      },\r\n      {\r\n        title: $localize`Details of ${entityName}`,\r\n        path: 'view/:id',\r\n        loadComponent: () =>\r\n          import('./detail/detail.component').then((c) => c.DetailComponent),\r\n        providers: [provideLocalStoreService(entityName + 'Detail')],\r\n      },\r\n      {\r\n        title: $localize`Create ${entityName}`,\r\n        path: 'create',\r\n        loadComponent: () =>\r\n          import('./create/create.component').then((c) => c.CreateComponent),\r\n        providers: [provideLocalStoreService(entityName + 'Create')],\r\n      },\r\n      {\r\n        title: $localize`Update ${entityName}`,\r\n        path: 'update/:id',\r\n        loadComponent: () =>\r\n          import('./update/update.component').then((c) => c.UpdateComponent),\r\n        providers: [provideLocalStoreService(entityName + 'Update')],\r\n      },\r\n      {\r\n        title: $localize`Delete ${entityName}`,\r\n        path: 'delete/:id',\r\n        loadComponent: () =>\r\n          import('./delete/delete.component').then((c) => c.DeleteComponent),\r\n        providers: [provideLocalStoreService(entityName + 'Delete')],\r\n      },\r\n      {\r\n        title: $localize`Configure ${entityName} Resource`,\r\n        path: 'config',\r\n        loadComponent: () =>\r\n          import('./config/config.component').then((c) => c.ConfigComponent),\r\n        providers: [provideLocalStoreService(entityName + 'Config')],\r\n      },\r\n    ],\r\n  },\r\n]"
            },
            {
                "name": "SEARCH_CONTROL_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/table.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'SEARCH_CONTROL_TOKEN'"
            },
            {
                "name": "TABLE_COLUMNS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/table.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'TABLE_COLUMNS_TOKEN'"
            },
            {
                "name": "UrlInterceptorFn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/url.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(\r\n  req: HttpRequest<any>,\r\n  next: HttpHandlerFn\r\n): Observable<HttpEvent<any>> => {\r\n  const url = req.url;\r\n  const apiReq = req.clone({ url: 'http://localhost:3000/' + url });\r\n  return next(apiReq);\r\n}"
            },
            {
                "name": "VIEW_COMPONENT_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/src/lib/api/view.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'VIEW_COMPONENT_TOKEN'"
            }
        ],
        "functions": [
            {
                "name": "compare",
                "file": "libs/material/src/lib/table/table-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "DisableWeekEndsStategy",
                "file": "libs/material/src/lib/api/date-filter.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "date",
                        "type": "D",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "date",
                        "type": "D",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideDatePickerFilter",
                "file": "libs/material/src/lib/api/date-filter.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "dateFilter",
                        "type": "DateFilterFn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "dateFilter",
                        "type": "DateFilterFn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideDateRangeSelectionStrategy",
                "file": "libs/material/src/lib/api/date-selection-strategy.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "strategy",
                        "type": "Type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "strategy",
                        "type": "Type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideEntityName",
                "file": "libs/material/src/lib/api/resource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideFormFieldAppearance",
                "file": "libs/material/src/lib/api/form.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "appearance",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "appearance",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideFormFields",
                "file": "libs/material/src/lib/api/form.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fields",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "fields",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideFormGroup",
                "file": "libs/material/src/lib/api/form.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "record",
                        "type": "Record",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "record",
                        "type": "Record",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideLocalStoreService",
                "file": "libs/material/src/lib/api/local-storage.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideNavItems",
                "file": "libs/material/src/lib/api/nav-item.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "navItems",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "navItems",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideSearchControl",
                "file": "libs/material/src/lib/api/table.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Provider"
            },
            {
                "name": "provideTableColumns",
                "file": "libs/material/src/lib/api/table.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "tableColumns",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "tableColumns",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideViewComponent",
                "file": "libs/material/src/lib/api/view.provider.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "viewComponent",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 123,
                            "end": 136,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "viewComponent"
                        },
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 117,
                            "end": 122,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>Table, List, CardGrid etc.</p>\n"
                    },
                    {
                        "tagName": {
                            "pos": 169,
                            "end": 176,
                            "flags": 16777216,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "returns"
                        },
                        "comment": ""
                    }
                ]
            },
            {
                "name": "range",
                "file": "libs/material/src/lib/form/time-picker/time-picker.component copy.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "start",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "end",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "step",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "1"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "start",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "end",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "step",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "1",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "slideLeft",
                "file": "libs/material/src/lib/form/time-picker/time-picker.component copy.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "arr",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "arr",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "FormField",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "InputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"checkbox\" | \"date\" | \"date-range\" | \"date-time\" | \"number\" | \"radio\" | \"select\" | \"slider\" | \"switch\" | \"text\" | \"textarea\"",
                "file": "libs/material/src/lib/api/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "QueryObject",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/resource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "SelectItemOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/form.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormComponent>",
                "file": "libs/material/src/lib/form/form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavigationComponent>",
                "file": "libs/material/src/lib/navigation/navigation.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ResourceComponent>",
                "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SkeletonComponent>",
                "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "libs/material/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateComponent>",
                "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateRangeComponent>",
                "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DateTimeComponent>",
                "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NumberComponent>",
                "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioComponent>",
                "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SearchComponent>",
                "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectComponent>",
                "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SliderFieldComponent>",
                "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SwitchComponent>",
                "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextFieldComponent>",
                "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextareaComponent>",
                "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TimePickerComponent>",
                "file": "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ConfigComponent>",
                "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "TableColumn",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/src/lib/api/table.provider.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/material/src/lib/api/date-filter.provider.ts": [
                {
                    "name": "DATE_PICKER_FILTER_STRATEGY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/date-filter.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'DATE_PICKER_FILTER_STRATEGY'"
                }
            ],
            "libs/material/src/lib/api/resource.service.ts": [
                {
                    "name": "ENTITY_NAME_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/resource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'ENTITY_NAME_TOKEN'"
                }
            ],
            "libs/material/src/lib/table/table-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/table/table-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableItem[]",
                    "defaultValue": "[\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n]"
                }
            ],
            "libs/material/src/lib/api/form.provider.ts": [
                {
                    "name": "FORM_FIELD_APPEARANCE_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'FORM_FIELD_APPEARANCE_TOKEN'"
                },
                {
                    "name": "FORM_FIELDS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'FORM_FIELDS_TOKEN'",
                    "rawdescription": "Inject list of FormFields",
                    "description": "<p>Inject list of FormFields</p>\n"
                }
            ],
            "libs/material/src/lib/form/common-field/common-field.component.ts": [
                {
                    "name": "formModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/common-field/common-field.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatButtonModule,\n]"
                }
            ],
            "libs/material/src/lib/form/form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/form works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormComponent>",
                    "defaultValue": "{\n  component: FormComponent,\n  title: 'FormComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/navigation/navigation.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/navigation/navigation.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/navigation works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/navigation/navigation.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavigationComponent>",
                    "defaultValue": "{\n  component: NavigationComponent,\n  title: 'NavigationComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterTestingModule.withRoutes([], {}),\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatListModule,\n        MatIconModule,\n        MatTooltipModule,\n      ],\n\n      providers: [\n        provideNavItems([{ name: 'Home', icon: 'home', route: 'home' }]),\n        provideLocalStoreService('navigation'),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/navigation/navigation.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/resource/resource.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/resource works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ResourceComponent>",
                    "defaultValue": "{\n  component: ResourceComponent,\n  title: 'ResourceComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/skeleton/skeleton.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/skeleton works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SkeletonComponent>",
                    "defaultValue": "{\n  component: SkeletonComponent,\n  title: 'SkeletonComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/table/table.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/table works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\n  component: TableComponent,\n  title: 'TableComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { name: 'active', label: 'Is user active?' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/checkbox works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\n  component: CheckboxComponent,\n  title: 'CheckboxComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [CommonFieldModule, MatCheckboxModule],\n      providers: [provideFormGroup({ active: false })],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'active',\n    label: 'Is user active?',\n  },\n}"
                }
            ],
            "libs/material/src/lib/form/date/date.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'dob',\n    label: 'Date of Birth',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateComponent>",
                    "defaultValue": "{\n  component: DateComponent,\n  title: 'DateComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        BrowserAnimationsModule,\n        CommonFieldModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n      ],\n      providers: [provideFormGroup({ dob: '' })],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'dob',\n    label: 'Date of Birth',\n  },\n}"
                }
            ],
            "libs/material/src/lib/form/date-range/date-range.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'range',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-range works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateRangeComponent>",
                    "defaultValue": "{\n  component: DateRangeComponent,\n  title: 'DateRangeComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonFieldModule,\n        BrowserAnimationsModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n      ],\n      providers: [\n        provideFormGroup({ range: '' }),\n        // provideDateRangeSelectionStrategy(FiveDayRangeSelectionStrategy),\n        // provideDateRangeSelectionStrategy(WeekDaysStrategy),\n        provideDateRangeSelectionStrategy(WeekEndsStrategy),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'range',\n  },\n}"
                }
            ],
            "libs/material/src/lib/form/date-time/date-time.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { name: 'dob', label: 'Dob & Time' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-time works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DateTimeComponent>",
                    "defaultValue": "{\n  component: DateTimeComponent,\n  title: 'DateTimeComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        BrowserAnimationsModule,\n        CommonFieldModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n      ],\n      providers: [provideFormGroup({ dob: '' })],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { name: 'dob', label: 'Dob & Time' },\n}"
                }
            ],
            "libs/material/src/lib/form/number/number.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/number works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NumberComponent>",
                    "defaultValue": "{\n  component: NumberComponent,\n  title: 'NumberComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/radio/radio.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/radio works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioComponent>",
                    "defaultValue": "{\n  component: RadioComponent,\n  title: 'RadioComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/search/search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/search works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SearchComponent>",
                    "defaultValue": "{\n  component: SearchComponent,\n  title: 'SearchComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/select/select.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/select works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectComponent>",
                    "defaultValue": "{\n  component: SelectComponent,\n  title: 'SelectComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/slider-field works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SliderFieldComponent>",
                    "defaultValue": "{\n  component: SliderFieldComponent,\n  title: 'SliderFieldComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/switch/switch.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/switch works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SwitchComponent>",
                    "defaultValue": "{\n  component: SwitchComponent,\n  title: 'SwitchComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/form/text-field/text-field.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'name',\n    label: 'First Name',\n    icon: 'badge',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/text-field works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextFieldComponent>",
                    "defaultValue": "{\n  component: TextFieldComponent,\n  title: 'TextFieldComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [CommonFieldModule],\n      providers: [provideFormGroup({ name: '' })],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'name',\n    label: 'First Name',\n    icon: 'badge',\n  },\n}"
                }
            ],
            "libs/material/src/lib/form/textarea/textarea.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { name: 'name' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/textarea works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextareaComponent>",
                    "defaultValue": "{\n  component: TextareaComponent,\n  title: 'TextareaComponent',\n\n  decorators: [\n    moduleMetadata({\n      imports: [CommonFieldModule],\n      providers: [\n        provideFormGroup({ name: '' }),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { name: 'name' },\n}"
                }
            ],
            "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { name: 'time' },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/time-picker works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TimePickerComponent>",
                    "defaultValue": "{\n  component: TimePickerComponent,\n  title: 'TimePickerComponent',\n  decorators: [\n    moduleMetadata({\n      imports: [CommonFieldModule],\n      providers: [provideFormGroup({ time: '' })],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { name: 'time' },\n}"
                }
            ],
            "libs/material/src/lib/resource/config/config.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/config works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ConfigComponent>",
                    "defaultValue": "{\n  component: ConfigComponent,\n  title: 'ConfigComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/src/lib/api/local-storage.service.ts": [
                {
                    "name": "LOCAL_STOREAGE_NAME_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/local-storage.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'LOCAL_STOREAGE_NAME_TOKEN'"
                }
            ],
            "libs/material/src/lib/api/nav-item.provider.ts": [
                {
                    "name": "NAV_ITEMS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/nav-item.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'NAV_ITEMS_TOKEN'"
                }
            ],
            "libs/material/src/lib/resource/resource.routes.ts": [
                {
                    "name": "ResourceRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/resource/resource.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Routes",
                    "defaultValue": "(\r\n  entityName: string\r\n) => [\r\n  {\r\n    title: entityName,\r\n    providers: [\r\n      provideEntityName(entityName),\r\n      provideSearchControl(),\r\n      provideNavItems([\r\n        { icon: 'dashboard', name: 'dashboard', route: 'dashboard' },\r\n        { icon: 'dataset', name: `view`, route: 'view' },\r\n        { icon: 'add_box', name: `create`, route: 'create' },\r\n        { icon: 'settings', name: `config`, route: 'config' },\r\n      ]),\r\n      provideLocalStoreService(entityName + 'Navigation'),\r\n      ResourceService,\r\n    ],\r\n    path: '',\r\n    loadComponent: () =>\r\n      import('../navigation/navigation.component').then(\r\n        (c) => c.NavigationComponent\r\n      ),\r\n\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadComponent: () =>\r\n          import('./resource.component').then((c) => c.ResourceComponent),\r\n      },\r\n      {\r\n        title: $localize`${entityName} Dashboard`,\r\n        path: 'dashboard',\r\n\r\n        loadComponent: () =>\r\n          import('./dashboard/dashboard.component').then(\r\n            (c) => c.DashboardComponent\r\n          ),\r\n\r\n        providers: [provideLocalStoreService(entityName + 'Dashboard')],\r\n      },\r\n\r\n      {\r\n        title: $localize`View ${entityName}s`,\r\n        path: 'view',\r\n        loadComponent: () =>\r\n          import('./view/view.component').then((c) => c.ViewComponent),\r\n        providers: [provideLocalStoreService(entityName + 'View')],\r\n      },\r\n      {\r\n        title: $localize`Details of ${entityName}`,\r\n        path: 'view/:id',\r\n        loadComponent: () =>\r\n          import('./detail/detail.component').then((c) => c.DetailComponent),\r\n        providers: [provideLocalStoreService(entityName + 'Detail')],\r\n      },\r\n      {\r\n        title: $localize`Create ${entityName}`,\r\n        path: 'create',\r\n        loadComponent: () =>\r\n          import('./create/create.component').then((c) => c.CreateComponent),\r\n        providers: [provideLocalStoreService(entityName + 'Create')],\r\n      },\r\n      {\r\n        title: $localize`Update ${entityName}`,\r\n        path: 'update/:id',\r\n        loadComponent: () =>\r\n          import('./update/update.component').then((c) => c.UpdateComponent),\r\n        providers: [provideLocalStoreService(entityName + 'Update')],\r\n      },\r\n      {\r\n        title: $localize`Delete ${entityName}`,\r\n        path: 'delete/:id',\r\n        loadComponent: () =>\r\n          import('./delete/delete.component').then((c) => c.DeleteComponent),\r\n        providers: [provideLocalStoreService(entityName + 'Delete')],\r\n      },\r\n      {\r\n        title: $localize`Configure ${entityName} Resource`,\r\n        path: 'config',\r\n        loadComponent: () =>\r\n          import('./config/config.component').then((c) => c.ConfigComponent),\r\n        providers: [provideLocalStoreService(entityName + 'Config')],\r\n      },\r\n    ],\r\n  },\r\n]"
                }
            ],
            "libs/material/src/lib/api/table.provider.ts": [
                {
                    "name": "SEARCH_CONTROL_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/table.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'SEARCH_CONTROL_TOKEN'"
                },
                {
                    "name": "TABLE_COLUMNS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/table.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'TABLE_COLUMNS_TOKEN'"
                }
            ],
            "libs/material/src/lib/api/url.interceptor.ts": [
                {
                    "name": "UrlInterceptorFn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/url.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(\r\n  req: HttpRequest<any>,\r\n  next: HttpHandlerFn\r\n): Observable<HttpEvent<any>> => {\r\n  const url = req.url;\r\n  const apiReq = req.clone({ url: 'http://localhost:3000/' + url });\r\n  return next(apiReq);\r\n}"
                }
            ],
            "libs/material/src/lib/api/view.provider.ts": [
                {
                    "name": "VIEW_COMPONENT_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/src/lib/api/view.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'VIEW_COMPONENT_TOKEN'"
                }
            ]
        },
        "groupedFunctions": {
            "libs/material/src/lib/table/table-datasource.ts": [
                {
                    "name": "compare",
                    "file": "libs/material/src/lib/table/table-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/date-filter.provider.ts": [
                {
                    "name": "DisableWeekEndsStategy",
                    "file": "libs/material/src/lib/api/date-filter.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "date",
                            "type": "D",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "D",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideDatePickerFilter",
                    "file": "libs/material/src/lib/api/date-filter.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "dateFilter",
                            "type": "DateFilterFn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "dateFilter",
                            "type": "DateFilterFn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/date-selection-strategy.provider.ts": [
                {
                    "name": "provideDateRangeSelectionStrategy",
                    "file": "libs/material/src/lib/api/date-selection-strategy.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "strategy",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "strategy",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/resource.service.ts": [
                {
                    "name": "provideEntityName",
                    "file": "libs/material/src/lib/api/resource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/form.provider.ts": [
                {
                    "name": "provideFormFieldAppearance",
                    "file": "libs/material/src/lib/api/form.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "appearance",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "appearance",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideFormFields",
                    "file": "libs/material/src/lib/api/form.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fields",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideFormGroup",
                    "file": "libs/material/src/lib/api/form.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "record",
                            "type": "Record",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "record",
                            "type": "Record",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/local-storage.service.ts": [
                {
                    "name": "provideLocalStoreService",
                    "file": "libs/material/src/lib/api/local-storage.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/nav-item.provider.ts": [
                {
                    "name": "provideNavItems",
                    "file": "libs/material/src/lib/api/nav-item.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "navItems",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "navItems",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/table.provider.ts": [
                {
                    "name": "provideSearchControl",
                    "file": "libs/material/src/lib/api/table.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Provider"
                },
                {
                    "name": "provideTableColumns",
                    "file": "libs/material/src/lib/api/table.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "tableColumns",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "tableColumns",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/material/src/lib/api/view.provider.ts": [
                {
                    "name": "provideViewComponent",
                    "file": "libs/material/src/lib/api/view.provider.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "viewComponent",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 123,
                                "end": 136,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "viewComponent"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 117,
                                "end": 122,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>Table, List, CardGrid etc.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 169,
                                "end": 176,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "libs/material/src/lib/form/time-picker/time-picker.component copy.ts": [
                {
                    "name": "range",
                    "file": "libs/material/src/lib/form/time-picker/time-picker.component copy.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "step",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "step",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "slideLeft",
                    "file": "libs/material/src/lib/form/time-picker/time-picker.component copy.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "arr",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "arr",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/material/src/lib/api/form.provider.ts": [
                {
                    "name": "FormField",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "InputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"checkbox\" | \"date\" | \"date-range\" | \"date-time\" | \"number\" | \"radio\" | \"select\" | \"slider\" | \"switch\" | \"text\" | \"textarea\"",
                    "file": "libs/material/src/lib/api/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "SelectItemOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/form.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/api/resource.service.ts": [
                {
                    "name": "QueryObject",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/resource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/src/lib/form/form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormComponent>",
                    "file": "libs/material/src/lib/form/form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/navigation/navigation.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavigationComponent>",
                    "file": "libs/material/src/lib/navigation/navigation.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/resource/resource.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ResourceComponent>",
                    "file": "libs/material/src/lib/resource/resource.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/skeleton/skeleton.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SkeletonComponent>",
                    "file": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/table/table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "libs/material/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/date/date.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateComponent>",
                    "file": "libs/material/src/lib/form/date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/date-range/date-range.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateRangeComponent>",
                    "file": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/date-time/date-time.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DateTimeComponent>",
                    "file": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/number/number.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NumberComponent>",
                    "file": "libs/material/src/lib/form/number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/radio/radio.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioComponent>",
                    "file": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/search/search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SearchComponent>",
                    "file": "libs/material/src/lib/form/search/search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/select/select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectComponent>",
                    "file": "libs/material/src/lib/form/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SliderFieldComponent>",
                    "file": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/switch/switch.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SwitchComponent>",
                    "file": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/text-field/text-field.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextFieldComponent>",
                    "file": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/textarea/textarea.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextareaComponent>",
                    "file": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TimePickerComponent>",
                    "file": "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/resource/config/config.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ConfigComponent>",
                    "file": "libs/material/src/lib/resource/config/config.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/src/lib/api/table.provider.ts": [
                {
                    "name": "TableColumn",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/src/lib/api/table.provider.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 7,
        "status": "low",
        "files": [
            {
                "filePath": "libs/material/src/lib/api/can-active.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CanActivateService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/date-filter.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "DisableWeekEndsStategy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/date-filter.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideDatePickerFilter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/date-filter.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DATE_PICKER_FILTER_STRATEGY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/date-selection-strategy.provider.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FiveDayRangeSelectionStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/date-selection-strategy.provider.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WeekDaysStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/date-selection-strategy.provider.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WeekEndsStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/date-selection-strategy.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideDateRangeSelectionStrategy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/form.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideFormFieldAppearance",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/form.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideFormFields",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/form.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideFormGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/form.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FORM_FIELD_APPEARANCE_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/form.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FORM_FIELDS_TOKEN",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/lib/api/input-filter.provider.ts",
                "type": "class",
                "linktype": "classe",
                "name": "InputValueFilter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/local-storage.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LocalStoreService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/local-storage.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideLocalStoreService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/local-storage.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LOCAL_STOREAGE_NAME_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/nav-item.provider.ts",
                "type": "class",
                "linktype": "classe",
                "name": "NavItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/nav-item.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideNavItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/nav-item.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAV_ITEMS_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/resource.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ResourceService",
                "coveragePercent": 22,
                "coverageCount": "2/9",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/resource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideEntityName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/resource.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ENTITY_NAME_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/table.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideSearchControl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/table.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideTableColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/table.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SEARCH_CONTROL_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/table.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TABLE_COLUMNS_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/url.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UrlInterceptorFn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/view.provider.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/api/view.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VIEW_COMPONENT_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 60,
                "coverageCount": "6/10",
                "status": "good"
            },
            {
                "filePath": "libs/material/src/lib/form/common-field/common-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommonFieldComponent",
                "coveragePercent": 54,
                "coverageCount": "6/11",
                "status": "good"
            },
            {
                "filePath": "libs/material/src/lib/form/common-field/common-field.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-range/date-range.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-range/date-range.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateRangeComponent",
                "coveragePercent": 54,
                "coverageCount": "6/11",
                "status": "good"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date-time/date-time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateTimeComponent",
                "coveragePercent": 60,
                "coverageCount": "6/10",
                "status": "good"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/date/date.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateComponent",
                "coveragePercent": 60,
                "coverageCount": "6/10",
                "status": "good"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 37,
                "coverageCount": "3/8",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/number/number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/radio/radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/search/search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/search/search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/search/search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/slider-field/slider-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/slider-field/slider-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/switch/switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/text-field/text-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/text-field/text-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextFieldComponent",
                "coveragePercent": 60,
                "coverageCount": "6/10",
                "status": "good"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 60,
                "coverageCount": "6/10",
                "status": "good"
            },
            {
                "filePath": "libs/material/src/lib/form/time-picker/time-picker.component copy.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimePickerComponent",
                "coveragePercent": 33,
                "coverageCount": "6/18",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/form/time-picker/time-picker.component copy.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "range",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/time-picker/time-picker.component copy.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "slideLeft",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/time-picker/time-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/form/time-picker/time-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimePickerComponent",
                "coveragePercent": 60,
                "coverageCount": "6/10",
                "status": "good"
            },
            {
                "filePath": "libs/material/src/lib/navigation/navigation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/navigation/navigation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/navigation/navigation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/navigation/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/pipes/plural.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "PluralPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/config/config.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/config/config.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfigComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/create/create.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateComponent",
                "coveragePercent": 42,
                "coverageCount": "3/7",
                "status": "medium"
            },
            {
                "filePath": "libs/material/src/lib/resource/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/delete/delete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/detail/detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/resource.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/resource.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/resource.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/resource.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResourceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/resource.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ResourceRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/update/update.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/resource/view/view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/skeleton/skeleton.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/skeleton/skeleton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkeletonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TableDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "libs/material/src/lib/table/table-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/material/src/lib/table/table-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/src/lib/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            }
        ]
    }
}
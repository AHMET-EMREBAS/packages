"use strict";(self.webpackChunk_techbir_source=self.webpackChunk_techbir_source||[]).push([[959],{"./node_modules/.pnpm/@ngrx+data@16.3.0_@angular+common@16.2.0_@angular+core@16.2.0_@ngrx+effects@16.3.0_@ngrx+enti_6kuft62vpebc24xzoho6ledwgq/node_modules/@ngrx/data/fesm2022/ngrx-data.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c8:()=>EntityCollectionServiceBase,yV:()=>EntityCollectionServiceElementsFactory,Kp:()=>MergeStrategy});var core=__webpack_require__("./node_modules/.pnpm/@angular+core@16.2.0_rxjs@7.8.1_zone.js@0.13.0/node_modules/@angular/core/fesm2022/core.mjs"),operators_filter=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/filter.js"),operators_map=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/map.js"),delay=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/delay.js"),scheduler_async=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),isDate=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/isDate.js"),lift=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/lift.js"),innerFrom=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),createErrorClass=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js"),OperatorSubscriber=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),executeSchedule=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js"),TimeoutError=(0,createErrorClass.d)((function(_super){return function TimeoutErrorImpl(info){void 0===info&&(info=null),_super(this),this.message="Timeout has occurred",this.name="TimeoutError",this.info=info}}));function timeout(config,schedulerArg){var _a=(0,isDate.q)(config)?{first:config}:"number"==typeof config?{each:config}:config,first=_a.first,each=_a.each,_b=_a.with,_with=void 0===_b?timeoutErrorFactory:_b,_c=_a.scheduler,scheduler=void 0===_c?null!=schedulerArg?schedulerArg:scheduler_async.z:_c,_d=_a.meta,meta=void 0===_d?null:_d;if(null==first&&null==each)throw new TypeError("No timeout provided.");return(0,lift.e)((function(source,subscriber){var originalSourceSubscription,timerSubscription,lastValue=null,seen=0,startTimer=function(delay){timerSubscription=(0,executeSchedule.f)(subscriber,scheduler,(function(){try{originalSourceSubscription.unsubscribe(),(0,innerFrom.Xf)(_with({meta,lastValue,seen})).subscribe(subscriber)}catch(err){subscriber.error(err)}}),delay)};originalSourceSubscription=source.subscribe((0,OperatorSubscriber.x)(subscriber,(function(value){null==timerSubscription||timerSubscription.unsubscribe(),seen++,subscriber.next(lastValue=value),each>0&&startTimer(each)}),void 0,void 0,(function(){(null==timerSubscription?void 0:timerSubscription.closed)||null==timerSubscription||timerSubscription.unsubscribe(),lastValue=null}))),!seen&&startTimer(null!=first?"number"==typeof first?first:+first-scheduler.now():each)}))}function timeoutErrorFactory(info){throw new TimeoutError(info)}var catchError=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/catchError.js"),shareReplay=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js"),take=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/take.js"),mergeMap=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.6.2/node_modules/tslib/tslib.es6.mjs"),identity=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/identity.js"),noop=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/noop.js"),args=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/args.js");function withLatestFrom_withLatestFrom(){for(var inputs=[],_i=0;_i<arguments.length;_i++)inputs[_i]=arguments[_i];var project=(0,args.jO)(inputs);return(0,lift.e)((function(source,subscriber){for(var len=inputs.length,otherValues=new Array(len),hasValue=inputs.map((function(){return!1})),ready=!1,_loop_1=function(i){(0,innerFrom.Xf)(inputs[i]).subscribe((0,OperatorSubscriber.x)(subscriber,(function(value){otherValues[i]=value,ready||hasValue[i]||(hasValue[i]=!0,(ready=hasValue.every(identity.y))&&(hasValue=null))}),noop.Z))},i=0;i<len;i++)_loop_1(i);source.subscribe((0,OperatorSubscriber.x)(subscriber,(function(value){if(ready){var values=(0,tslib_es6.ev)([value],(0,tslib_es6.CR)(otherValues));subscriber.next(project?project.apply(void 0,(0,tslib_es6.ev)([],(0,tslib_es6.CR)(values))):values)}})))}))}var operators_concatMap=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/concatMap.js"),http=__webpack_require__("./node_modules/.pnpm/@angular+common@16.2.0_@angular+core@16.2.0_rxjs@7.8.1/node_modules/@angular/common/fesm2022/http.mjs"),internal_Observable=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/Observable.js"),throwError=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/observable/throwError.js"),observable_of=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/observable/of.js"),isArray=Array.isArray;function race(){for(var sources=[],_i=0;_i<arguments.length;_i++)sources[_i]=arguments[_i];return sources=function argsOrArgArray(args){return 1===args.length&&isArray(args[0])?args[0]:args}(sources),1===sources.length?(0,innerFrom.Xf)(sources[0]):new internal_Observable.y(function raceInit(sources){return function(subscriber){for(var subscriptions=[],_loop_1=function(i){subscriptions.push((0,innerFrom.Xf)(sources[i]).subscribe((0,OperatorSubscriber.x)(subscriber,(function(value){if(subscriptions){for(var s=0;s<subscriptions.length;s++)s!==i&&subscriptions[s].unsubscribe();subscriptions=null}subscriber.next(value)}))))},i=0;subscriptions&&!subscriber.closed&&i<sources.length;i++)_loop_1(i)}}(sources))}var observable_merge=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/observable/merge.js"),BehaviorSubject=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),internal_Subject=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/Subject.js"),QueueAction=function(_super){function QueueAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;return _this.scheduler=scheduler,_this.work=work,_this}return(0,tslib_es6.ZT)(QueueAction,_super),QueueAction.prototype.schedule=function(state,delay){return void 0===delay&&(delay=0),delay>0?_super.prototype.schedule.call(this,state,delay):(this.delay=delay,this.state=state,this.scheduler.flush(this),this)},QueueAction.prototype.execute=function(state,delay){return delay>0||this.closed?_super.prototype.execute.call(this,state,delay):this._execute(state,delay)},QueueAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),null!=delay&&delay>0||null==delay&&this.delay>0?_super.prototype.requestAsyncId.call(this,scheduler,id,delay):(scheduler.flush(this),0)},QueueAction}(__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js").o),queueScheduler=new(function(_super){function QueueScheduler(){return null!==_super&&_super.apply(this,arguments)||this}return(0,tslib_es6.ZT)(QueueScheduler,_super),QueueScheduler}(__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js").v))(QueueAction),observeOn=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/observeOn.js"),scan=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/scan.js");var distinctUntilChanged=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js");class RuntimeError extends Error{constructor(code,message){super(function formatRuntimeError(code,message){const fullCode=`NG0${Math.abs(code)}`;let errorMessage=`${fullCode}${message?": "+message:""}`;if(ngDevMode&&code<0){const addPeriodSeparator=!errorMessage.match(/[.,;!?\n]$/);errorMessage=`${errorMessage}${addPeriodSeparator?".":""} Find more at https://angular.io/errors/${fullCode}`}return errorMessage}(code,message)),this.code=code}}Symbol("SIGNAL");const _global=globalThis;_global.WeakRef;let activeConsumer=null;function setActiveConsumer(consumer){const prev=activeConsumer;return activeConsumer=consumer,prev}Symbol("UNSET"),Symbol("COMPUTING"),Symbol("ERRORED");function toSignal(source,options){const requiresCleanup=!options?.manualCleanup;requiresCleanup&&!options?.injector&&(0,core.assertInInjectionContext)(toSignal);const cleanupRef=requiresCleanup?options?.injector?.get(core.DestroyRef)??(0,core.inject)(core.DestroyRef):null;let state;state=options?.requireSync?(0,core.signal)({kind:0}):(0,core.signal)({kind:1,value:options?.initialValue});const sub=source.subscribe({next:value=>state.set({kind:1,value}),error:error=>state.set({kind:2,error})});if(ngDevMode&&options?.requireSync&&0===function untracked(nonReactiveReadsFn){const prevConsumer=setActiveConsumer(null);try{return nonReactiveReadsFn()}finally{setActiveConsumer(prevConsumer)}}(state).kind)throw new RuntimeError(601,"`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.");return cleanupRef?.onDestroy(sub.unsubscribe.bind(sub)),(0,core.computed)((()=>{const current=state();switch(current.kind){case 1:return current.value;case 2:throw current.error;case 0:throw new RuntimeError(601,"`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.")}}))}const REGISTERED_ACTION_TYPES={};function createAction(type,config){if(REGISTERED_ACTION_TYPES[type]=(REGISTERED_ACTION_TYPES[type]||0)+1,"function"==typeof config)return defineType(type,((...args)=>({...config(...args),type})));switch(config?config._as:"empty"){case"empty":return defineType(type,(()=>({type})));case"props":return defineType(type,(props=>({...props,type})));default:throw new Error("Unexpected config.")}}function defineType(type,creator){return Object.defineProperty(creator,"type",{value:type,writable:!1})}const INIT="@ngrx/store/init";class ActionsSubject extends BehaviorSubject.X{constructor(){super({type:INIT})}next(action){if("function"==typeof action)throw new TypeError("\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().");if(void 0===action)throw new TypeError("Actions must be objects");if(void 0===action.type)throw new TypeError("Actions must have a type property");super.next(action)}complete(){}ngOnDestroy(){super.complete()}static#_=this.ɵfac=function ActionsSubject_Factory(t){return new(t||ActionsSubject)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:ActionsSubject,factory:ActionsSubject.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](ActionsSubject,[{type:core.Injectable}],(function(){return[]}),null);const ACTIONS_SUBJECT_PROVIDERS=[ActionsSubject],_ROOT_STORE_GUARD=new core.InjectionToken("@ngrx/store Internal Root Guard"),_INITIAL_STATE=new core.InjectionToken("@ngrx/store Internal Initial State"),INITIAL_STATE=new core.InjectionToken("@ngrx/store Initial State"),REDUCER_FACTORY=new core.InjectionToken("@ngrx/store Reducer Factory"),_REDUCER_FACTORY=new core.InjectionToken("@ngrx/store Internal Reducer Factory Provider"),INITIAL_REDUCERS=new core.InjectionToken("@ngrx/store Initial Reducers"),_INITIAL_REDUCERS=new core.InjectionToken("@ngrx/store Internal Initial Reducers"),STORE_FEATURES=new core.InjectionToken("@ngrx/store Store Features"),_STORE_REDUCERS=new core.InjectionToken("@ngrx/store Internal Store Reducers"),_FEATURE_REDUCERS=new core.InjectionToken("@ngrx/store Internal Feature Reducers"),_FEATURE_CONFIGS=new core.InjectionToken("@ngrx/store Internal Feature Configs"),_STORE_FEATURES=new core.InjectionToken("@ngrx/store Internal Store Features"),_FEATURE_REDUCERS_TOKEN=new core.InjectionToken("@ngrx/store Internal Feature Reducers Token"),FEATURE_REDUCERS=new core.InjectionToken("@ngrx/store Feature Reducers"),USER_PROVIDED_META_REDUCERS=new core.InjectionToken("@ngrx/store User Provided Meta Reducers"),META_REDUCERS=new core.InjectionToken("@ngrx/store Meta Reducers"),_RESOLVED_META_REDUCERS=new core.InjectionToken("@ngrx/store Internal Resolved Meta Reducers"),USER_RUNTIME_CHECKS=new core.InjectionToken("@ngrx/store User Runtime Checks Config"),_USER_RUNTIME_CHECKS=new core.InjectionToken("@ngrx/store Internal User Runtime Checks Config"),ACTIVE_RUNTIME_CHECKS=new core.InjectionToken("@ngrx/store Internal Runtime Checks"),_ACTION_TYPE_UNIQUENESS_CHECK=new core.InjectionToken("@ngrx/store Check if Action types are unique"),ngrx_store_ROOT_STORE_PROVIDER=new core.InjectionToken("@ngrx/store Root Store Provider"),ngrx_store_FEATURE_STATE_PROVIDER=new core.InjectionToken("@ngrx/store Feature State Provider");function combineReducers(reducers,initialState={}){const reducerKeys=Object.keys(reducers),finalReducers={};for(let i=0;i<reducerKeys.length;i++){const key=reducerKeys[i];"function"==typeof reducers[key]&&(finalReducers[key]=reducers[key])}const finalReducerKeys=Object.keys(finalReducers);return function combination(state,action){state=void 0===state?initialState:state;let hasChanged=!1;const nextState={};for(let i=0;i<finalReducerKeys.length;i++){const key=finalReducerKeys[i],reducer=finalReducers[key],previousStateForKey=state[key],nextStateForKey=reducer(previousStateForKey,action);nextState[key]=nextStateForKey,hasChanged=hasChanged||nextStateForKey!==previousStateForKey}return hasChanged?nextState:state}}function compose(...functions){return function(arg){if(0===functions.length)return arg;const last=functions[functions.length-1];return functions.slice(0,-1).reduceRight(((composed,fn)=>fn(composed)),last(arg))}}function createReducerFactory(reducerFactory,metaReducers){return Array.isArray(metaReducers)&&metaReducers.length>0&&(reducerFactory=compose.apply(null,[...metaReducers,reducerFactory])),(reducers,initialState)=>{const reducer=reducerFactory(reducers);return(state,action)=>reducer(state=void 0===state?initialState:state,action)}}class ReducerObservable extends internal_Observable.y{}class ReducerManagerDispatcher extends ActionsSubject{}class ReducerManager extends BehaviorSubject.X{get currentReducers(){return this.reducers}constructor(dispatcher,initialState,reducers,reducerFactory){super(reducerFactory(reducers,initialState)),this.dispatcher=dispatcher,this.initialState=initialState,this.reducers=reducers,this.reducerFactory=reducerFactory}addFeature(feature){this.addFeatures([feature])}addFeatures(features){const reducers=features.reduce(((reducerDict,{reducers,reducerFactory,metaReducers,initialState,key})=>{const reducer="function"==typeof reducers?function createFeatureReducerFactory(metaReducers){const reducerFactory=Array.isArray(metaReducers)&&metaReducers.length>0?compose(...metaReducers):r=>r;return(reducer,initialState)=>(reducer=reducerFactory(reducer),(state,action)=>reducer(state=void 0===state?initialState:state,action))}(metaReducers)(reducers,initialState):createReducerFactory(reducerFactory,metaReducers)(reducers,initialState);return reducerDict[key]=reducer,reducerDict}),{});this.addReducers(reducers)}removeFeature(feature){this.removeFeatures([feature])}removeFeatures(features){this.removeReducers(features.map((p=>p.key)))}addReducer(key,reducer){this.addReducers({[key]:reducer})}addReducers(reducers){this.reducers={...this.reducers,...reducers},this.updateReducers(Object.keys(reducers))}removeReducer(featureKey){this.removeReducers([featureKey])}removeReducers(featureKeys){featureKeys.forEach((key=>{this.reducers=function omit(object,keyToRemove){return Object.keys(object).filter((key=>key!==keyToRemove)).reduce(((result,key)=>Object.assign(result,{[key]:object[key]})),{})}(this.reducers,key)})),this.updateReducers(featureKeys)}updateReducers(featureKeys){this.next(this.reducerFactory(this.reducers,this.initialState)),this.dispatcher.next({type:"@ngrx/store/update-reducers",features:featureKeys})}ngOnDestroy(){this.complete()}static#_=this.ɵfac=function ReducerManager_Factory(t){return new(t||ReducerManager)(core["ɵɵinject"](ReducerManagerDispatcher),core["ɵɵinject"](INITIAL_STATE),core["ɵɵinject"](INITIAL_REDUCERS),core["ɵɵinject"](REDUCER_FACTORY))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:ReducerManager,factory:ReducerManager.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](ReducerManager,[{type:core.Injectable}],(function(){return[{type:ReducerManagerDispatcher},{type:void 0,decorators:[{type:core.Inject,args:[INITIAL_STATE]}]},{type:void 0,decorators:[{type:core.Inject,args:[INITIAL_REDUCERS]}]},{type:void 0,decorators:[{type:core.Inject,args:[REDUCER_FACTORY]}]}]}),null);const REDUCER_MANAGER_PROVIDERS=[ReducerManager,{provide:ReducerObservable,useExisting:ReducerManager},{provide:ReducerManagerDispatcher,useExisting:ActionsSubject}];class ScannedActionsSubject extends internal_Subject.x{ngOnDestroy(){this.complete()}static#_=this.ɵfac=function(){let ɵScannedActionsSubject_BaseFactory;return function ScannedActionsSubject_Factory(t){return(ɵScannedActionsSubject_BaseFactory||(ɵScannedActionsSubject_BaseFactory=core["ɵɵgetInheritedFactory"](ScannedActionsSubject)))(t||ScannedActionsSubject)}}();static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:ScannedActionsSubject,factory:ScannedActionsSubject.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](ScannedActionsSubject,[{type:core.Injectable}],null,null);const SCANNED_ACTIONS_SUBJECT_PROVIDERS=[ScannedActionsSubject];class StateObservable extends internal_Observable.y{}class State extends BehaviorSubject.X{static#_=this.INIT=INIT;constructor(actions$,reducer$,scannedActions,initialState){super(initialState);const seed={state:initialState},stateAndAction$=actions$.pipe((0,observeOn.Q)(queueScheduler)).pipe(withLatestFrom_withLatestFrom(reducer$)).pipe((0,scan.R)(reduceState,seed));this.stateSubscription=stateAndAction$.subscribe((({state,action})=>{this.next(state),scannedActions.next(action)})),this.state=toSignal(this,{manualCleanup:!0,requireSync:!0})}ngOnDestroy(){this.stateSubscription.unsubscribe(),this.complete()}static#_2=this.ɵfac=function State_Factory(t){return new(t||State)(core["ɵɵinject"](ActionsSubject),core["ɵɵinject"](ReducerObservable),core["ɵɵinject"](ScannedActionsSubject),core["ɵɵinject"](INITIAL_STATE))};static#_3=this.ɵprov=core["ɵɵdefineInjectable"]({token:State,factory:State.ɵfac})}function reduceState(stateActionPair={state:void 0},[action,reducer]){const{state}=stateActionPair;return{state:reducer(state,action),action}}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](State,[{type:core.Injectable}],(function(){return[{type:ActionsSubject},{type:ReducerObservable},{type:ScannedActionsSubject},{type:void 0,decorators:[{type:core.Inject,args:[INITIAL_STATE]}]}]}),null);const STATE_PROVIDERS=[State,{provide:StateObservable,useExisting:State}];class ngrx_store_Store extends internal_Observable.y{constructor(state$,actionsObserver,reducerManager){super(),this.actionsObserver=actionsObserver,this.reducerManager=reducerManager,this.source=state$,this.state=state$.state}select(pathOrMapFn,...paths){return ngrx_store_select.call(null,pathOrMapFn,...paths)(this)}selectSignal(selector,options){return(0,core.computed)((()=>selector(this.state())),{equal:options?.equal||((previous,current)=>previous===current)})}lift(operator){const store=new ngrx_store_Store(this,this.actionsObserver,this.reducerManager);return store.operator=operator,store}dispatch(action){this.actionsObserver.next(action)}next(action){this.actionsObserver.next(action)}error(err){this.actionsObserver.error(err)}complete(){this.actionsObserver.complete()}addReducer(key,reducer){this.reducerManager.addReducer(key,reducer)}removeReducer(key){this.reducerManager.removeReducer(key)}static#_=this.ɵfac=function Store_Factory(t){return new(t||ngrx_store_Store)(core["ɵɵinject"](StateObservable),core["ɵɵinject"](ActionsSubject),core["ɵɵinject"](ReducerManager))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:ngrx_store_Store,factory:ngrx_store_Store.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](ngrx_store_Store,[{type:core.Injectable}],(function(){return[{type:StateObservable},{type:ActionsSubject},{type:ReducerManager}]}),null);const STORE_PROVIDERS=[ngrx_store_Store];function ngrx_store_select(pathOrMapFn,propsOrPath,...paths){return function selectOperator(source$){let mapped$;if("string"==typeof pathOrMapFn){const pathSlices=[propsOrPath,...paths].filter(Boolean);mapped$=source$.pipe(function pluck(){for(var properties=[],_i=0;_i<arguments.length;_i++)properties[_i]=arguments[_i];var length=properties.length;if(0===length)throw new Error("list of properties cannot be empty.");return(0,operators_map.U)((function(x){for(var currentProp=x,i=0;i<length;i++){var p=null==currentProp?void 0:currentProp[properties[i]];if(void 0===p)return;currentProp=p}return currentProp}))}(pathOrMapFn,...pathSlices))}else{if("function"!=typeof pathOrMapFn)throw new TypeError(`Unexpected type '${typeof pathOrMapFn}' in select operator, expected 'string' or 'function'`);mapped$=source$.pipe((0,operators_map.U)((source=>pathOrMapFn(source,propsOrPath))))}return mapped$.pipe((0,distinctUntilChanged.x)())}}const RUNTIME_CHECK_URL="https://ngrx.io/guide/store/configuration/runtime-checks";function isUndefined(target){return void 0===target}function isNull(target){return null===target}function ngrx_store_isArray(target){return Array.isArray(target)}function isObjectLike(target){return"object"==typeof target&&null!==target}function isPlainObject(target){if(!function isObject(target){return isObjectLike(target)&&!ngrx_store_isArray(target)}(target))return!1;const targetPrototype=Object.getPrototypeOf(target);return targetPrototype===Object.prototype||null===targetPrototype}function isFunction(target){return"function"==typeof target}let _ngrxMockEnvironment=!1;function isEqualCheck(a,b){return a===b}function defaultMemoize(projectionFn,isArgumentsEqual=isEqualCheck,isResultEqual=isEqualCheck){let overrideResult,lastArguments=null,lastResult=null;return{memoized:function memoized(){if(void 0!==overrideResult)return overrideResult.result;if(!lastArguments)return lastResult=projectionFn.apply(null,arguments),lastArguments=arguments,lastResult;if(!function isArgumentsChanged(args,lastArguments,comparator){for(let i=0;i<args.length;i++)if(!comparator(args[i],lastArguments[i]))return!0;return!1}(arguments,lastArguments,isArgumentsEqual))return lastResult;const newResult=projectionFn.apply(null,arguments);return lastArguments=arguments,isResultEqual(lastResult,newResult)?lastResult:(lastResult=newResult,newResult)},reset:function reset(){lastArguments=null,lastResult=null},setResult:function setResult(result=void 0){overrideResult={result}},clearResult:function clearResult(){overrideResult=void 0}}}function createSelector(...input){return function createSelectorFactory(memoize,options={stateFn:defaultStateFn}){return function(...input){let args=input;if(Array.isArray(args[0])){const[head,...tail]=args;args=[...head,...tail]}else 1===args.length&&function isSelectorsDictionary(selectors){return!!selectors&&"object"==typeof selectors&&Object.values(selectors).every((selector=>"function"==typeof selector))}(args[0])&&(args=function extractArgsFromSelectorsDictionary(selectorsDictionary){const selectors=Object.values(selectorsDictionary),resultKeys=Object.keys(selectorsDictionary),projector=(...selectorResults)=>resultKeys.reduce(((result,key,index)=>({...result,[key]:selectorResults[index]})),{});return[...selectors,projector]}(args[0]));const selectors=args.slice(0,args.length-1),projector=args[args.length-1],memoizedSelectors=selectors.filter((selector=>selector.release&&"function"==typeof selector.release)),memoizedProjector=memoize((function(...selectors){return projector.apply(null,selectors)})),memoizedState=defaultMemoize((function(state,props){return options.stateFn.apply(null,[state,selectors,props,memoizedProjector])}));function release(){memoizedState.reset(),memoizedProjector.reset(),memoizedSelectors.forEach((selector=>selector.release()))}return Object.assign(memoizedState.memoized,{release,projector:memoizedProjector.memoized,setResult:memoizedState.setResult,clearResult:memoizedState.clearResult})}}(defaultMemoize)(...input)}function defaultStateFn(state,selectors,props,memoizedProjector){if(void 0===props){const args=selectors.map((fn=>fn(state)));return memoizedProjector.memoized.apply(null,args)}const args=selectors.map((fn=>fn(state,props)));return memoizedProjector.memoized.apply(null,[...args,props])}function createFeatureSelector(featureName){return createSelector((state=>{const featureState=state[featureName];return function isNgrxMockEnvironment(){return _ngrxMockEnvironment}()||!(0,core.isDevMode)()||featureName in state||console.warn(`@ngrx/store: The feature name "${featureName}" does not exist in the state, therefore createFeatureSelector cannot access it.  Be sure it is imported in a loaded module using StoreModule.forRoot('${featureName}', ...) or StoreModule.forFeature('${featureName}', ...).  If the default state is intended to be undefined, as is the case with router state, this development-only warning message can be ignored.`),featureState}),(featureState=>featureState))}function _createStoreReducers(reducers){return reducers instanceof core.InjectionToken?(0,core.inject)(reducers):reducers}function _createFeatureStore(configs,featureStores){return featureStores.map(((feat,index)=>{if(configs[index]instanceof core.InjectionToken){const conf=(0,core.inject)(configs[index]);return{key:feat.key,reducerFactory:conf.reducerFactory?conf.reducerFactory:combineReducers,metaReducers:conf.metaReducers?conf.metaReducers:[],initialState:conf.initialState}}return feat}))}function _createFeatureReducers(reducerCollection){return reducerCollection.map((reducer=>reducer instanceof core.InjectionToken?(0,core.inject)(reducer):reducer))}function _initialStateFactory(initialState){return"function"==typeof initialState?initialState():initialState}function _concatMetaReducers(metaReducers,userProvidedMetaReducers){return metaReducers.concat(userProvidedMetaReducers)}function _provideForRootGuard(){if((0,core.inject)(ngrx_store_Store,{optional:!0,skipSelf:!0}))throw new TypeError("The root Store has been provided more than once. Feature modules should provide feature states instead.");return"guarded"}function freeze(target){Object.freeze(target);const targetIsFunction=isFunction(target);return Object.getOwnPropertyNames(target).forEach((prop=>{if(!prop.startsWith("ɵ")&&function ngrx_store_hasOwnProperty(target,propertyName){return Object.prototype.hasOwnProperty.call(target,propertyName)}(target,prop)&&(!targetIsFunction||"caller"!==prop&&"callee"!==prop&&"arguments"!==prop)){const propValue=target[prop];!isObjectLike(propValue)&&!isFunction(propValue)||Object.isFrozen(propValue)||freeze(propValue)}})),target}function getUnserializable(target,path=[]){if((isUndefined(target)||isNull(target))&&0===path.length)return{path:["root"],value:target};return Object.keys(target).reduce(((result,key)=>{if(result)return result;const value=target[key];return function isComponent(target){return isFunction(target)&&target.hasOwnProperty("ɵcmp")}(value)?result:!(isUndefined(value)||isNull(value)||function isNumber(target){return"number"==typeof target}(value)||function isBoolean(target){return"boolean"==typeof target}(value)||function isString(target){return"string"==typeof target}(value)||ngrx_store_isArray(value))&&(isPlainObject(value)?getUnserializable(value,[...path,key]):{path:[...path,key],value})}),!1)}function throwIfUnserializable(unserializable,context){if(!1===unserializable)return;const unserializablePath=unserializable.path.join("."),error=new Error(`Detected unserializable ${context} at "${unserializablePath}". ${RUNTIME_CHECK_URL}#strict${context}serializability`);throw error.value=unserializable.value,error.unserializablePath=unserializablePath,error}function createActiveRuntimeChecks(runtimeChecks){return(0,core.isDevMode)()?{strictStateSerializability:!1,strictActionSerializability:!1,strictStateImmutability:!0,strictActionImmutability:!0,strictActionWithinNgZone:!1,strictActionTypeUniqueness:!1,...runtimeChecks}:{strictStateSerializability:!1,strictActionSerializability:!1,strictStateImmutability:!1,strictActionImmutability:!1,strictActionWithinNgZone:!1,strictActionTypeUniqueness:!1}}function createSerializationCheckMetaReducer({strictActionSerializability,strictStateSerializability}){return reducer=>strictActionSerializability||strictStateSerializability?function serializationCheckMetaReducer(reducer,checks){return function(state,action){checks.action(action)&&throwIfUnserializable(getUnserializable(action),"action");const nextState=reducer(state,action);return checks.state()&&throwIfUnserializable(getUnserializable(nextState),"state"),nextState}}(reducer,{action:action=>strictActionSerializability&&!ignoreNgrxAction(action),state:()=>strictStateSerializability}):reducer}function createImmutabilityCheckMetaReducer({strictActionImmutability,strictStateImmutability}){return reducer=>strictActionImmutability||strictStateImmutability?function immutabilityCheckMetaReducer(reducer,checks){return function(state,action){const act=checks.action(action)?freeze(action):action,nextState=reducer(state,act);return checks.state()?freeze(nextState):nextState}}(reducer,{action:action=>strictActionImmutability&&!ignoreNgrxAction(action),state:()=>strictStateImmutability}):reducer}function ignoreNgrxAction(action){return action.type.startsWith("@ngrx")}function createInNgZoneCheckMetaReducer({strictActionWithinNgZone}){return reducer=>strictActionWithinNgZone?function inNgZoneAssertMetaReducer(reducer,checks){return function(state,action){if(checks.action(action)&&!core.NgZone.isInAngularZone())throw new Error(`Action '${action.type}' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`);return reducer(state,action)}}(reducer,{action:action=>strictActionWithinNgZone&&!ignoreNgrxAction(action)}):reducer}function checkForActionTypeUniqueness(){return[{provide:_ACTION_TYPE_UNIQUENESS_CHECK,multi:!0,deps:[ACTIVE_RUNTIME_CHECKS],useFactory:_actionTypeUniquenessCheck}]}function _runtimeChecksFactory(runtimeChecks){return runtimeChecks}function _actionTypeUniquenessCheck(config){if(!config.strictActionTypeUniqueness)return;const duplicates=Object.entries(REGISTERED_ACTION_TYPES).filter((([,registrations])=>registrations>1)).map((([type])=>type));if(duplicates.length)throw new Error(`Action types are registered more than once, ${duplicates.map((type=>`"${type}"`)).join(", ")}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`)}function _provideStore(reducers={},config={}){return[{provide:_ROOT_STORE_GUARD,useFactory:_provideForRootGuard},{provide:_INITIAL_STATE,useValue:config.initialState},{provide:INITIAL_STATE,useFactory:_initialStateFactory,deps:[_INITIAL_STATE]},{provide:_INITIAL_REDUCERS,useValue:reducers},{provide:_STORE_REDUCERS,useExisting:reducers instanceof core.InjectionToken?reducers:_INITIAL_REDUCERS},{provide:INITIAL_REDUCERS,deps:[_INITIAL_REDUCERS,[new core.Inject(_STORE_REDUCERS)]],useFactory:_createStoreReducers},{provide:USER_PROVIDED_META_REDUCERS,useValue:config.metaReducers?config.metaReducers:[]},{provide:_RESOLVED_META_REDUCERS,deps:[META_REDUCERS,USER_PROVIDED_META_REDUCERS],useFactory:_concatMetaReducers},{provide:_REDUCER_FACTORY,useValue:config.reducerFactory?config.reducerFactory:combineReducers},{provide:REDUCER_FACTORY,deps:[_REDUCER_FACTORY,_RESOLVED_META_REDUCERS],useFactory:createReducerFactory},ACTIONS_SUBJECT_PROVIDERS,REDUCER_MANAGER_PROVIDERS,SCANNED_ACTIONS_SUBJECT_PROVIDERS,STATE_PROVIDERS,STORE_PROVIDERS,(runtimeChecks=config.runtimeChecks,[{provide:_USER_RUNTIME_CHECKS,useValue:runtimeChecks},{provide:USER_RUNTIME_CHECKS,useFactory:_runtimeChecksFactory,deps:[_USER_RUNTIME_CHECKS]},{provide:ACTIVE_RUNTIME_CHECKS,deps:[USER_RUNTIME_CHECKS],useFactory:createActiveRuntimeChecks},{provide:META_REDUCERS,multi:!0,deps:[ACTIVE_RUNTIME_CHECKS],useFactory:createImmutabilityCheckMetaReducer},{provide:META_REDUCERS,multi:!0,deps:[ACTIVE_RUNTIME_CHECKS],useFactory:createSerializationCheckMetaReducer},{provide:META_REDUCERS,multi:!0,deps:[ACTIVE_RUNTIME_CHECKS],useFactory:createInNgZoneCheckMetaReducer}]),checkForActionTypeUniqueness()];var runtimeChecks}core.ENVIRONMENT_INITIALIZER;core.ENVIRONMENT_INITIALIZER;function _provideState(featureNameOrSlice,reducers,config={}){return[{provide:_FEATURE_CONFIGS,multi:!0,useValue:featureNameOrSlice instanceof Object?{}:config},{provide:STORE_FEATURES,multi:!0,useValue:{key:featureNameOrSlice instanceof Object?featureNameOrSlice.name:featureNameOrSlice,reducerFactory:config instanceof core.InjectionToken||!config.reducerFactory?combineReducers:config.reducerFactory,metaReducers:config instanceof core.InjectionToken||!config.metaReducers?[]:config.metaReducers,initialState:config instanceof core.InjectionToken||!config.initialState?void 0:config.initialState}},{provide:_STORE_FEATURES,deps:[_FEATURE_CONFIGS,STORE_FEATURES],useFactory:_createFeatureStore},{provide:_FEATURE_REDUCERS,multi:!0,useValue:featureNameOrSlice instanceof Object?featureNameOrSlice.reducer:reducers},{provide:_FEATURE_REDUCERS_TOKEN,multi:!0,useExisting:reducers instanceof core.InjectionToken?reducers:_FEATURE_REDUCERS},{provide:FEATURE_REDUCERS,multi:!0,deps:[_FEATURE_REDUCERS,[new core.Inject(_FEATURE_REDUCERS_TOKEN)]],useFactory:_createFeatureReducers},checkForActionTypeUniqueness()]}class StoreRootModule{constructor(actions$,reducer$,scannedActions$,store,guard,actionCheck){}static#_=this.ɵfac=function StoreRootModule_Factory(t){return new(t||StoreRootModule)(core["ɵɵinject"](ActionsSubject),core["ɵɵinject"](ReducerObservable),core["ɵɵinject"](ScannedActionsSubject),core["ɵɵinject"](ngrx_store_Store),core["ɵɵinject"](_ROOT_STORE_GUARD,8),core["ɵɵinject"](_ACTION_TYPE_UNIQUENESS_CHECK,8))};static#_2=this.ɵmod=core["ɵɵdefineNgModule"]({type:StoreRootModule});static#_3=this.ɵinj=core["ɵɵdefineInjector"]({})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](StoreRootModule,[{type:core.NgModule,args:[{}]}],(function(){return[{type:ActionsSubject},{type:ReducerObservable},{type:ScannedActionsSubject},{type:ngrx_store_Store},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[_ROOT_STORE_GUARD]}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[_ACTION_TYPE_UNIQUENESS_CHECK]}]}]}),null);class StoreFeatureModule{constructor(features,featureReducers,reducerManager,root,actionCheck){this.features=features,this.featureReducers=featureReducers,this.reducerManager=reducerManager;const feats=features.map(((feature,index)=>{const reducers=featureReducers.shift()[index];return{...feature,reducers,initialState:_initialStateFactory(feature.initialState)}}));reducerManager.addFeatures(feats)}ngOnDestroy(){this.reducerManager.removeFeatures(this.features)}static#_=this.ɵfac=function StoreFeatureModule_Factory(t){return new(t||StoreFeatureModule)(core["ɵɵinject"](_STORE_FEATURES),core["ɵɵinject"](FEATURE_REDUCERS),core["ɵɵinject"](ReducerManager),core["ɵɵinject"](StoreRootModule),core["ɵɵinject"](_ACTION_TYPE_UNIQUENESS_CHECK,8))};static#_2=this.ɵmod=core["ɵɵdefineNgModule"]({type:StoreFeatureModule});static#_3=this.ɵinj=core["ɵɵdefineInjector"]({})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](StoreFeatureModule,[{type:core.NgModule,args:[{}]}],(function(){return[{type:void 0,decorators:[{type:core.Inject,args:[_STORE_FEATURES]}]},{type:void 0,decorators:[{type:core.Inject,args:[FEATURE_REDUCERS]}]},{type:ReducerManager},{type:StoreRootModule},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[_ACTION_TYPE_UNIQUENESS_CHECK]}]}]}),null);class StoreModule{static forRoot(reducers,config){return{ngModule:StoreRootModule,providers:[..._provideStore(reducers,config)]}}static forFeature(featureNameOrSlice,reducers,config={}){return{ngModule:StoreFeatureModule,providers:[..._provideState(featureNameOrSlice,reducers,config)]}}static#_=this.ɵfac=function StoreModule_Factory(t){return new(t||StoreModule)};static#_2=this.ɵmod=core["ɵɵdefineNgModule"]({type:StoreModule});static#_3=this.ɵinj=core["ɵɵdefineInjector"]({})}var DidMutate;function createStateOperator(mutator){return function operation(arg,state){const clonedEntityState={ids:[...state.ids],entities:{...state.entities}},didMutate=mutator(arg,clonedEntityState);return didMutate===DidMutate.Both?Object.assign({},state,clonedEntityState):didMutate===DidMutate.EntitiesOnly?{...state,entities:clonedEntityState.entities}:state}}function selectIdValue(entity,selectId){const key=selectId(entity);return(0,core.isDevMode)()&&void 0===key&&console.warn("@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.","You should probably provide your own `selectId` implementation.","The entity that was passed:",entity,"The `selectId` implementation:",selectId.toString()),key}function createUnsortedStateAdapter(selectId){function addOneMutably(entity,state){const key=selectIdValue(entity,selectId);return key in state.entities?DidMutate.None:(state.ids.push(key),state.entities[key]=entity,DidMutate.Both)}function addManyMutably(entities,state){let didMutate=!1;for(const entity of entities)didMutate=addOneMutably(entity,state)!==DidMutate.None||didMutate;return didMutate?DidMutate.Both:DidMutate.None}function setOneMutably(entity,state){const key=selectIdValue(entity,selectId);return key in state.entities?(state.entities[key]=entity,DidMutate.EntitiesOnly):(state.ids.push(key),state.entities[key]=entity,DidMutate.Both)}function removeManyMutably(keysOrPredicate,state){const didMutate=(keysOrPredicate instanceof Array?keysOrPredicate:state.ids.filter((key=>keysOrPredicate(state.entities[key])))).filter((key=>key in state.entities)).map((key=>delete state.entities[key])).length>0;return didMutate&&(state.ids=state.ids.filter((id=>id in state.entities))),didMutate?DidMutate.Both:DidMutate.None}function updateOneMutably(update,state){return updateManyMutably([update],state)}function updateManyMutably(updates,state){const newKeys={};if((updates=updates.filter((update=>update.id in state.entities))).length>0){const didMutateIds=updates.filter((update=>function takeNewKey(keys,update,state){const original=state.entities[update.id],updated=Object.assign({},original,update.changes),newKey=selectIdValue(updated,selectId),hasNewKey=newKey!==update.id;return hasNewKey&&(keys[update.id]=newKey,delete state.entities[update.id]),state.entities[newKey]=updated,hasNewKey}(newKeys,update,state))).length>0;return didMutateIds?(state.ids=state.ids.map((id=>newKeys[id]||id)),DidMutate.Both):DidMutate.EntitiesOnly}return DidMutate.None}function upsertManyMutably(entities,state){const added=[],updated=[];for(const entity of entities){const id=selectIdValue(entity,selectId);id in state.entities?updated.push({id,changes:entity}):added.push(entity)}const didMutateByUpdated=updateManyMutably(updated,state),didMutateByAdded=addManyMutably(added,state);switch(!0){case didMutateByAdded===DidMutate.None&&didMutateByUpdated===DidMutate.None:return DidMutate.None;case didMutateByAdded===DidMutate.Both||didMutateByUpdated===DidMutate.Both:return DidMutate.Both;default:return DidMutate.EntitiesOnly}}return{removeAll:function removeAll(state){return Object.assign({},state,{ids:[],entities:{}})},addOne:createStateOperator(addOneMutably),addMany:createStateOperator(addManyMutably),setAll:createStateOperator((function setAllMutably(entities,state){return state.ids=[],state.entities={},addManyMutably(entities,state),DidMutate.Both})),setOne:createStateOperator(setOneMutably),setMany:createStateOperator((function setManyMutably(entities,state){const didMutateSetOne=entities.map((entity=>setOneMutably(entity,state)));switch(!0){case didMutateSetOne.some((didMutate=>didMutate===DidMutate.Both)):return DidMutate.Both;case didMutateSetOne.some((didMutate=>didMutate===DidMutate.EntitiesOnly)):return DidMutate.EntitiesOnly;default:return DidMutate.None}})),updateOne:createStateOperator(updateOneMutably),updateMany:createStateOperator(updateManyMutably),upsertOne:createStateOperator((function upsertOneMutably(entity,state){return upsertManyMutably([entity],state)})),upsertMany:createStateOperator(upsertManyMutably),removeOne:createStateOperator((function removeOneMutably(key,state){return removeManyMutably([key],state)})),removeMany:createStateOperator(removeManyMutably),map:createStateOperator((function mapMutably(map,state){return updateManyMutably(state.ids.reduce(((changes,id)=>{const change=map(state.entities[id]);return change!==state.entities[id]&&changes.push({id,changes:change}),changes}),[]).filter((({id})=>id in state.entities)),state)})),mapOne:createStateOperator((function mapOneMutably({map,id},state){const entity=state.entities[id];return entity?updateOneMutably({id,changes:map(entity)},state):DidMutate.None}))}}function createSortedStateAdapter(selectId,sort){const{removeOne,removeMany,removeAll}=createUnsortedStateAdapter(selectId);function addOneMutably(entity,state){return addManyMutably([entity],state)}function addManyMutably(newModels,state){const models=newModels.filter((model=>!(selectIdValue(model,selectId)in state.entities)));return 0===models.length?DidMutate.None:(merge(models,state),DidMutate.Both)}function setOneMutably(entity,state){const id=selectIdValue(entity,selectId);return id in state.entities?(state.ids=state.ids.filter((val=>val!==id)),merge([entity],state),DidMutate.Both):addOneMutably(entity,state)}function updateOneMutably(update,state){return updateManyMutably([update],state)}function updateManyMutably(updates,state){const models=[],didMutateIds=updates.filter((update=>function takeUpdatedModel(models,update,state){if(!(update.id in state.entities))return!1;const original=state.entities[update.id],updated=Object.assign({},original,update.changes),newKey=selectIdValue(updated,selectId);return delete state.entities[update.id],models.push(updated),newKey!==update.id}(models,update,state))).length>0;if(0===models.length)return DidMutate.None;{const originalIds=state.ids,updatedIndexes=[];return state.ids=state.ids.filter(((id,index)=>id in state.entities||(updatedIndexes.push(index),!1))),merge(models,state),!didMutateIds&&updatedIndexes.every((i=>state.ids[i]===originalIds[i]))?DidMutate.EntitiesOnly:DidMutate.Both}}function upsertManyMutably(entities,state){const added=[],updated=[];for(const entity of entities){const id=selectIdValue(entity,selectId);id in state.entities?updated.push({id,changes:entity}):added.push(entity)}const didMutateByUpdated=updateManyMutably(updated,state),didMutateByAdded=addManyMutably(added,state);switch(!0){case didMutateByAdded===DidMutate.None&&didMutateByUpdated===DidMutate.None:return DidMutate.None;case didMutateByAdded===DidMutate.Both||didMutateByUpdated===DidMutate.Both:return DidMutate.Both;default:return DidMutate.EntitiesOnly}}function merge(models,state){models.sort(sort);const ids=[];let i=0,j=0;for(;i<models.length&&j<state.ids.length;){const model=models[i],modelId=selectIdValue(model,selectId),entityId=state.ids[j],entity=state.entities[entityId];sort(model,entity)<=0?(ids.push(modelId),i++):(ids.push(entityId),j++)}i<models.length?state.ids=ids.concat(models.slice(i).map(selectId)):state.ids=ids.concat(state.ids.slice(j)),models.forEach(((model,i)=>{state.entities[selectId(model)]=model}))}return{removeOne,removeMany,removeAll,addOne:createStateOperator(addOneMutably),updateOne:createStateOperator(updateOneMutably),upsertOne:createStateOperator((function upsertOneMutably(entity,state){return upsertManyMutably([entity],state)})),setAll:createStateOperator((function setAllMutably(models,state){return state.entities={},state.ids=[],addManyMutably(models,state),DidMutate.Both})),setOne:createStateOperator(setOneMutably),setMany:createStateOperator((function setManyMutably(entities,state){const didMutateSetOne=entities.map((entity=>setOneMutably(entity,state)));switch(!0){case didMutateSetOne.some((didMutate=>didMutate===DidMutate.Both)):return DidMutate.Both;case didMutateSetOne.some((didMutate=>didMutate===DidMutate.EntitiesOnly)):return DidMutate.EntitiesOnly;default:return DidMutate.None}})),addMany:createStateOperator(addManyMutably),updateMany:createStateOperator(updateManyMutably),upsertMany:createStateOperator(upsertManyMutably),map:createStateOperator((function mapMutably(updatesOrMap,state){return updateManyMutably(state.ids.reduce(((changes,id)=>{const change=updatesOrMap(state.entities[id]);return change!==state.entities[id]&&changes.push({id,changes:change}),changes}),[]),state)})),mapOne:createStateOperator((function mapOneMutably({map,id},state){const entity=state.entities[id];return entity?updateOneMutably({id,changes:map(entity)},state):DidMutate.None}))}}function createEntityAdapter(options={}){const{selectId,sortComparer}={selectId:options.selectId??(entity=>entity.id),sortComparer:options.sortComparer??!1};return{selectId,sortComparer,...function createInitialStateFactory(){return{getInitialState:function getInitialState(additionalState={}){return Object.assign({ids:[],entities:{}},additionalState)}}}(),...function createSelectorsFactory(){return{getSelectors:function getSelectors(selectState){const selectIds=state=>state.ids,selectEntities=state=>state.entities,selectAll=createSelector(selectIds,selectEntities,((ids,entities)=>ids.map((id=>entities[id])))),selectTotal=createSelector(selectIds,(ids=>ids.length));return selectState?{selectIds:createSelector(selectState,selectIds),selectEntities:createSelector(selectState,selectEntities),selectAll:createSelector(selectState,selectAll),selectTotal:createSelector(selectState,selectTotal)}:{selectIds,selectEntities,selectAll,selectTotal}}}}(),...sortComparer?createSortedStateAdapter(selectId,sortComparer):createUnsortedStateAdapter(selectId)}}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](StoreModule,[{type:core.NgModule,args:[{}]}],null,null),function(DidMutate){DidMutate[DidMutate.EntitiesOnly=0]="EntitiesOnly",DidMutate[DidMutate.Both=1]="Both",DidMutate[DidMutate.None=2]="None"}(DidMutate||(DidMutate={}));var NotificationKind,ignoreElements=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/ignoreElements.js"),empty=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/observable/empty.js"),util_isFunction=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/isFunction.js");!function(NotificationKind){NotificationKind.NEXT="N",NotificationKind.ERROR="E",NotificationKind.COMPLETE="C"}(NotificationKind||(NotificationKind={}));var Notification=function(){function Notification(kind,value,error){this.kind=kind,this.value=value,this.error=error,this.hasValue="N"===kind}return Notification.prototype.observe=function(observer){return observeNotification(this,observer)},Notification.prototype.do=function(nextHandler,errorHandler,completeHandler){var kind=this.kind,value=this.value,error=this.error;return"N"===kind?null==nextHandler?void 0:nextHandler(value):"E"===kind?null==errorHandler?void 0:errorHandler(error):null==completeHandler?void 0:completeHandler()},Notification.prototype.accept=function(nextOrObserver,error,complete){var _a;return(0,util_isFunction.m)(null===(_a=nextOrObserver)||void 0===_a?void 0:_a.next)?this.observe(nextOrObserver):this.do(nextOrObserver,error,complete)},Notification.prototype.toObservable=function(){var kind=this.kind,value=this.value,error=this.error,result="N"===kind?(0,observable_of.of)(value):"E"===kind?(0,throwError._)((function(){return error})):"C"===kind?empty.E:0;if(!result)throw new TypeError("Unexpected notification kind "+kind);return result},Notification.createNext=function(value){return new Notification("N",value)},Notification.createError=function(err){return new Notification("E",void 0,err)},Notification.createComplete=function(){return Notification.completeNotification},Notification.completeNotification=new Notification("C"),Notification}();function observeNotification(notification,observer){var _a,_b,_c,_d=notification,kind=_d.kind,value=_d.value,error=_d.error;if("string"!=typeof kind)throw new TypeError('Invalid notification, missing "kind"');"N"===kind?null===(_a=observer.next)||void 0===_a||_a.call(observer,value):"E"===kind?null===(_b=observer.error)||void 0===_b||_b.call(observer,error):null===(_c=observer.complete)||void 0===_c||_c.call(observer)}function groupBy(keySelector,elementOrOptions,duration,connector){return(0,lift.e)((function(source,subscriber){var element;elementOrOptions&&"function"!=typeof elementOrOptions?(duration=elementOrOptions.duration,element=elementOrOptions.element,connector=elementOrOptions.connector):element=elementOrOptions;var groups=new Map,notify=function(cb){groups.forEach(cb),cb(subscriber)},handleError=function(err){return notify((function(consumer){return consumer.error(err)}))},activeGroups=0,teardownAttempted=!1,groupBySourceSubscriber=new OperatorSubscriber.Q(subscriber,(function(value){try{var key_1=keySelector(value),group_1=groups.get(key_1);if(!group_1){groups.set(key_1,group_1=connector?connector():new internal_Subject.x);var grouped=function createGroupedObservable(key,groupSubject){var result=new internal_Observable.y((function(groupSubscriber){activeGroups++;var innerSub=groupSubject.subscribe(groupSubscriber);return function(){innerSub.unsubscribe(),0==--activeGroups&&teardownAttempted&&groupBySourceSubscriber.unsubscribe()}}));return result.key=key,result}(key_1,group_1);if(subscriber.next(grouped),duration){var durationSubscriber_1=(0,OperatorSubscriber.x)(group_1,(function(){group_1.complete(),null==durationSubscriber_1||durationSubscriber_1.unsubscribe()}),void 0,void 0,(function(){return groups.delete(key_1)}));groupBySourceSubscriber.add((0,innerFrom.Xf)(duration(grouped)).subscribe(durationSubscriber_1))}}group_1.next(element?element(value):value)}catch(err){handleError(err)}}),(function(){return notify((function(consumer){return consumer.complete()}))}),handleError,(function(){return groups.clear()}),(function(){return teardownAttempted=!0,0===activeGroups}));source.subscribe(groupBySourceSubscriber)}))}function exhaustMap(project,resultSelector){return resultSelector?function(source){return source.pipe(exhaustMap((function(a,i){return(0,innerFrom.Xf)(project(a,i)).pipe((0,operators_map.U)((function(b,ii){return resultSelector(a,b,i,ii)})))})))}:(0,lift.e)((function(source,subscriber){var index=0,innerSub=null,isComplete=!1;source.subscribe((0,OperatorSubscriber.x)(subscriber,(function(outerValue){innerSub||(innerSub=(0,OperatorSubscriber.x)(subscriber,void 0,(function(){innerSub=null,isComplete&&subscriber.complete()})),(0,innerFrom.Xf)(project(outerValue,index++)).subscribe(innerSub))}),(function(){isComplete=!0,!innerSub&&subscriber.complete()})))}))}const DEFAULT_EFFECT_CONFIG={dispatch:!0,functional:!1,useEffectsErrorHandler:!0},CREATE_EFFECT_METADATA_KEY="__@ngrx/effects_create__";function createEffect(source,config={}){const effect=config.functional?source:source(),value={...DEFAULT_EFFECT_CONFIG,...config};return Object.defineProperty(effect,CREATE_EFFECT_METADATA_KEY,{value}),effect}function getSourceMetadata(instance){return function getCreateEffectMetadata(instance){return Object.getOwnPropertyNames(instance).filter((propertyName=>!(!instance[propertyName]||!instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY))&&instance[propertyName][CREATE_EFFECT_METADATA_KEY].hasOwnProperty("dispatch"))).map((propertyName=>({propertyName,...instance[propertyName][CREATE_EFFECT_METADATA_KEY]})))}(instance)}function getSourceForInstance(instance){return Object.getPrototypeOf(instance)}function isClass(classOrRecord){return"function"==typeof classOrRecord}function getClasses(classesAndRecords){return classesAndRecords.filter(isClass)}function mergeEffects(sourceInstance,globalErrorHandler,effectsErrorHandler){const source=getSourceForInstance(sourceInstance),sourceName=!!source&&"Object"!==source.constructor.name?source.constructor.name:null,observables$=getSourceMetadata(sourceInstance).map((({propertyName,dispatch,useEffectsErrorHandler})=>{const observable$="function"==typeof sourceInstance[propertyName]?sourceInstance[propertyName]():sourceInstance[propertyName],effectAction$=useEffectsErrorHandler?effectsErrorHandler(observable$,globalErrorHandler):observable$;if(!1===dispatch)return effectAction$.pipe((0,ignoreElements.l)());const materialized$=effectAction$.pipe(function materialize_materialize(){return(0,lift.e)((function(source,subscriber){source.subscribe((0,OperatorSubscriber.x)(subscriber,(function(value){subscriber.next(Notification.createNext(value))}),(function(){subscriber.next(Notification.createComplete()),subscriber.complete()}),(function(err){subscriber.next(Notification.createError(err)),subscriber.complete()})))}))}());return materialized$.pipe((0,operators_map.U)((notification=>({effect:sourceInstance[propertyName],notification,propertyName,sourceName,sourceInstance}))))}));return(0,observable_merge.T)(...observables$)}function defaultEffectsErrorHandler(observable$,errorHandler,retryAttemptLeft=10){return observable$.pipe((0,catchError.K)((error=>(errorHandler&&errorHandler.handleError(error),retryAttemptLeft<=1?observable$:defaultEffectsErrorHandler(observable$,errorHandler,retryAttemptLeft-1)))))}class Actions extends internal_Observable.y{constructor(source){super(),source&&(this.source=source)}lift(operator){const observable=new Actions;return observable.source=this,observable.operator=operator,observable}static#_=this.ɵfac=function Actions_Factory(t){return new(t||Actions)(core["ɵɵinject"](ScannedActionsSubject))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:Actions,factory:Actions.ɵfac,providedIn:"root"})}function ofType(...allowedTypes){return(0,operators_filter.h)((action=>allowedTypes.some((typeOrActionCreator=>"string"==typeof typeOrActionCreator?typeOrActionCreator===action.type:typeOrActionCreator.type===action.type))))}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](Actions,[{type:core.Injectable,args:[{providedIn:"root"}]}],(function(){return[{type:internal_Observable.y,decorators:[{type:core.Inject,args:[ScannedActionsSubject]}]}]}),null);const _ROOT_EFFECTS_GUARD=new core.InjectionToken("@ngrx/effects Internal Root Guard"),USER_PROVIDED_EFFECTS=new core.InjectionToken("@ngrx/effects User Provided Effects"),_ROOT_EFFECTS=new core.InjectionToken("@ngrx/effects Internal Root Effects"),_ROOT_EFFECTS_INSTANCES=new core.InjectionToken("@ngrx/effects Internal Root Effects Instances"),_FEATURE_EFFECTS=new core.InjectionToken("@ngrx/effects Internal Feature Effects"),_FEATURE_EFFECTS_INSTANCE_GROUPS=new core.InjectionToken("@ngrx/effects Internal Feature Effects Instance Groups"),EFFECTS_ERROR_HANDLER=new core.InjectionToken("@ngrx/effects Effects Error Handler",{providedIn:"root",factory:()=>defaultEffectsErrorHandler});createAction("@ngrx/effects/init");function reportInvalidActions(output,reporter){if("N"===output.notification.kind){const action=output.notification.value,isInvalidAction=!function isAction(action){return"function"!=typeof action&&action&&action.type&&"string"==typeof action.type}(action);isInvalidAction&&reporter.handleError(new Error(`Effect ${function getEffectName({propertyName,sourceInstance,sourceName}){const isMethod="function"==typeof sourceInstance[propertyName];return sourceName?`"${sourceName}.${String(propertyName)}${isMethod?"()":""}"`:`"${String(propertyName)}()"`}(output)} dispatched an invalid action: ${function stringify(action){try{return JSON.stringify(action)}catch{return action}}(action)}`))}}const onIdentifyEffectsKey="ngrxOnIdentifyEffects";const onRunEffectsKey="ngrxOnRunEffects";function isOnInitEffects(instance){return ngrx_effects_isFunction(instance,"ngrxOnInitEffects")}function ngrx_effects_isFunction(instance,functionName){return instance&&functionName in instance&&"function"==typeof instance[functionName]}class EffectSources extends internal_Subject.x{constructor(errorHandler,effectsErrorHandler){super(),this.errorHandler=errorHandler,this.effectsErrorHandler=effectsErrorHandler}addEffects(effectSourceInstance){this.next(effectSourceInstance)}toActions(){return this.pipe(groupBy((effectsInstance=>function isClassInstance(obj){return!!obj.constructor&&"Object"!==obj.constructor.name&&"Function"!==obj.constructor.name}(effectsInstance)?getSourceForInstance(effectsInstance):effectsInstance)),(0,mergeMap.z)((source$=>source$.pipe(groupBy(effectsInstance)))),(0,mergeMap.z)((source$=>{const effect$=source$.pipe(exhaustMap((sourceInstance=>function resolveEffectSource(errorHandler,effectsErrorHandler){return sourceInstance=>{const mergedEffects$=mergeEffects(sourceInstance,errorHandler,effectsErrorHandler);return function isOnRunEffects(instance){return ngrx_effects_isFunction(instance,onRunEffectsKey)}(sourceInstance)?sourceInstance.ngrxOnRunEffects(mergedEffects$):mergedEffects$}}(this.errorHandler,this.effectsErrorHandler)(sourceInstance))),(0,operators_map.U)((output=>(reportInvalidActions(output,this.errorHandler),output.notification))),(0,operators_filter.h)((notification=>"N"===notification.kind&&null!=notification.value)),function dematerialize_dematerialize(){return(0,lift.e)((function(source,subscriber){source.subscribe((0,OperatorSubscriber.x)(subscriber,(function(notification){return observeNotification(notification,subscriber)})))}))}()),init$=source$.pipe((0,take.q)(1),(0,operators_filter.h)(isOnInitEffects),(0,operators_map.U)((instance=>instance.ngrxOnInitEffects())));return(0,observable_merge.T)(effect$,init$)})))}static#_=this.ɵfac=function EffectSources_Factory(t){return new(t||EffectSources)(core["ɵɵinject"](core.ErrorHandler),core["ɵɵinject"](EFFECTS_ERROR_HANDLER))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EffectSources,factory:EffectSources.ɵfac,providedIn:"root"})}function effectsInstance(sourceInstance){return function isOnIdentifyEffects(instance){return ngrx_effects_isFunction(instance,onIdentifyEffectsKey)}(sourceInstance)?sourceInstance.ngrxOnIdentifyEffects():""}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EffectSources,[{type:core.Injectable,args:[{providedIn:"root"}]}],(function(){return[{type:core.ErrorHandler},{type:void 0,decorators:[{type:core.Inject,args:[EFFECTS_ERROR_HANDLER]}]}]}),null);class EffectsRunner{get isStarted(){return!!this.effectsSubscription}constructor(effectSources,store){this.effectSources=effectSources,this.store=store,this.effectsSubscription=null}start(){this.effectsSubscription||(this.effectsSubscription=this.effectSources.toActions().subscribe(this.store))}ngOnDestroy(){this.effectsSubscription&&(this.effectsSubscription.unsubscribe(),this.effectsSubscription=null)}static#_=this.ɵfac=function EffectsRunner_Factory(t){return new(t||EffectsRunner)(core["ɵɵinject"](EffectSources),core["ɵɵinject"](ngrx_store_Store))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EffectsRunner,factory:EffectsRunner.ɵfac,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EffectsRunner,[{type:core.Injectable,args:[{providedIn:"root"}]}],(function(){return[{type:EffectSources},{type:ngrx_store_Store}]}),null);class EffectsRootModule{constructor(sources,runner,store,rootEffectsInstances,storeRootModule,storeFeatureModule,guard){this.sources=sources,runner.start();for(const effectsInstance of rootEffectsInstances)sources.addEffects(effectsInstance);store.dispatch({type:"@ngrx/effects/init"})}addEffects(effectsInstance){this.sources.addEffects(effectsInstance)}static#_=this.ɵfac=function EffectsRootModule_Factory(t){return new(t||EffectsRootModule)(core["ɵɵinject"](EffectSources),core["ɵɵinject"](EffectsRunner),core["ɵɵinject"](ngrx_store_Store),core["ɵɵinject"](_ROOT_EFFECTS_INSTANCES),core["ɵɵinject"](StoreRootModule,8),core["ɵɵinject"](StoreFeatureModule,8),core["ɵɵinject"](_ROOT_EFFECTS_GUARD,8))};static#_2=this.ɵmod=core["ɵɵdefineNgModule"]({type:EffectsRootModule});static#_3=this.ɵinj=core["ɵɵdefineInjector"]({})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EffectsRootModule,[{type:core.NgModule,args:[{}]}],(function(){return[{type:EffectSources},{type:EffectsRunner},{type:ngrx_store_Store},{type:void 0,decorators:[{type:core.Inject,args:[_ROOT_EFFECTS_INSTANCES]}]},{type:StoreRootModule,decorators:[{type:core.Optional}]},{type:StoreFeatureModule,decorators:[{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[_ROOT_EFFECTS_GUARD]}]}]}),null);class EffectsFeatureModule{constructor(effectsRootModule,effectsInstanceGroups,storeRootModule,storeFeatureModule){const effectsInstances=effectsInstanceGroups.flat();for(const effectsInstance of effectsInstances)effectsRootModule.addEffects(effectsInstance)}static#_=this.ɵfac=function EffectsFeatureModule_Factory(t){return new(t||EffectsFeatureModule)(core["ɵɵinject"](EffectsRootModule),core["ɵɵinject"](_FEATURE_EFFECTS_INSTANCE_GROUPS),core["ɵɵinject"](StoreRootModule,8),core["ɵɵinject"](StoreFeatureModule,8))};static#_2=this.ɵmod=core["ɵɵdefineNgModule"]({type:EffectsFeatureModule});static#_3=this.ɵinj=core["ɵɵdefineInjector"]({})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EffectsFeatureModule,[{type:core.NgModule,args:[{}]}],(function(){return[{type:EffectsRootModule},{type:void 0,decorators:[{type:core.Inject,args:[_FEATURE_EFFECTS_INSTANCE_GROUPS]}]},{type:StoreRootModule,decorators:[{type:core.Optional}]},{type:StoreFeatureModule,decorators:[{type:core.Optional}]}]}),null);class EffectsModule{static forFeature(...featureEffects){const effects=featureEffects.flat(),effectsClasses=getClasses(effects);return{ngModule:EffectsFeatureModule,providers:[effectsClasses,{provide:_FEATURE_EFFECTS,multi:!0,useValue:effects},{provide:USER_PROVIDED_EFFECTS,multi:!0,useValue:[]},{provide:_FEATURE_EFFECTS_INSTANCE_GROUPS,multi:!0,useFactory:createEffectsInstances,deps:[_FEATURE_EFFECTS,USER_PROVIDED_EFFECTS]}]}}static forRoot(...rootEffects){const effects=rootEffects.flat(),effectsClasses=getClasses(effects);return{ngModule:EffectsRootModule,providers:[effectsClasses,{provide:_ROOT_EFFECTS,useValue:[effects]},{provide:_ROOT_EFFECTS_GUARD,useFactory:ngrx_effects_provideForRootGuard},{provide:USER_PROVIDED_EFFECTS,multi:!0,useValue:[]},{provide:_ROOT_EFFECTS_INSTANCES,useFactory:createEffectsInstances,deps:[_ROOT_EFFECTS,USER_PROVIDED_EFFECTS]}]}}static#_=this.ɵfac=function EffectsModule_Factory(t){return new(t||EffectsModule)};static#_2=this.ɵmod=core["ɵɵdefineNgModule"]({type:EffectsModule});static#_3=this.ɵinj=core["ɵɵdefineInjector"]({})}function createEffectsInstances(effectsGroups,userProvidedEffectsGroups){const effects=[];for(const effectsGroup of effectsGroups)effects.push(...effectsGroup);for(const userProvidedEffectsGroup of userProvidedEffectsGroups)effects.push(...userProvidedEffectsGroup);return effects.map((effectsTokenOrRecord=>function isToken(tokenOrRecord){return tokenOrRecord instanceof core.InjectionToken||isClass(tokenOrRecord)}(effectsTokenOrRecord)?(0,core.inject)(effectsTokenOrRecord):effectsTokenOrRecord))}function ngrx_effects_provideForRootGuard(){const runner=(0,core.inject)(EffectsRunner,{optional:!0,skipSelf:!0}),rootEffects=(0,core.inject)(_ROOT_EFFECTS,{self:!0});if(!(1===rootEffects.length&&0===rootEffects[0].length)&&runner)throw new TypeError("EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.");return"guarded"}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EffectsModule,[{type:core.NgModule,args:[{}]}],null,null);class EntityActionFactory{create(nameOrPayload,entityOp,data,options){const payload="string"==typeof nameOrPayload?{...options||{},entityName:nameOrPayload,entityOp,data}:nameOrPayload;return this.createCore(payload)}createCore(payload){const{entityName,entityOp,tag}=payload;if(!entityName)throw new Error("Missing entity name for new action");if(null==entityOp)throw new Error("Missing EntityOp for new action");return{type:this.formatActionType(entityOp,tag||entityName),payload}}createFromAction(from,newProperties){return this.create({...from.payload,...newProperties})}formatActionType(op,tag){return`[${tag}] ${op}`}static#_=this.ɵfac=function EntityActionFactory_Factory(t){return new(t||EntityActionFactory)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityActionFactory,factory:EntityActionFactory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityActionFactory,[{type:core.Injectable}],null,null);class EntityActionGuard{constructor(entityName,selectId){this.entityName=entityName,this.selectId=selectId}mustBeEntity(action){const data=this.extractData(action);if(!data)return this.throwError(action,"should have a single entity.");const id=this.selectId(data);return this.isNotKeyType(id)&&this.throwError(action,"has a missing or invalid entity key (id)"),data}mustBeEntities(action){const data=this.extractData(action);return Array.isArray(data)?(data.forEach(((entity,i)=>{const id=this.selectId(entity);if(this.isNotKeyType(id)){const msg=`, item ${i+1}, does not have a valid entity key (id)`;this.throwError(action,msg)}})),data):this.throwError(action,"should be an array of entities")}mustBeKey(action){const data=this.extractData(action);if(void 0===data)throw new Error("should be a single entity key");if(this.isNotKeyType(data))throw new Error("is not a valid key (id)");return data}mustBeKeys(action){const data=this.extractData(action);return Array.isArray(data)?(data.forEach(((id,i)=>{if(this.isNotKeyType(id)){const msg=`${this.entityName} ', item ${i+1}, is not a valid entity key (id)`;this.throwError(action,msg)}})),data):this.throwError(action,"should be an array of entity keys (id)")}mustBeUpdate(action){const data=this.extractData(action);if(!data)return this.throwError(action,"should be a single entity update");const{id,changes}=data,id2=this.selectId(changes);return(this.isNotKeyType(id)||this.isNotKeyType(id2))&&this.throwError(action,"has a missing or invalid entity key (id)"),data}mustBeUpdates(action){const data=this.extractData(action);return Array.isArray(data)?(data.forEach(((item,i)=>{const{id,changes}=item,id2=this.selectId(changes);(this.isNotKeyType(id)||this.isNotKeyType(id2))&&this.throwError(action,`, item ${i+1}, has a missing or invalid entity key (id)`)})),data):this.throwError(action,"should be an array of entity updates")}mustBeUpdateResponse(action){const data=this.extractData(action);if(!data)return this.throwError(action,"should be a single entity update");const{id,changes}=data,id2=this.selectId(changes);return(this.isNotKeyType(id)||this.isNotKeyType(id2))&&this.throwError(action,"has a missing or invalid entity key (id)"),data}mustBeUpdateResponses(action){const data=this.extractData(action);return Array.isArray(data)?(data.forEach(((item,i)=>{const{id,changes}=item,id2=this.selectId(changes);(this.isNotKeyType(id)||this.isNotKeyType(id2))&&this.throwError(action,`, item ${i+1}, has a missing or invalid entity key (id)`)})),data):this.throwError(action,"should be an array of entity updates")}extractData(action){return action.payload&&action.payload.data}isNotKeyType(id){return"string"!=typeof id&&"number"!=typeof id}throwError(action,msg){throw new Error(`${this.entityName} EntityAction guard for "${action.type}": payload ${msg}`)}}function defaultSelectId(entity){return null==entity?void 0:entity.id}function flattenArgs(args){if(null==args)return[];if(Array.isArray(args[0])){const[head,...tail]=args;args=[...head,...tail]}return args}function toUpdateFactory(selectId){return selectId=selectId||defaultSelectId,function toUpdate(entity){const id=selectId(entity);if(null==id)throw new Error("Primary key may not be null/undefined.");return entity&&{id,changes:entity}}}function ofEntityOp(...allowedEntityOps){const ops=flattenArgs(allowedEntityOps);switch(ops.length){case 0:return(0,operators_filter.h)((action=>action.payload&&null!=action.payload.entityOp));case 1:const op=ops[0];return(0,operators_filter.h)((action=>action.payload&&op===action.payload.entityOp));default:return(0,operators_filter.h)((action=>{const entityOp=action.payload&&action.payload.entityOp;return entityOp&&ops.some((o=>o===entityOp))}))}}function ofEntityType(...allowedEntityNames){const names=flattenArgs(allowedEntityNames);switch(names.length){case 0:return(0,operators_filter.h)((action=>action.payload&&null!=action.payload.entityName));case 1:const name=names[0];return(0,operators_filter.h)((action=>action.payload&&name===action.payload.entityName));default:return(0,operators_filter.h)((action=>{const entityName=action.payload&&action.payload.entityName;return!!entityName&&names.some((n=>n===entityName))}))}}var ChangeSetOperation;!function(ChangeSetOperation){ChangeSetOperation.Add="Add",ChangeSetOperation.Delete="Delete",ChangeSetOperation.Update="Update",ChangeSetOperation.Upsert="Upsert"}(ChangeSetOperation||(ChangeSetOperation={}));new class ChangeSetItemFactory{add(entityName,entities){return entities=Array.isArray(entities)?entities:entities?[entities]:[],{entityName,op:ChangeSetOperation.Add,entities}}delete(entityName,keys){const ids=Array.isArray(keys)?keys:keys?[keys]:[];return{entityName,op:ChangeSetOperation.Delete,entities:ids}}update(entityName,updates){return updates=Array.isArray(updates)?updates:updates?[updates]:[],{entityName,op:ChangeSetOperation.Update,entities:updates}}upsert(entityName,entities){return entities=Array.isArray(entities)?entities:entities?[entities]:[],{entityName,op:ChangeSetOperation.Upsert,entities}}};function excludeEmptyChangeSetItems(changeSet){const changes=(changeSet=changeSet&&changeSet.changes?changeSet:{changes:[]}).changes.filter((c=>null!=c&&c.entities&&c.entities.length>0));return{...changeSet,changes}}var MergeStrategy,EntityCacheAction,EntityOp;!function(MergeStrategy){MergeStrategy[MergeStrategy.IgnoreChanges=0]="IgnoreChanges",MergeStrategy[MergeStrategy.PreserveChanges=1]="PreserveChanges",MergeStrategy[MergeStrategy.OverwriteChanges=2]="OverwriteChanges"}(MergeStrategy||(MergeStrategy={})),function(EntityCacheAction){EntityCacheAction.CLEAR_COLLECTIONS="@ngrx/data/entity-cache/clear-collections",EntityCacheAction.LOAD_COLLECTIONS="@ngrx/data/entity-cache/load-collections",EntityCacheAction.MERGE_QUERY_SET="@ngrx/data/entity-cache/merge-query-set",EntityCacheAction.SET_ENTITY_CACHE="@ngrx/data/entity-cache/set-cache",EntityCacheAction.SAVE_ENTITIES="@ngrx/data/entity-cache/save-entities",EntityCacheAction.SAVE_ENTITIES_CANCEL="@ngrx/data/entity-cache/save-entities-cancel",EntityCacheAction.SAVE_ENTITIES_CANCELED="@ngrx/data/entity-cache/save-entities-canceled",EntityCacheAction.SAVE_ENTITIES_ERROR="@ngrx/data/entity-cache/save-entities-error",EntityCacheAction.SAVE_ENTITIES_SUCCESS="@ngrx/data/entity-cache/save-entities-success"}(EntityCacheAction||(EntityCacheAction={}));class ClearCollections{constructor(collections,tag){this.type=EntityCacheAction.CLEAR_COLLECTIONS,this.payload={collections,tag}}}class LoadCollections{constructor(collections,tag){this.type=EntityCacheAction.LOAD_COLLECTIONS,this.payload={collections,tag}}}class MergeQuerySet{constructor(querySet,mergeStrategy,tag){this.type=EntityCacheAction.MERGE_QUERY_SET,this.payload={querySet,mergeStrategy:null===mergeStrategy?MergeStrategy.PreserveChanges:mergeStrategy,tag}}}class SetEntityCache{constructor(cache,tag){this.cache=cache,this.type=EntityCacheAction.SET_ENTITY_CACHE,this.payload={cache,tag}}}class SaveEntities{constructor(changeSet,url,options){this.type=EntityCacheAction.SAVE_ENTITIES,options=options||{},changeSet&&(changeSet.tag=changeSet.tag||options.tag),this.payload={changeSet,url,...options,tag:changeSet.tag}}}class SaveEntitiesCancel{constructor(correlationId,reason,entityNames,tag){this.type=EntityCacheAction.SAVE_ENTITIES_CANCEL,this.payload={correlationId,reason,entityNames,tag}}}class SaveEntitiesCanceled{constructor(correlationId,reason,tag){this.type=EntityCacheAction.SAVE_ENTITIES_CANCELED,this.payload={correlationId,reason,tag}}}class SaveEntitiesError{constructor(error,originalAction){this.type=EntityCacheAction.SAVE_ENTITIES_ERROR;const correlationId=originalAction.payload.correlationId;this.payload={error,originalAction,correlationId}}}class SaveEntitiesSuccess{constructor(changeSet,url,options){this.type=EntityCacheAction.SAVE_ENTITIES_SUCCESS,options=options||{},changeSet&&(changeSet.tag=changeSet.tag||options.tag),this.payload={changeSet,url,...options,tag:changeSet.tag}}}!function(EntityOp){EntityOp.CANCEL_PERSIST="@ngrx/data/cancel-persist",EntityOp.CANCELED_PERSIST="@ngrx/data/canceled-persist",EntityOp.QUERY_ALL="@ngrx/data/query-all",EntityOp.QUERY_ALL_SUCCESS="@ngrx/data/query-all/success",EntityOp.QUERY_ALL_ERROR="@ngrx/data/query-all/error",EntityOp.QUERY_LOAD="@ngrx/data/query-load",EntityOp.QUERY_LOAD_SUCCESS="@ngrx/data/query-load/success",EntityOp.QUERY_LOAD_ERROR="@ngrx/data/query-load/error",EntityOp.QUERY_MANY="@ngrx/data/query-many",EntityOp.QUERY_MANY_SUCCESS="@ngrx/data/query-many/success",EntityOp.QUERY_MANY_ERROR="@ngrx/data/query-many/error",EntityOp.QUERY_BY_KEY="@ngrx/data/query-by-key",EntityOp.QUERY_BY_KEY_SUCCESS="@ngrx/data/query-by-key/success",EntityOp.QUERY_BY_KEY_ERROR="@ngrx/data/query-by-key/error",EntityOp.SAVE_ADD_MANY="@ngrx/data/save/add-many",EntityOp.SAVE_ADD_MANY_ERROR="@ngrx/data/save/add-many/error",EntityOp.SAVE_ADD_MANY_SUCCESS="@ngrx/data/save/add-many/success",EntityOp.SAVE_ADD_ONE="@ngrx/data/save/add-one",EntityOp.SAVE_ADD_ONE_ERROR="@ngrx/data/save/add-one/error",EntityOp.SAVE_ADD_ONE_SUCCESS="@ngrx/data/save/add-one/success",EntityOp.SAVE_DELETE_MANY="@ngrx/data/save/delete-many",EntityOp.SAVE_DELETE_MANY_SUCCESS="@ngrx/data/save/delete-many/success",EntityOp.SAVE_DELETE_MANY_ERROR="@ngrx/data/save/delete-many/error",EntityOp.SAVE_DELETE_ONE="@ngrx/data/save/delete-one",EntityOp.SAVE_DELETE_ONE_SUCCESS="@ngrx/data/save/delete-one/success",EntityOp.SAVE_DELETE_ONE_ERROR="@ngrx/data/save/delete-one/error",EntityOp.SAVE_UPDATE_MANY="@ngrx/data/save/update-many",EntityOp.SAVE_UPDATE_MANY_SUCCESS="@ngrx/data/save/update-many/success",EntityOp.SAVE_UPDATE_MANY_ERROR="@ngrx/data/save/update-many/error",EntityOp.SAVE_UPDATE_ONE="@ngrx/data/save/update-one",EntityOp.SAVE_UPDATE_ONE_SUCCESS="@ngrx/data/save/update-one/success",EntityOp.SAVE_UPDATE_ONE_ERROR="@ngrx/data/save/update-one/error",EntityOp.SAVE_UPSERT_MANY="@ngrx/data/save/upsert-many",EntityOp.SAVE_UPSERT_MANY_SUCCESS="@ngrx/data/save/upsert-many/success",EntityOp.SAVE_UPSERT_MANY_ERROR="@ngrx/data/save/upsert-many/error",EntityOp.SAVE_UPSERT_ONE="@ngrx/data/save/upsert-one",EntityOp.SAVE_UPSERT_ONE_SUCCESS="@ngrx/data/save/upsert-one/success",EntityOp.SAVE_UPSERT_ONE_ERROR="@ngrx/data/save/upsert-one/error",EntityOp.ADD_ALL="@ngrx/data/add-all",EntityOp.ADD_MANY="@ngrx/data/add-many",EntityOp.ADD_ONE="@ngrx/data/add-one",EntityOp.REMOVE_ALL="@ngrx/data/remove-all",EntityOp.REMOVE_MANY="@ngrx/data/remove-many",EntityOp.REMOVE_ONE="@ngrx/data/remove-one",EntityOp.UPDATE_MANY="@ngrx/data/update-many",EntityOp.UPDATE_ONE="@ngrx/data/update-one",EntityOp.UPSERT_MANY="@ngrx/data/upsert-many",EntityOp.UPSERT_ONE="@ngrx/data/upsert-one",EntityOp.COMMIT_ALL="@ngrx/data/commit-all",EntityOp.COMMIT_MANY="@ngrx/data/commit-many",EntityOp.COMMIT_ONE="@ngrx/data/commit-one",EntityOp.UNDO_ALL="@ngrx/data/undo-all",EntityOp.UNDO_MANY="@ngrx/data/undo-many",EntityOp.UNDO_ONE="@ngrx/data/undo-one",EntityOp.SET_CHANGE_STATE="@ngrx/data/set-change-state",EntityOp.SET_COLLECTION="@ngrx/data/set-collection",EntityOp.SET_FILTER="@ngrx/data/set-filter",EntityOp.SET_LOADED="@ngrx/data/set-loaded",EntityOp.SET_LOADING="@ngrx/data/set-loading"}(EntityOp||(EntityOp={}));function makeSuccessOp(op){return op+"/success"}class DataServiceError extends Error{constructor(error,requestData){super("string"==typeof error?error:function extractMessage(sourceError){const{error,body,message}=sourceError;let errMessage=null;error?errMessage="string"==typeof error?error:error.message:message?errMessage=message:body&&(errMessage="string"==typeof body?body:body.error);return"string"==typeof errMessage?errMessage:errMessage?JSON.stringify(errMessage):null}(error)??void 0),this.error=error,this.requestData=requestData,this.name=this.constructor.name}}class DefaultDataServiceConfig{}class Logger{}const PLURAL_NAMES_TOKEN=new core.InjectionToken("@ngrx/data Plural Names");class Pluralizer{}class HttpUrlGenerator{}class DefaultHttpUrlGenerator{constructor(pluralizer){this.pluralizer=pluralizer,this.knownHttpResourceUrls={}}getResourceUrls(entityName,root,trailingSlashEndpoints=!1){let resourceUrls=this.knownHttpResourceUrls[entityName];if(!resourceUrls){const nRoot=trailingSlashEndpoints?root:function normalizeRoot(root){return root.replace(/^[/\s]+|[/\s]+$/g,"")}(root);resourceUrls={entityResourceUrl:`${nRoot}/${entityName}/`.toLowerCase(),collectionResourceUrl:`${nRoot}/${this.pluralizer.pluralize(entityName)}/`.toLowerCase()},this.registerHttpResourceUrls({[entityName]:resourceUrls})}return resourceUrls}entityResource(entityName,root,trailingSlashEndpoints){return this.getResourceUrls(entityName,root,trailingSlashEndpoints).entityResourceUrl}collectionResource(entityName,root){return this.getResourceUrls(entityName,root).collectionResourceUrl}registerHttpResourceUrls(entityHttpResourceUrls){this.knownHttpResourceUrls={...this.knownHttpResourceUrls,...entityHttpResourceUrls||{}}}static#_=this.ɵfac=function DefaultHttpUrlGenerator_Factory(t){return new(t||DefaultHttpUrlGenerator)(core["ɵɵinject"](Pluralizer))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:DefaultHttpUrlGenerator,factory:DefaultHttpUrlGenerator.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](DefaultHttpUrlGenerator,[{type:core.Injectable}],(function(){return[{type:Pluralizer}]}),null);class DefaultDataService{get name(){return this._name}constructor(entityName,http,httpUrlGenerator,config){this.http=http,this.httpUrlGenerator=httpUrlGenerator,this.getDelay=0,this.saveDelay=0,this.timeout=0,this.trailingSlashEndpoints=!1,this._name=`${entityName} DefaultDataService`,this.entityName=entityName;const{root="api",delete404OK=!0,getDelay=0,saveDelay=0,timeout:to=0,trailingSlashEndpoints=!1}=config||{};this.delete404OK=delete404OK,this.entityUrl=httpUrlGenerator.entityResource(entityName,root,trailingSlashEndpoints),this.entitiesUrl=httpUrlGenerator.collectionResource(entityName,root),this.getDelay=getDelay,this.saveDelay=saveDelay,this.timeout=to}add(entity,options){const entityOrError=entity||new Error(`No "${this.entityName}" entity to add`);return this.execute("POST",this.entityUrl,entityOrError,null,options)}delete(key,options){let err;return null==key&&(err=new Error(`No "${this.entityName}" key to delete`)),this.execute("DELETE",this.entityUrl+key,err,null,options).pipe((0,operators_map.U)((result=>key)))}getAll(options){return this.execute("GET",this.entitiesUrl,null,options)}getById(key,options){let err;return null==key&&(err=new Error(`No "${this.entityName}" key to get`)),this.execute("GET",this.entityUrl+key,err,null,options)}getWithQuery(queryParams,options){const qParams="string"==typeof queryParams?{fromString:queryParams}:{fromObject:queryParams},params=new http.LE(qParams);return this.execute("GET",this.entitiesUrl,void 0,{params},options)}update(update,options){const id=update&&update.id,updateOrError=null==id?new Error(`No "${this.entityName}" update data or id`):update.changes;return this.execute("PUT",this.entityUrl+id,updateOrError,null,options)}upsert(entity,options){const entityOrError=entity||new Error(`No "${this.entityName}" entity to upsert`);return this.execute("POST",this.entityUrl,entityOrError,null,options)}execute(method,url,data,options,httpOptions){let entityActionHttpClientOptions,mergedOptions;httpOptions&&(entityActionHttpClientOptions={headers:httpOptions?.httpHeaders?new http.WM(httpOptions?.httpHeaders):void 0,params:httpOptions?.httpParams?new http.LE(httpOptions?.httpParams):void 0}),(options||entityActionHttpClientOptions)&&((0,core.isDevMode)()&&options&&entityActionHttpClientOptions&&console.warn("@ngrx/data: options.httpParams will be merged with queryParams when both are are provided to getWithQuery(). In the event of a conflict HttpOptions.httpParams will override queryParams`. The queryParams parameter of getWithQuery() will be removed in next major release."),mergedOptions={...options,headers:entityActionHttpClientOptions?.headers??options?.headers,params:entityActionHttpClientOptions?.params??options?.params});const req={method,url,data,options:mergedOptions};if(data instanceof Error)return this.handleError(req)(data);let result$;switch(method){case"DELETE":result$=this.http.delete(url,mergedOptions),this.saveDelay&&(result$=result$.pipe((0,delay.g)(this.saveDelay)));break;case"GET":result$=this.http.get(url,mergedOptions),this.getDelay&&(result$=result$.pipe((0,delay.g)(this.getDelay)));break;case"POST":result$=this.http.post(url,data,mergedOptions),this.saveDelay&&(result$=result$.pipe((0,delay.g)(this.saveDelay)));break;case"PUT":result$=this.http.put(url,data,mergedOptions),this.saveDelay&&(result$=result$.pipe((0,delay.g)(this.saveDelay)));break;default:{const error=new Error("Unimplemented HTTP method, "+method);result$=(0,throwError._)(error)}}return this.timeout&&(result$=result$.pipe(timeout(this.timeout+this.saveDelay))),result$.pipe((0,catchError.K)(this.handleError(req)))}handleError(reqData){return err=>{const ok=this.handleDelete404(err,reqData);if(ok)return ok;const error=new DataServiceError(err,reqData);return(0,throwError._)(error)}}handleDelete404(error,reqData){if(404===error.status&&"DELETE"===reqData.method&&this.delete404OK)return(0,observable_of.of)({})}}class DefaultDataServiceFactory{constructor(http,httpUrlGenerator,config){this.http=http,this.httpUrlGenerator=httpUrlGenerator,this.config=config,config=config||{},httpUrlGenerator.registerHttpResourceUrls(config.entityHttpResourceUrls)}create(entityName){return new DefaultDataService(entityName,this.http,this.httpUrlGenerator,this.config)}static#_=this.ɵfac=function DefaultDataServiceFactory_Factory(t){return new(t||DefaultDataServiceFactory)(core["ɵɵinject"](http.eN),core["ɵɵinject"](HttpUrlGenerator),core["ɵɵinject"](DefaultDataServiceConfig,8))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:DefaultDataServiceFactory,factory:DefaultDataServiceFactory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](DefaultDataServiceFactory,[{type:core.Injectable}],(function(){return[{type:http.eN},{type:HttpUrlGenerator},{type:DefaultDataServiceConfig,decorators:[{type:core.Optional}]}]}),null);const ENTITY_METADATA_TOKEN=new core.InjectionToken("@ngrx/data Entity Metadata");class EntityDefinitionService{constructor(entityMetadataMaps){this.definitions={},entityMetadataMaps&&entityMetadataMaps.forEach((map=>this.registerMetadataMap(map)))}getDefinition(entityName,shouldThrow=!0){entityName=entityName.trim();const definition=this.definitions[entityName];if(!definition&&shouldThrow)throw new Error(`No EntityDefinition for entity type "${entityName}".`);return definition}registerMetadata(metadata){if(metadata){const definition=function createEntityDefinition(metadata){let entityName=metadata.entityName;if(!entityName)throw new Error("Missing required entityName");metadata.entityName=entityName=entityName.trim();const selectId=metadata.selectId||defaultSelectId,sortComparer=metadata.sortComparer=metadata.sortComparer||!1,entityAdapter=createEntityAdapter({selectId,sortComparer}),entityDispatcherOptions=metadata.entityDispatcherOptions||{},initialState=entityAdapter.getInitialState({entityName,filter:"",loaded:!1,loading:!1,changeState:{},...metadata.additionalCollectionState||{}});return{entityName,entityAdapter,entityDispatcherOptions,initialState,metadata,noChangeTracking:!0===metadata.noChangeTracking,selectId,sortComparer}}(metadata);this.registerDefinition(definition)}}registerMetadataMap(metadataMap={}){Object.keys(metadataMap||{}).forEach((entityName=>this.registerMetadata({entityName,...metadataMap[entityName]})))}registerDefinition(definition){this.definitions[definition.entityName]=definition}registerDefinitions(definitions){Object.assign(this.definitions,definitions)}static#_=this.ɵfac=function EntityDefinitionService_Factory(t){return new(t||EntityDefinitionService)(core["ɵɵinject"](ENTITY_METADATA_TOKEN,8))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityDefinitionService,factory:EntityDefinitionService.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityDefinitionService,[{type:core.Injectable}],(function(){return[{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[ENTITY_METADATA_TOKEN]}]}]}),null);const updateOp=ChangeSetOperation.Update;class EntityCacheDataService{constructor(entityDefinitionService,http,config){this.entityDefinitionService=entityDefinitionService,this.http=http,this.idSelectors={},this.saveDelay=0,this.timeout=0;const{saveDelay=0,timeout:to=0}=config||{};this.saveDelay=saveDelay,this.timeout=to}saveEntities(changeSet,url){changeSet=this.filterChangeSet(changeSet),changeSet=this.flattenUpdates(changeSet);let result$=this.http.post(url,changeSet).pipe((0,operators_map.U)((result=>this.restoreUpdates(result))),(0,catchError.K)(this.handleError({method:"POST",url,data:changeSet})));return this.timeout&&(result$=result$.pipe(timeout(this.timeout))),this.saveDelay&&(result$=result$.pipe((0,delay.g)(this.saveDelay))),result$}handleError(reqData){return err=>{const error=new DataServiceError(err,reqData);return(0,throwError._)(error)}}filterChangeSet(changeSet){return excludeEmptyChangeSetItems(changeSet)}flattenUpdates(changeSet){let changes=changeSet.changes;if(0===changes.length)return changeSet;let hasMutated=!1;return changes=changes.map((item=>item.op===updateOp&&item.entities.length>0?(hasMutated=!0,{...item,entities:item.entities.map((u=>u.changes))}):item)),hasMutated?{...changeSet,changes}:changeSet}restoreUpdates(changeSet){if(null==changeSet)return changeSet;let changes=changeSet.changes;if(0===changes.length)return changeSet;let hasMutated=!1;return changes=changes.map((item=>{if(item.op===updateOp){hasMutated=!0;const selectId=this.getIdSelector(item.entityName);return{...item,entities:item.entities.map((u=>({id:selectId(u),changes:u})))}}return item})),hasMutated?{...changeSet,changes}:changeSet}getIdSelector(entityName){let idSelector=this.idSelectors[entityName];return idSelector||(idSelector=this.entityDefinitionService.getDefinition(entityName).selectId,this.idSelectors[entityName]=idSelector),idSelector}static#_=this.ɵfac=function EntityCacheDataService_Factory(t){return new(t||EntityCacheDataService)(core["ɵɵinject"](EntityDefinitionService),core["ɵɵinject"](http.eN),core["ɵɵinject"](DefaultDataServiceConfig,8))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityCacheDataService,factory:EntityCacheDataService.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityCacheDataService,[{type:core.Injectable}],(function(){return[{type:EntityDefinitionService},{type:http.eN},{type:DefaultDataServiceConfig,decorators:[{type:core.Optional}]}]}),null);class EntityDataService{constructor(defaultDataServiceFactory){this.defaultDataServiceFactory=defaultDataServiceFactory,this.services={}}getService(entityName){entityName=entityName.trim();let service=this.services[entityName];return service||(service=this.defaultDataServiceFactory.create(entityName),this.services[entityName]=service),service}registerService(entityName,service){this.services[entityName.trim()]=service}registerServices(services){this.services={...this.services,...services}}static#_=this.ɵfac=function EntityDataService_Factory(t){return new(t||EntityDataService)(core["ɵɵinject"](DefaultDataServiceFactory))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityDataService,factory:EntityDataService.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityDataService,[{type:core.Injectable}],(function(){return[{type:DefaultDataServiceFactory}]}),null);class PersistenceResultHandler{}class DefaultPersistenceResultHandler{constructor(logger,entityActionFactory){this.logger=logger,this.entityActionFactory=entityActionFactory}handleSuccess(originalAction){const successOp=makeSuccessOp(originalAction.payload.entityOp);return data=>this.entityActionFactory.createFromAction(originalAction,{entityOp:successOp,data})}handleError(originalAction){const errorOp=function makeErrorOp(op){return op+"/error"}(originalAction.payload.entityOp);return err=>{const errorData={error:err instanceof DataServiceError?err:new DataServiceError(err,null),originalAction};this.logger.error(errorData);return this.entityActionFactory.createFromAction(originalAction,{entityOp:errorOp,data:errorData})}}static#_=this.ɵfac=function DefaultPersistenceResultHandler_Factory(t){return new(t||DefaultPersistenceResultHandler)(core["ɵɵinject"](Logger),core["ɵɵinject"](EntityActionFactory))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:DefaultPersistenceResultHandler,factory:DefaultPersistenceResultHandler.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](DefaultPersistenceResultHandler,[{type:core.Injectable}],(function(){return[{type:Logger},{type:EntityActionFactory}]}),null);class PersistanceCanceled{constructor(message){this.message=message,this.message=message||"Canceled by user"}}class CorrelationIdGenerator{constructor(){this.seed=0,this.prefix="CRID"}next(){return this.seed+=1,this.prefix+this.seed}static#_=this.ɵfac=function CorrelationIdGenerator_Factory(t){return new(t||CorrelationIdGenerator)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:CorrelationIdGenerator,factory:CorrelationIdGenerator.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](CorrelationIdGenerator,[{type:core.Injectable}],null,null);class EntityDispatcherDefaultOptions{constructor(){this.optimisticAdd=!1,this.optimisticDelete=!0,this.optimisticUpdate=!1,this.optimisticUpsert=!1,this.optimisticSaveEntities=!1}static#_=this.ɵfac=function EntityDispatcherDefaultOptions_Factory(t){return new(t||EntityDispatcherDefaultOptions)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityDispatcherDefaultOptions,factory:EntityDispatcherDefaultOptions.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityDispatcherDefaultOptions,[{type:core.Injectable}],null,null);class EntityCacheDispatcher{constructor(correlationIdGenerator,defaultDispatcherOptions,scannedActions$,store){this.correlationIdGenerator=correlationIdGenerator,this.defaultDispatcherOptions=defaultDispatcherOptions,this.store=store,this.reducedActions$=scannedActions$.pipe((0,shareReplay.d)(1)),this.raSubscription=this.reducedActions$.subscribe()}dispatch(action){return this.store.dispatch(action),action}cancelSaveEntities(correlationId,reason,entityNames,tag){if(!correlationId)throw new Error("Missing correlationId");const action=new SaveEntitiesCancel(correlationId,reason,entityNames,tag);this.dispatch(action)}clearCollections(collections,tag){this.dispatch(new ClearCollections(collections,tag))}loadCollections(collections,tag){this.dispatch(new LoadCollections(collections,tag))}mergeQuerySet(querySet,mergeStrategy,tag){this.dispatch(new MergeQuerySet(querySet,mergeStrategy,tag))}setEntityCache(cache,tag){this.dispatch(new SetEntityCache(cache,tag))}saveEntities(changes,url,options){const changeSet=Array.isArray(changes)?{changes}:changes,correlationId=null==(options=options||{}).correlationId?this.correlationIdGenerator.next():options.correlationId,isOptimistic=null==options.isOptimistic?this.defaultDispatcherOptions.optimisticSaveEntities||!1:!0===options.isOptimistic,tag=options.tag||"Save Entities";options={...options,correlationId,isOptimistic,tag};const action=new SaveEntities(changeSet,url,options);return this.dispatch(action),this.getSaveEntitiesResponseData$(options.correlationId).pipe((0,shareReplay.d)(1))}getSaveEntitiesResponseData$(crid){return this.reducedActions$.pipe((0,operators_filter.h)((act=>act.type===EntityCacheAction.SAVE_ENTITIES_SUCCESS||act.type===EntityCacheAction.SAVE_ENTITIES_ERROR||act.type===EntityCacheAction.SAVE_ENTITIES_CANCEL)),(0,operators_filter.h)((act=>crid===act.payload.correlationId)),(0,take.q)(1),(0,mergeMap.z)((act=>act.type===EntityCacheAction.SAVE_ENTITIES_CANCEL?(0,throwError._)(new PersistanceCanceled(act.payload.reason)):act.type===EntityCacheAction.SAVE_ENTITIES_SUCCESS?(0,observable_of.of)(act.payload.changeSet):(0,throwError._)(act.payload))))}static#_=this.ɵfac=function EntityCacheDispatcher_Factory(t){return new(t||EntityCacheDispatcher)(core["ɵɵinject"](CorrelationIdGenerator),core["ɵɵinject"](EntityDispatcherDefaultOptions),core["ɵɵinject"](ScannedActionsSubject),core["ɵɵinject"](ngrx_store_Store))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityCacheDispatcher,factory:EntityCacheDispatcher.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityCacheDispatcher,[{type:core.Injectable}],(function(){return[{type:CorrelationIdGenerator},{type:EntityDispatcherDefaultOptions},{type:internal_Observable.y,decorators:[{type:core.Inject,args:[ScannedActionsSubject]}]},{type:ngrx_store_Store}]}),null);class EntityDispatcherBase{constructor(entityName,entityActionFactory,store,selectId=defaultSelectId,defaultDispatcherOptions,reducedActions$,entityCacheSelector,correlationIdGenerator){this.entityName=entityName,this.entityActionFactory=entityActionFactory,this.store=store,this.selectId=selectId,this.defaultDispatcherOptions=defaultDispatcherOptions,this.reducedActions$=reducedActions$,this.correlationIdGenerator=correlationIdGenerator,this.guard=new EntityActionGuard(entityName,selectId),this.toUpdate=toUpdateFactory(selectId);const collectionSelector=createSelector(entityCacheSelector,(cache=>cache[entityName]));this.entityCollection$=store.select(collectionSelector)}createEntityAction(entityOp,data,options){return this.entityActionFactory.create({entityName:this.entityName,entityOp,data,...options})}createAndDispatch(op,data,options){const action=this.createEntityAction(op,data,options);return this.dispatch(action),action}dispatch(action){return this.store.dispatch(action),action}add(entity,options){options=this.setSaveEntityActionOptions(options,this.defaultDispatcherOptions.optimisticAdd);const action=this.createEntityAction(EntityOp.SAVE_ADD_ONE,entity,options);return options.isOptimistic&&this.guard.mustBeEntity(action),this.dispatch(action),this.getResponseData$(options.correlationId).pipe(withLatestFrom_withLatestFrom(this.entityCollection$),(0,operators_map.U)((([e,collection])=>collection.entities[this.selectId(e)])),(0,shareReplay.d)(1))}cancel(correlationId,reason,options){if(!correlationId)throw new Error("Missing correlationId");this.createAndDispatch(EntityOp.CANCEL_PERSIST,reason,{correlationId})}delete(arg,options){options=this.setSaveEntityActionOptions(options,this.defaultDispatcherOptions.optimisticDelete);const key=this.getKey(arg),action=this.createEntityAction(EntityOp.SAVE_DELETE_ONE,key,options);return this.guard.mustBeKey(action),this.dispatch(action),this.getResponseData$(options.correlationId).pipe((0,operators_map.U)((()=>key)),(0,shareReplay.d)(1))}getAll(options){options=this.setQueryEntityActionOptions(options);const action=this.createEntityAction(EntityOp.QUERY_ALL,null,options);return this.dispatch(action),this.getResponseData$(options.correlationId).pipe(withLatestFrom_withLatestFrom(this.entityCollection$),(0,operators_map.U)((([entities,collection])=>entities.reduce(((acc,e)=>{const entity=collection.entities[this.selectId(e)];return entity&&acc.push(entity),acc}),[]))),(0,shareReplay.d)(1))}getByKey(key,options){options=this.setQueryEntityActionOptions(options);const action=this.createEntityAction(EntityOp.QUERY_BY_KEY,key,options);return this.dispatch(action),this.getResponseData$(options.correlationId).pipe(withLatestFrom_withLatestFrom(this.entityCollection$),(0,operators_map.U)((([entity,collection])=>collection.entities[this.selectId(entity)])),(0,shareReplay.d)(1))}getWithQuery(queryParams,options){options=this.setQueryEntityActionOptions(options);const action=this.createEntityAction(EntityOp.QUERY_MANY,queryParams,options);return this.dispatch(action),this.getResponseData$(options.correlationId).pipe(withLatestFrom_withLatestFrom(this.entityCollection$),(0,operators_map.U)((([entities,collection])=>entities.reduce(((acc,e)=>{const entity=collection.entities[this.selectId(e)];return entity&&acc.push(entity),acc}),[]))),(0,shareReplay.d)(1))}load(options){options=this.setQueryEntityActionOptions(options);const action=this.createEntityAction(EntityOp.QUERY_LOAD,null,options);return this.dispatch(action),this.getResponseData$(options.correlationId).pipe((0,shareReplay.d)(1))}loadWithQuery(queryParams,options){options=this.setQueryEntityActionOptions(options);const action=this.createEntityAction(EntityOp.QUERY_MANY,queryParams,options);return this.dispatch(action),this.getResponseData$(options.correlationId).pipe((0,shareReplay.d)(1))}update(entity,options){const update=this.toUpdate(entity);options=this.setSaveEntityActionOptions(options,this.defaultDispatcherOptions.optimisticUpdate);const action=this.createEntityAction(EntityOp.SAVE_UPDATE_ONE,update,options);return options.isOptimistic&&this.guard.mustBeUpdate(action),this.dispatch(action),this.getResponseData$(options.correlationId).pipe((0,operators_map.U)((updateData=>updateData.changes)),withLatestFrom_withLatestFrom(this.entityCollection$),(0,operators_map.U)((([e,collection])=>collection.entities[this.selectId(e)])),(0,shareReplay.d)(1))}upsert(entity,options){options=this.setSaveEntityActionOptions(options,this.defaultDispatcherOptions.optimisticUpsert);const action=this.createEntityAction(EntityOp.SAVE_UPSERT_ONE,entity,options);return options.isOptimistic&&this.guard.mustBeEntity(action),this.dispatch(action),this.getResponseData$(options.correlationId).pipe(withLatestFrom_withLatestFrom(this.entityCollection$),(0,operators_map.U)((([e,collection])=>collection.entities[this.selectId(e)])),(0,shareReplay.d)(1))}addAllToCache(entities,options){this.createAndDispatch(EntityOp.ADD_ALL,entities,options)}addOneToCache(entity,options){this.createAndDispatch(EntityOp.ADD_ONE,entity,options)}addManyToCache(entities,options){this.createAndDispatch(EntityOp.ADD_MANY,entities,options)}clearCache(options){this.createAndDispatch(EntityOp.REMOVE_ALL,void 0,options)}removeOneFromCache(arg,options){this.createAndDispatch(EntityOp.REMOVE_ONE,this.getKey(arg),options)}removeManyFromCache(args,options){if(!args||0===args.length)return;const keys="object"==typeof args[0]?args.map((arg=>this.getKey(arg))):args;this.createAndDispatch(EntityOp.REMOVE_MANY,keys,options)}updateOneInCache(entity,options){const update=this.toUpdate(entity);this.createAndDispatch(EntityOp.UPDATE_ONE,update,options)}updateManyInCache(entities,options){if(!entities||0===entities.length)return;const updates=entities.map((entity=>this.toUpdate(entity)));this.createAndDispatch(EntityOp.UPDATE_MANY,updates,options)}upsertOneInCache(entity,options){this.createAndDispatch(EntityOp.UPSERT_ONE,entity,options)}upsertManyInCache(entities,options){entities&&0!==entities.length&&this.createAndDispatch(EntityOp.UPSERT_MANY,entities,options)}setFilter(pattern){this.createAndDispatch(EntityOp.SET_FILTER,pattern)}setLoaded(isLoaded){this.createAndDispatch(EntityOp.SET_LOADED,!!isLoaded)}setLoading(isLoading){this.createAndDispatch(EntityOp.SET_LOADING,!!isLoading)}getKey(arg){return"object"==typeof arg?this.selectId(arg):arg}getResponseData$(crid){return this.reducedActions$.pipe((0,operators_filter.h)((act=>!!act.payload)),(0,operators_filter.h)((act=>{const{correlationId,entityName,entityOp}=act.payload;return entityName===this.entityName&&correlationId===crid&&(entityOp.endsWith("/success")||entityOp.endsWith("/error")||entityOp===EntityOp.CANCEL_PERSIST)})),(0,take.q)(1),(0,mergeMap.z)((act=>{const{entityOp}=act.payload;return entityOp===EntityOp.CANCEL_PERSIST?(0,throwError._)(new PersistanceCanceled(act.payload.data)):entityOp.endsWith("/success")?(0,observable_of.of)(act.payload.data):(0,throwError._)(act.payload.data.error)})))}setQueryEntityActionOptions(options){const correlationId=null==(options=options||{}).correlationId?this.correlationIdGenerator.next():options.correlationId;return{...options,correlationId}}setSaveEntityActionOptions(options,defaultOptimism){const correlationId=null==(options=options||{}).correlationId?this.correlationIdGenerator.next():options.correlationId,isOptimistic=null==options.isOptimistic?defaultOptimism||!1:!0===options.isOptimistic;return{...options,correlationId,isOptimistic}}}const ENTITY_CACHE_NAME_TOKEN=new core.InjectionToken("@ngrx/data Entity Cache Name"),ENTITY_CACHE_META_REDUCERS=new core.InjectionToken("@ngrx/data Entity Cache Meta Reducers"),ENTITY_COLLECTION_META_REDUCERS=new core.InjectionToken("@ngrx/data Entity Collection Meta Reducers"),INITIAL_ENTITY_CACHE_STATE=new core.InjectionToken("@ngrx/data Initial Entity Cache State"),ENTITY_CACHE_SELECTOR_TOKEN=new core.InjectionToken("@ngrx/data Entity Cache Selector"),entityCacheSelectorProvider={provide:ENTITY_CACHE_SELECTOR_TOKEN,useFactory:createEntityCacheSelector,deps:[[new core.Optional,ENTITY_CACHE_NAME_TOKEN]]};function createEntityCacheSelector(entityCacheName){return createFeatureSelector(entityCacheName=entityCacheName||"entityCache")}class EntityDispatcherFactory{constructor(entityActionFactory,store,entityDispatcherDefaultOptions,scannedActions$,entityCacheSelector,correlationIdGenerator){this.entityActionFactory=entityActionFactory,this.store=store,this.entityDispatcherDefaultOptions=entityDispatcherDefaultOptions,this.entityCacheSelector=entityCacheSelector,this.correlationIdGenerator=correlationIdGenerator,this.reducedActions$=scannedActions$.pipe((0,shareReplay.d)(1)),this.raSubscription=this.reducedActions$.subscribe()}create(entityName,selectId=defaultSelectId,defaultOptions={}){const options={...this.entityDispatcherDefaultOptions,...defaultOptions};return new EntityDispatcherBase(entityName,this.entityActionFactory,this.store,selectId,options,this.reducedActions$,this.entityCacheSelector,this.correlationIdGenerator)}ngOnDestroy(){this.raSubscription.unsubscribe()}static#_=this.ɵfac=function EntityDispatcherFactory_Factory(t){return new(t||EntityDispatcherFactory)(core["ɵɵinject"](EntityActionFactory),core["ɵɵinject"](ngrx_store_Store),core["ɵɵinject"](EntityDispatcherDefaultOptions),core["ɵɵinject"](ScannedActionsSubject),core["ɵɵinject"](ENTITY_CACHE_SELECTOR_TOKEN),core["ɵɵinject"](CorrelationIdGenerator))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityDispatcherFactory,factory:EntityDispatcherFactory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityDispatcherFactory,[{type:core.Injectable}],(function(){return[{type:EntityActionFactory},{type:ngrx_store_Store},{type:EntityDispatcherDefaultOptions},{type:internal_Observable.y,decorators:[{type:core.Inject,args:[ScannedActionsSubject]}]},{type:void 0,decorators:[{type:core.Inject,args:[ENTITY_CACHE_SELECTOR_TOKEN]}]},{type:CorrelationIdGenerator}]}),null);const ENTITY_EFFECTS_SCHEDULER=new core.InjectionToken("@ngrx/data Entity Effects Scheduler");class EntityCacheEffects{constructor(actions,dataService,entityActionFactory,logger,scheduler){this.actions=actions,this.dataService=dataService,this.entityActionFactory=entityActionFactory,this.logger=logger,this.scheduler=scheduler,this.responseDelay=10,this.saveEntitiesCancel$=createEffect((()=>this.actions.pipe(ofType(EntityCacheAction.SAVE_ENTITIES_CANCEL),(0,operators_filter.h)((a=>null!=a.payload.correlationId)))),{dispatch:!1}),this.saveEntities$=createEffect((()=>this.actions.pipe(ofType(EntityCacheAction.SAVE_ENTITIES),(0,mergeMap.z)((action=>this.saveEntities(action))))))}saveEntities(action){const error=action.payload.error;if(error)return this.handleSaveEntitiesError$(action)(error);try{const changeSet=excludeEmptyChangeSetItems(action.payload.changeSet),{correlationId,mergeStrategy,tag,url}=action.payload,options={correlationId,mergeStrategy,tag};if(0===changeSet.changes.length)return(0,observable_of.of)(new SaveEntitiesSuccess(changeSet,url,options));const c=this.saveEntitiesCancel$.pipe((0,operators_filter.h)((a=>correlationId===a.payload.correlationId)),(0,operators_map.U)((a=>new SaveEntitiesCanceled(correlationId,a.payload.reason,a.payload.tag))));return race(c,this.dataService.saveEntities(changeSet,url).pipe((0,operators_concatMap.b)((result=>this.handleSaveEntitiesSuccess$(action,this.entityActionFactory)(result))),(0,catchError.K)(this.handleSaveEntitiesError$(action))))}catch(err){return this.handleSaveEntitiesError$(action)(err)}}handleSaveEntitiesError$(action){return err=>{const error=err instanceof DataServiceError?err:new DataServiceError(err,null);return(0,observable_of.of)(new SaveEntitiesError(error,action)).pipe((0,delay.g)(this.responseDelay,this.scheduler||scheduler_async.z))}}handleSaveEntitiesSuccess$(action,entityActionFactory){const{url,correlationId,mergeStrategy,tag}=action.payload,options={correlationId,mergeStrategy,tag};return changeSet=>{if(changeSet)return(0,observable_of.of)(new SaveEntitiesSuccess(changeSet,url,options));if(changeSet=action.payload.changeSet,!action.payload.isOptimistic)return(0,observable_of.of)(new SaveEntitiesSuccess(changeSet,url,options));const entityNames=changeSet.changes.reduce(((acc,item)=>-1===acc.indexOf(item.entityName)?acc.concat(item.entityName):acc),[]);return(0,observable_merge.T)(entityNames.map((name=>entityActionFactory.create(name,EntityOp.SET_LOADING,!1))))}}static#_=this.ɵfac=function EntityCacheEffects_Factory(t){return new(t||EntityCacheEffects)(core["ɵɵinject"](Actions),core["ɵɵinject"](EntityCacheDataService),core["ɵɵinject"](EntityActionFactory),core["ɵɵinject"](Logger),core["ɵɵinject"](ENTITY_EFFECTS_SCHEDULER,8))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityCacheEffects,factory:EntityCacheEffects.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityCacheEffects,[{type:core.Injectable}],(function(){return[{type:Actions},{type:EntityCacheDataService},{type:EntityActionFactory},{type:Logger},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[ENTITY_EFFECTS_SCHEDULER]}]}]}),null);const persistOps=[EntityOp.QUERY_ALL,EntityOp.QUERY_LOAD,EntityOp.QUERY_BY_KEY,EntityOp.QUERY_MANY,EntityOp.SAVE_ADD_ONE,EntityOp.SAVE_DELETE_ONE,EntityOp.SAVE_UPDATE_ONE,EntityOp.SAVE_UPSERT_ONE];class EntityEffects{constructor(actions,dataService,entityActionFactory,resultHandler,scheduler){this.actions=actions,this.dataService=dataService,this.entityActionFactory=entityActionFactory,this.resultHandler=resultHandler,this.scheduler=scheduler,this.responseDelay=10,this.cancel$=createEffect((()=>this.actions.pipe(ofEntityOp(EntityOp.CANCEL_PERSIST),(0,operators_map.U)((action=>action.payload.correlationId)),(0,operators_filter.h)((id=>null!=id)))),{dispatch:!1}),this.persist$=createEffect((()=>this.actions.pipe(ofEntityOp(persistOps),(0,mergeMap.z)((action=>this.persist(action))))))}persist(action){if(action.payload.skip)return this.handleSkipSuccess$(action);if(action.payload.error)return this.handleError$(action)(action.payload.error);try{const c=this.cancel$.pipe((0,operators_filter.h)((id=>action.payload.correlationId===id)),(0,operators_map.U)((id=>this.entityActionFactory.createFromAction(action,{entityOp:EntityOp.CANCELED_PERSIST}))));return race(c,this.callDataService(action).pipe((0,operators_map.U)(this.resultHandler.handleSuccess(action)),(0,catchError.K)(this.handleError$(action))))}catch(err){return this.handleError$(action)(err)}}callDataService(action){const{entityName,entityOp,data,httpOptions}=action.payload,service=this.dataService.getService(entityName);switch(entityOp){case EntityOp.QUERY_ALL:case EntityOp.QUERY_LOAD:return service.getAll(httpOptions);case EntityOp.QUERY_BY_KEY:return service.getById(data,httpOptions);case EntityOp.QUERY_MANY:return service.getWithQuery(data,httpOptions);case EntityOp.SAVE_ADD_ONE:return service.add(data,httpOptions);case EntityOp.SAVE_DELETE_ONE:return service.delete(data,httpOptions);case EntityOp.SAVE_UPDATE_ONE:const{id,changes}=data;return service.update(data,httpOptions).pipe((0,operators_map.U)((updatedEntity=>updatedEntity&&Object.keys(updatedEntity).length>0?{id,changes:{...changes,...updatedEntity},changed:!0}:{id,changes,changed:!1})));case EntityOp.SAVE_UPSERT_ONE:return service.upsert(data,httpOptions).pipe((0,operators_map.U)((upsertedEntity=>upsertedEntity&&Object.keys(upsertedEntity).length>0?upsertedEntity:data)));default:throw new Error(`Persistence action "${entityOp}" is not implemented.`)}}handleError$(action){return error=>(0,observable_of.of)(this.resultHandler.handleError(action)(error)).pipe((0,delay.g)(this.responseDelay,this.scheduler||scheduler_async.z))}handleSkipSuccess$(originalAction){const successOp=makeSuccessOp(originalAction.payload.entityOp),successAction=this.entityActionFactory.createFromAction(originalAction,{entityOp:successOp});return(0,observable_of.of)(successAction).pipe((0,delay.g)(this.responseDelay,this.scheduler||scheduler_async.z))}static#_=this.ɵfac=function EntityEffects_Factory(t){return new(t||EntityEffects)(core["ɵɵinject"](Actions),core["ɵɵinject"](EntityDataService),core["ɵɵinject"](EntityActionFactory),core["ɵɵinject"](PersistenceResultHandler),core["ɵɵinject"](ENTITY_EFFECTS_SCHEDULER,8))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityEffects,factory:EntityEffects.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityEffects,[{type:core.Injectable}],(function(){return[{type:Actions},{type:EntityDataService},{type:EntityActionFactory},{type:PersistenceResultHandler},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[ENTITY_EFFECTS_SCHEDULER]}]}]}),null);class EntityCollectionServiceBase{constructor(entityName,serviceElementsFactory){this.entityName=entityName,entityName=entityName.trim();const{dispatcher,selectors,selectors$}=serviceElementsFactory.create(entityName);this.entityName=entityName,this.dispatcher=dispatcher,this.guard=dispatcher.guard,this.selectId=dispatcher.selectId,this.toUpdate=dispatcher.toUpdate,this.selectors=selectors,this.selectors$=selectors$,this.collection$=selectors$.collection$,this.count$=selectors$.count$,this.entities$=selectors$.entities$,this.entityActions$=selectors$.entityActions$,this.entityMap$=selectors$.entityMap$,this.errors$=selectors$.errors$,this.filter$=selectors$.filter$,this.filteredEntities$=selectors$.filteredEntities$,this.keys$=selectors$.keys$,this.loaded$=selectors$.loaded$,this.loading$=selectors$.loading$,this.changeState$=selectors$.changeState$}createEntityAction(op,data,options){return this.dispatcher.createEntityAction(op,data,options)}createAndDispatch(op,data,options){return this.dispatcher.createAndDispatch(op,data,options)}dispatch(action){return this.dispatcher.dispatch(action)}get store(){return this.dispatcher.store}add(entity,options){return this.dispatcher.add(entity,options)}cancel(correlationId,reason,options){this.dispatcher.cancel(correlationId,reason,options)}delete(arg,options){return this.dispatcher.delete(arg,options)}getAll(options){return this.dispatcher.getAll(options)}getByKey(key,options){return this.dispatcher.getByKey(key,options)}getWithQuery(queryParams,options){return this.dispatcher.getWithQuery(queryParams,options)}load(options){return this.dispatcher.load(options)}loadWithQuery(queryParams,options){return this.dispatcher.loadWithQuery(queryParams,options)}update(entity,options){return this.dispatcher.update(entity,options)}upsert(entity,options){return this.dispatcher.upsert(entity,options)}addAllToCache(entities,options){this.dispatcher.addAllToCache(entities,options)}addOneToCache(entity,options){this.dispatcher.addOneToCache(entity,options)}addManyToCache(entities,options){this.dispatcher.addManyToCache(entities,options)}clearCache(){this.dispatcher.clearCache()}removeOneFromCache(arg,options){this.dispatcher.removeOneFromCache(arg,options)}removeManyFromCache(args,options){this.dispatcher.removeManyFromCache(args,options)}updateOneInCache(entity,options){this.dispatcher.updateOneInCache(entity,options)}updateManyInCache(entities,options){this.dispatcher.updateManyInCache(entities,options)}upsertOneInCache(entity,options){this.dispatcher.upsertOneInCache(entity,options)}upsertManyInCache(entities,options){this.dispatcher.upsertManyInCache(entities,options)}setFilter(pattern){this.dispatcher.setFilter(pattern)}setLoaded(isLoaded){this.dispatcher.setLoaded(!!isLoaded)}setLoading(isLoading){this.dispatcher.setLoading(!!isLoading)}}class EntityCollectionCreator{constructor(entityDefinitionService){this.entityDefinitionService=entityDefinitionService}create(entityName){const def=this.entityDefinitionService&&this.entityDefinitionService.getDefinition(entityName,!1);return def&&def.initialState||function createEmptyEntityCollection(entityName){return{entityName,ids:[],entities:{},filter:void 0,loaded:!1,loading:!1,changeState:{}}}(entityName)}static#_=this.ɵfac=function EntityCollectionCreator_Factory(t){return new(t||EntityCollectionCreator)(core["ɵɵinject"](EntityDefinitionService,8))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityCollectionCreator,factory:EntityCollectionCreator.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityCollectionCreator,[{type:core.Injectable}],(function(){return[{type:EntityDefinitionService,decorators:[{type:core.Optional}]}]}),null);class EntitySelectorsFactory{constructor(entityCollectionCreator,selectEntityCache){this.entityCollectionCreator=entityCollectionCreator||new EntityCollectionCreator,this.selectEntityCache=selectEntityCache||createEntityCacheSelector("entityCache")}createCollectionSelector(entityName){return createSelector(this.selectEntityCache,((cache={})=>cache[entityName]||this.entityCollectionCreator.create(entityName)))}createCollectionSelectors(metadataOrName){const metadata="string"==typeof metadataOrName?{entityName:metadataOrName}:metadataOrName,selectKeys=c=>c.ids,selectEntityMap=c=>c.entities,selectEntities=createSelector(selectKeys,selectEntityMap,((keys,entities)=>keys.map((key=>entities[key])))),selectCount=createSelector(selectKeys,(keys=>keys.length)),selectFilter=c=>c.filter,filterFn=metadata.filterFn,selectFilteredEntities=filterFn?createSelector(selectEntities,selectFilter,((entities,pattern)=>filterFn(entities,pattern))):selectEntities,extra=metadata.additionalCollectionState||{},extraSelectors={};return Object.keys(extra).forEach((k=>{extraSelectors["select"+k[0].toUpperCase()+k.slice(1)]=c=>c[k]})),{selectCount,selectEntities,selectEntityMap,selectFilter,selectFilteredEntities,selectKeys,selectLoaded:c=>c.loaded,selectLoading:c=>c.loading,selectChangeState:c=>c.changeState,...extraSelectors}}create(metadataOrName){const metadata="string"==typeof metadataOrName?{entityName:metadataOrName}:metadataOrName,entityName=metadata.entityName,selectCollection=this.createCollectionSelector(entityName),collectionSelectors=this.createCollectionSelectors(metadata),entitySelectors={};return Object.keys(collectionSelectors).forEach((k=>{entitySelectors[k]=createSelector(selectCollection,collectionSelectors[k])})),{entityName,selectCollection,selectEntityCache:this.selectEntityCache,...entitySelectors}}static#_=this.ɵfac=function EntitySelectorsFactory_Factory(t){return new(t||EntitySelectorsFactory)(core["ɵɵinject"](EntityCollectionCreator,8),core["ɵɵinject"](ENTITY_CACHE_SELECTOR_TOKEN,8))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntitySelectorsFactory,factory:EntitySelectorsFactory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntitySelectorsFactory,[{type:core.Injectable}],(function(){return[{type:EntityCollectionCreator,decorators:[{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[ENTITY_CACHE_SELECTOR_TOKEN]}]}]}),null);class EntitySelectors$Factory{constructor(store,actions,selectEntityCache){this.store=store,this.actions=actions,this.selectEntityCache=selectEntityCache,this.entityCache$=this.store.select(this.selectEntityCache),this.entityActionErrors$=actions.pipe((0,operators_filter.h)((ea=>ea.payload&&ea.payload.entityOp&&ea.payload.entityOp.endsWith("/error"))),(0,shareReplay.d)(1))}create(entityName,selectors){const selectors$={entityName};return Object.keys(selectors).forEach((name=>{if(name.startsWith("select")){const name$=name[6].toLowerCase()+name.substring(7)+"$";selectors$[name$]=this.store.select(selectors[name])}})),selectors$.entityActions$=this.actions.pipe(ofEntityType(entityName)),selectors$.errors$=this.entityActionErrors$.pipe(ofEntityType(entityName)),selectors$}static#_=this.ɵfac=function EntitySelectors$Factory_Factory(t){return new(t||EntitySelectors$Factory)(core["ɵɵinject"](ngrx_store_Store),core["ɵɵinject"](Actions),core["ɵɵinject"](ENTITY_CACHE_SELECTOR_TOKEN))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntitySelectors$Factory,factory:EntitySelectors$Factory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntitySelectors$Factory,[{type:core.Injectable}],(function(){return[{type:ngrx_store_Store},{type:Actions},{type:void 0,decorators:[{type:core.Inject,args:[ENTITY_CACHE_SELECTOR_TOKEN]}]}]}),null);class EntityCollectionServiceElementsFactory{constructor(entityDispatcherFactory,entityDefinitionService,entitySelectorsFactory,entitySelectors$Factory){this.entityDispatcherFactory=entityDispatcherFactory,this.entityDefinitionService=entityDefinitionService,this.entitySelectorsFactory=entitySelectorsFactory,this.entitySelectors$Factory=entitySelectors$Factory}create(entityName){entityName=entityName.trim();const definition=this.entityDefinitionService.getDefinition(entityName),dispatcher=this.entityDispatcherFactory.create(entityName,definition.selectId,definition.entityDispatcherOptions),selectors=this.entitySelectorsFactory.create(definition.metadata);return{dispatcher,entityName,selectors,selectors$:this.entitySelectors$Factory.create(entityName,selectors)}}static#_=this.ɵfac=function EntityCollectionServiceElementsFactory_Factory(t){return new(t||EntityCollectionServiceElementsFactory)(core["ɵɵinject"](EntityDispatcherFactory),core["ɵɵinject"](EntityDefinitionService),core["ɵɵinject"](EntitySelectorsFactory),core["ɵɵinject"](EntitySelectors$Factory))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityCollectionServiceElementsFactory,factory:EntityCollectionServiceElementsFactory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityCollectionServiceElementsFactory,[{type:core.Injectable}],(function(){return[{type:EntityDispatcherFactory},{type:EntityDefinitionService},{type:EntitySelectorsFactory},{type:EntitySelectors$Factory}]}),null);class EntityCollectionServiceFactory{constructor(entityCollectionServiceElementsFactory){this.entityCollectionServiceElementsFactory=entityCollectionServiceElementsFactory}create(entityName){return new EntityCollectionServiceBase(entityName,this.entityCollectionServiceElementsFactory)}static#_=this.ɵfac=function EntityCollectionServiceFactory_Factory(t){return new(t||EntityCollectionServiceFactory)(core["ɵɵinject"](EntityCollectionServiceElementsFactory))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityCollectionServiceFactory,factory:EntityCollectionServiceFactory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityCollectionServiceFactory,[{type:core.Injectable}],(function(){return[{type:EntityCollectionServiceElementsFactory}]}),null);class EntityServicesElements{constructor(entityCollectionServiceFactory,entityDispatcherFactory,entitySelectors$Factory,store){this.entityCollectionServiceFactory=entityCollectionServiceFactory,this.store=store,this.entityActionErrors$=entitySelectors$Factory.entityActionErrors$,this.entityCache$=entitySelectors$Factory.entityCache$,this.reducedActions$=entityDispatcherFactory.reducedActions$}static#_=this.ɵfac=function EntityServicesElements_Factory(t){return new(t||EntityServicesElements)(core["ɵɵinject"](EntityCollectionServiceFactory),core["ɵɵinject"](EntityDispatcherFactory),core["ɵɵinject"](EntitySelectors$Factory),core["ɵɵinject"](ngrx_store_Store))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityServicesElements,factory:EntityServicesElements.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityServicesElements,[{type:core.Injectable}],(function(){return[{type:EntityCollectionServiceFactory},{type:EntityDispatcherFactory},{type:EntitySelectors$Factory},{type:ngrx_store_Store}]}),null);class EntityServicesBase{constructor(entityServicesElements){this.entityServicesElements=entityServicesElements,this.EntityCollectionServices={}}get entityActionErrors$(){return this.entityServicesElements.entityActionErrors$}get entityCache$(){return this.entityServicesElements.entityCache$}get entityCollectionServiceFactory(){return this.entityServicesElements.entityCollectionServiceFactory}get reducedActions$(){return this.entityServicesElements.reducedActions$}get store(){return this.entityServicesElements.store}dispatch(action){this.store.dispatch(action)}createEntityCollectionService(entityName){return this.entityCollectionServiceFactory.create(entityName)}getEntityCollectionService(entityName){let service=this.EntityCollectionServices[entityName];return service||(service=this.createEntityCollectionService(entityName),this.EntityCollectionServices[entityName]=service),service}registerEntityCollectionService(service,serviceName){this.EntityCollectionServices[serviceName||service.entityName]=service}registerEntityCollectionServices(entityCollectionServices){Array.isArray(entityCollectionServices)?entityCollectionServices.forEach((service=>this.registerEntityCollectionService(service))):Object.keys(entityCollectionServices||{}).forEach((serviceName=>{this.registerEntityCollectionService(entityCollectionServices[serviceName],serviceName)}))}static#_=this.ɵfac=function EntityServicesBase_Factory(t){return new(t||EntityServicesBase)(core["ɵɵinject"](EntityServicesElements))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityServicesBase,factory:EntityServicesBase.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityServicesBase,[{type:core.Injectable}],(function(){return[{type:EntityServicesElements}]}),null);var ChangeType;!function(ChangeType){ChangeType[ChangeType.Unchanged=0]="Unchanged",ChangeType[ChangeType.Added=1]="Added",ChangeType[ChangeType.Deleted=2]="Deleted",ChangeType[ChangeType.Updated=3]="Updated"}(ChangeType||(ChangeType={}));class EntityChangeTrackerBase{constructor(adapter,selectId){this.adapter=adapter,this.selectId=selectId,this.selectId=selectId||defaultSelectId}commitAll(collection){return 0===Object.keys(collection.changeState).length?collection:{...collection,changeState:{}}}commitMany(entityOrIdList,collection){if(null==entityOrIdList||0===entityOrIdList.length)return collection;let didMutate=!1;const changeState=entityOrIdList.reduce(((chgState,entityOrId)=>{const id="object"==typeof entityOrId?this.selectId(entityOrId):entityOrId;return chgState[id]&&(didMutate||(chgState={...chgState},didMutate=!0),delete chgState[id]),chgState}),collection.changeState);return didMutate?{...collection,changeState}:collection}commitOne(entityOrId,collection){return null==entityOrId?collection:this.commitMany([entityOrId],collection)}mergeQueryResults(entities,collection,mergeStrategy){return this.mergeServerUpserts(entities,collection,MergeStrategy.PreserveChanges,mergeStrategy)}mergeSaveAdds(entities,collection,mergeStrategy){return this.mergeServerUpserts(entities,collection,MergeStrategy.OverwriteChanges,mergeStrategy)}mergeSaveDeletes(keys,collection,mergeStrategy){const deleteIds=keys;return collection=(mergeStrategy=null==mergeStrategy?MergeStrategy.OverwriteChanges:mergeStrategy)===MergeStrategy.IgnoreChanges?collection:this.commitMany(deleteIds,collection),this.adapter.removeMany(deleteIds,collection)}mergeSaveUpdates(updateResponseData,collection,mergeStrategy,skipUnchanged=!1){if(null==updateResponseData||0===updateResponseData.length)return collection;let updates,didMutate=!1,changeState=collection.changeState;switch(mergeStrategy=null==mergeStrategy?MergeStrategy.OverwriteChanges:mergeStrategy){case MergeStrategy.IgnoreChanges:return updates=filterChanged(updateResponseData),this.adapter.updateMany(updates,collection);case MergeStrategy.OverwriteChanges:return changeState=updateResponseData.reduce(((chgState,update)=>{const oldId=update.id;return chgState[oldId]&&(didMutate||(chgState={...chgState},didMutate=!0),delete chgState[oldId]),chgState}),collection.changeState),collection=didMutate?{...collection,changeState}:collection,updates=filterChanged(updateResponseData),this.adapter.updateMany(updates,collection);case MergeStrategy.PreserveChanges:{const updateableEntities=[];return changeState=updateResponseData.reduce(((chgState,update)=>{const oldId=update.id,change=chgState[oldId];if(change){didMutate||(chgState={...chgState},didMutate=!0);const newId=this.selectId(update.changes),oldChangeState=change;newId!==oldId&&delete chgState[oldId];const newOrigValue={...oldChangeState.originalValue,...update.changes};chgState[newId]={...oldChangeState,originalValue:newOrigValue}}else updateableEntities.push(update);return chgState}),collection.changeState),collection=didMutate?{...collection,changeState}:collection,updates=filterChanged(updateableEntities),this.adapter.updateMany(updates,collection)}}function filterChanged(responseData){return!0===skipUnchanged&&(responseData=responseData.filter((r=>!0===r.changed))),responseData.map((r=>({id:r.id,changes:r.changes})))}}mergeSaveUpserts(entities,collection,mergeStrategy){return this.mergeServerUpserts(entities,collection,MergeStrategy.OverwriteChanges,mergeStrategy)}mergeServerUpserts(entities,collection,defaultMergeStrategy,mergeStrategy){if(null==entities||0===entities.length)return collection;let didMutate=!1,changeState=collection.changeState;switch(mergeStrategy=null==mergeStrategy?defaultMergeStrategy:mergeStrategy){case MergeStrategy.IgnoreChanges:return this.adapter.upsertMany(entities,collection);case MergeStrategy.OverwriteChanges:return collection=this.adapter.upsertMany(entities,collection),changeState=entities.reduce(((chgState,entity)=>{const id=this.selectId(entity);return chgState[id]&&(didMutate||(chgState={...chgState},didMutate=!0),delete chgState[id]),chgState}),collection.changeState),didMutate?{...collection,changeState}:collection;case MergeStrategy.PreserveChanges:{const upsertEntities=[];return changeState=entities.reduce(((chgState,entity)=>{const id=this.selectId(entity);return chgState[id]?didMutate||(chgState={...chgState,[id]:{...chgState[id],originalValue:entity}},didMutate=!0):upsertEntities.push(entity),chgState}),collection.changeState),collection=this.adapter.upsertMany(upsertEntities,collection),didMutate?{...collection,changeState}:collection}}}trackAddMany(entities,collection,mergeStrategy){if(mergeStrategy===MergeStrategy.IgnoreChanges||null==entities||0===entities.length)return collection;let didMutate=!1;const changeState=entities.reduce(((chgState,entity)=>{const id=this.selectId(entity);if(null==id||""===id)throw new Error(`${collection.entityName} entity add requires a key to be tracked`);return chgState[id]||(didMutate||(didMutate=!0,chgState={...chgState}),chgState[id]={changeType:ChangeType.Added}),chgState}),collection.changeState);return didMutate?{...collection,changeState}:collection}trackAddOne(entity,collection,mergeStrategy){return null==entity?collection:this.trackAddMany([entity],collection,mergeStrategy)}trackDeleteMany(keys,collection,mergeStrategy){if(mergeStrategy===MergeStrategy.IgnoreChanges||null==keys||0===keys.length)return collection;let didMutate=!1;const entityMap=collection.entities,changeState=keys.reduce(((chgState,id)=>{const originalValue=entityMap[id];if(originalValue){const trackedChange=chgState[id];trackedChange?trackedChange.changeType===ChangeType.Added?(cloneChgStateOnce(),delete chgState[id]):trackedChange.changeType===ChangeType.Updated&&(cloneChgStateOnce(),chgState[id]={...chgState[id],changeType:ChangeType.Deleted}):(cloneChgStateOnce(),chgState[id]={changeType:ChangeType.Deleted,originalValue})}return chgState;function cloneChgStateOnce(){didMutate||(didMutate=!0,chgState={...chgState})}}),collection.changeState);return didMutate?{...collection,changeState}:collection}trackDeleteOne(key,collection,mergeStrategy){return null==key?collection:this.trackDeleteMany([key],collection,mergeStrategy)}trackUpdateMany(updates,collection,mergeStrategy){if(mergeStrategy===MergeStrategy.IgnoreChanges||null==updates||0===updates.length)return collection;let didMutate=!1;const entityMap=collection.entities,changeState=updates.reduce(((chgState,update)=>{const{id,changes:entity}=update;if(null==id||""===id)throw new Error(`${collection.entityName} entity update requires a key to be tracked`);const originalValue=entityMap[id];if(originalValue){chgState[id]||(didMutate||(didMutate=!0,chgState={...chgState}),chgState[id]={changeType:ChangeType.Updated,originalValue})}return chgState}),collection.changeState);return didMutate?{...collection,changeState}:collection}trackUpdateOne(update,collection,mergeStrategy){return null==update?collection:this.trackUpdateMany([update],collection,mergeStrategy)}trackUpsertMany(entities,collection,mergeStrategy){if(mergeStrategy===MergeStrategy.IgnoreChanges||null==entities||0===entities.length)return collection;let didMutate=!1;const entityMap=collection.entities,changeState=entities.reduce(((chgState,entity)=>{const id=this.selectId(entity);if(null==id||""===id)throw new Error(`${collection.entityName} entity upsert requires a key to be tracked`);if(!chgState[id]){didMutate||(didMutate=!0,chgState={...chgState});const originalValue=entityMap[id];chgState[id]=null==originalValue?{changeType:ChangeType.Added}:{changeType:ChangeType.Updated,originalValue}}return chgState}),collection.changeState);return didMutate?{...collection,changeState}:collection}trackUpsertOne(entity,collection,mergeStrategy){return null==entity?collection:this.trackUpsertMany([entity],collection,mergeStrategy)}undoAll(collection){const ids=Object.keys(collection.changeState),{remove,upsert}=ids.reduce(((acc,id)=>{const changeState=acc.chgState[id];switch(changeState.changeType){case ChangeType.Added:acc.remove.push(id);break;case ChangeType.Deleted:const removed=changeState.originalValue;removed&&acc.upsert.push(removed);break;case ChangeType.Updated:acc.upsert.push(changeState.originalValue)}return acc}),{remove:[],upsert:[],chgState:collection.changeState});return collection=this.adapter.removeMany(remove,collection),collection=this.adapter.upsertMany(upsert,collection),{...collection,changeState:{}}}undoMany(entityOrIdList,collection){if(null==entityOrIdList||0===entityOrIdList.length)return collection;let didMutate=!1;const{changeState,remove,upsert}=entityOrIdList.reduce(((acc,entityOrId)=>{let chgState=acc.changeState;const id="object"==typeof entityOrId?this.selectId(entityOrId):entityOrId,change=chgState[id];if(change)switch(didMutate||(chgState={...chgState},didMutate=!0),delete chgState[id],acc.changeState=chgState,change.changeType){case ChangeType.Added:acc.remove.push(id);break;case ChangeType.Deleted:const removed=change.originalValue;removed&&acc.upsert.push(removed);break;case ChangeType.Updated:acc.upsert.push(change.originalValue)}return acc}),{remove:[],upsert:[],changeState:collection.changeState});return collection=this.adapter.removeMany(remove,collection),collection=this.adapter.upsertMany(upsert,collection),didMutate?{...collection,changeState}:collection}undoOne(entityOrId,collection){return null==entityOrId?collection:this.undoMany([entityOrId],collection)}}class EntityCollectionReducerMethods{constructor(entityName,definition,entityChangeTracker){this.entityName=entityName,this.definition=definition,this.methods={[EntityOp.CANCEL_PERSIST]:this.cancelPersist.bind(this),[EntityOp.QUERY_ALL]:this.queryAll.bind(this),[EntityOp.QUERY_ALL_ERROR]:this.queryAllError.bind(this),[EntityOp.QUERY_ALL_SUCCESS]:this.queryAllSuccess.bind(this),[EntityOp.QUERY_BY_KEY]:this.queryByKey.bind(this),[EntityOp.QUERY_BY_KEY_ERROR]:this.queryByKeyError.bind(this),[EntityOp.QUERY_BY_KEY_SUCCESS]:this.queryByKeySuccess.bind(this),[EntityOp.QUERY_LOAD]:this.queryLoad.bind(this),[EntityOp.QUERY_LOAD_ERROR]:this.queryLoadError.bind(this),[EntityOp.QUERY_LOAD_SUCCESS]:this.queryLoadSuccess.bind(this),[EntityOp.QUERY_MANY]:this.queryMany.bind(this),[EntityOp.QUERY_MANY_ERROR]:this.queryManyError.bind(this),[EntityOp.QUERY_MANY_SUCCESS]:this.queryManySuccess.bind(this),[EntityOp.SAVE_ADD_MANY]:this.saveAddMany.bind(this),[EntityOp.SAVE_ADD_MANY_ERROR]:this.saveAddManyError.bind(this),[EntityOp.SAVE_ADD_MANY_SUCCESS]:this.saveAddManySuccess.bind(this),[EntityOp.SAVE_ADD_ONE]:this.saveAddOne.bind(this),[EntityOp.SAVE_ADD_ONE_ERROR]:this.saveAddOneError.bind(this),[EntityOp.SAVE_ADD_ONE_SUCCESS]:this.saveAddOneSuccess.bind(this),[EntityOp.SAVE_DELETE_MANY]:this.saveDeleteMany.bind(this),[EntityOp.SAVE_DELETE_MANY_ERROR]:this.saveDeleteManyError.bind(this),[EntityOp.SAVE_DELETE_MANY_SUCCESS]:this.saveDeleteManySuccess.bind(this),[EntityOp.SAVE_DELETE_ONE]:this.saveDeleteOne.bind(this),[EntityOp.SAVE_DELETE_ONE_ERROR]:this.saveDeleteOneError.bind(this),[EntityOp.SAVE_DELETE_ONE_SUCCESS]:this.saveDeleteOneSuccess.bind(this),[EntityOp.SAVE_UPDATE_MANY]:this.saveUpdateMany.bind(this),[EntityOp.SAVE_UPDATE_MANY_ERROR]:this.saveUpdateManyError.bind(this),[EntityOp.SAVE_UPDATE_MANY_SUCCESS]:this.saveUpdateManySuccess.bind(this),[EntityOp.SAVE_UPDATE_ONE]:this.saveUpdateOne.bind(this),[EntityOp.SAVE_UPDATE_ONE_ERROR]:this.saveUpdateOneError.bind(this),[EntityOp.SAVE_UPDATE_ONE_SUCCESS]:this.saveUpdateOneSuccess.bind(this),[EntityOp.SAVE_UPSERT_MANY]:this.saveUpsertMany.bind(this),[EntityOp.SAVE_UPSERT_MANY_ERROR]:this.saveUpsertManyError.bind(this),[EntityOp.SAVE_UPSERT_MANY_SUCCESS]:this.saveUpsertManySuccess.bind(this),[EntityOp.SAVE_UPSERT_ONE]:this.saveUpsertOne.bind(this),[EntityOp.SAVE_UPSERT_ONE_ERROR]:this.saveUpsertOneError.bind(this),[EntityOp.SAVE_UPSERT_ONE_SUCCESS]:this.saveUpsertOneSuccess.bind(this),[EntityOp.ADD_ALL]:this.addAll.bind(this),[EntityOp.ADD_MANY]:this.addMany.bind(this),[EntityOp.ADD_ONE]:this.addOne.bind(this),[EntityOp.REMOVE_ALL]:this.removeAll.bind(this),[EntityOp.REMOVE_MANY]:this.removeMany.bind(this),[EntityOp.REMOVE_ONE]:this.removeOne.bind(this),[EntityOp.UPDATE_MANY]:this.updateMany.bind(this),[EntityOp.UPDATE_ONE]:this.updateOne.bind(this),[EntityOp.UPSERT_MANY]:this.upsertMany.bind(this),[EntityOp.UPSERT_ONE]:this.upsertOne.bind(this),[EntityOp.COMMIT_ALL]:this.commitAll.bind(this),[EntityOp.COMMIT_MANY]:this.commitMany.bind(this),[EntityOp.COMMIT_ONE]:this.commitOne.bind(this),[EntityOp.UNDO_ALL]:this.undoAll.bind(this),[EntityOp.UNDO_MANY]:this.undoMany.bind(this),[EntityOp.UNDO_ONE]:this.undoOne.bind(this),[EntityOp.SET_CHANGE_STATE]:this.setChangeState.bind(this),[EntityOp.SET_COLLECTION]:this.setCollection.bind(this),[EntityOp.SET_FILTER]:this.setFilter.bind(this),[EntityOp.SET_LOADED]:this.setLoaded.bind(this),[EntityOp.SET_LOADING]:this.setLoading.bind(this)},this.adapter=definition.entityAdapter,this.isChangeTracking=!0!==definition.noChangeTracking,this.selectId=definition.selectId,this.guard=new EntityActionGuard(entityName,this.selectId),this.toUpdate=toUpdateFactory(this.selectId),this.entityChangeTracker=entityChangeTracker||new EntityChangeTrackerBase(this.adapter,this.selectId)}cancelPersist(collection){return this.setLoadingFalse(collection)}queryAll(collection){return this.setLoadingTrue(collection)}queryAllError(collection,action){return this.setLoadingFalse(collection)}queryAllSuccess(collection,action){const data=this.extractData(action),mergeStrategy=this.extractMergeStrategy(action);return{...this.entityChangeTracker.mergeQueryResults(data,collection,mergeStrategy),loaded:!0,loading:!1}}queryByKey(collection,action){return this.setLoadingTrue(collection)}queryByKeyError(collection,action){return this.setLoadingFalse(collection)}queryByKeySuccess(collection,action){const data=this.extractData(action),mergeStrategy=this.extractMergeStrategy(action);return collection=null==data?collection:this.entityChangeTracker.mergeQueryResults([data],collection,mergeStrategy),this.setLoadingFalse(collection)}queryLoad(collection){return this.setLoadingTrue(collection)}queryLoadError(collection,action){return this.setLoadingFalse(collection)}queryLoadSuccess(collection,action){const data=this.extractData(action);return{...this.adapter.setAll(data,collection),loading:!1,loaded:!0,changeState:{}}}queryMany(collection,action){return this.setLoadingTrue(collection)}queryManyError(collection,action){return this.setLoadingFalse(collection)}queryManySuccess(collection,action){const data=this.extractData(action),mergeStrategy=this.extractMergeStrategy(action);return{...this.entityChangeTracker.mergeQueryResults(data,collection,mergeStrategy),loaded:!0,loading:!1}}saveAddMany(collection,action){if(this.isOptimistic(action)){const entities=this.guard.mustBeEntities(action),mergeStrategy=this.extractMergeStrategy(action);collection=this.entityChangeTracker.trackAddMany(entities,collection,mergeStrategy),collection=this.adapter.addMany(entities,collection)}return this.setLoadingTrue(collection)}saveAddManyError(collection,action){return this.setLoadingFalse(collection)}saveAddManySuccess(collection,action){const entities=this.guard.mustBeEntities(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.isOptimistic(action)?this.entityChangeTracker.mergeSaveUpserts(entities,collection,mergeStrategy):this.entityChangeTracker.mergeSaveAdds(entities,collection,mergeStrategy),this.setLoadingFalse(collection)}saveAddOne(collection,action){if(this.isOptimistic(action)){const entity=this.guard.mustBeEntity(action),mergeStrategy=this.extractMergeStrategy(action);collection=this.entityChangeTracker.trackAddOne(entity,collection,mergeStrategy),collection=this.adapter.addOne(entity,collection)}return this.setLoadingTrue(collection)}saveAddOneError(collection,action){return this.setLoadingFalse(collection)}saveAddOneSuccess(collection,action){const entity=this.guard.mustBeEntity(action),mergeStrategy=this.extractMergeStrategy(action);if(this.isOptimistic(action)){const update=this.toUpdate(entity);collection=this.entityChangeTracker.mergeSaveUpdates([update],collection,mergeStrategy,!1)}else collection=this.entityChangeTracker.mergeSaveAdds([entity],collection,mergeStrategy);return this.setLoadingFalse(collection)}saveDeleteOne(collection,action){const toDelete=this.extractData(action),deleteId="object"==typeof toDelete?this.selectId(toDelete):toDelete,change=collection.changeState[deleteId];if(change&&(change.changeType===ChangeType.Added?(collection=this.adapter.removeOne(deleteId,collection),collection=this.entityChangeTracker.commitOne(deleteId,collection),action.payload.skip=!0):collection=this.entityChangeTracker.trackDeleteOne(deleteId,collection)),this.isOptimistic(action)){const mergeStrategy=this.extractMergeStrategy(action);collection=this.entityChangeTracker.trackDeleteOne(deleteId,collection,mergeStrategy),collection=this.adapter.removeOne(deleteId,collection)}return this.setLoadingTrue(collection)}saveDeleteOneError(collection,action){return this.setLoadingFalse(collection)}saveDeleteOneSuccess(collection,action){const deleteId=this.extractData(action);if(this.isOptimistic(action)){const mergeStrategy=this.extractMergeStrategy(action);collection=this.entityChangeTracker.mergeSaveDeletes([deleteId],collection,mergeStrategy)}else collection=this.adapter.removeOne(deleteId,collection),collection=this.entityChangeTracker.commitOne(deleteId,collection);return this.setLoadingFalse(collection)}saveDeleteMany(collection,action){const deleteIds=this.extractData(action).map((d=>"object"==typeof d?this.selectId(d):d));if(deleteIds.forEach((deleteId=>{const change=collection.changeState[deleteId];change&&(change.changeType===ChangeType.Added?(collection=this.adapter.removeOne(deleteId,collection),collection=this.entityChangeTracker.commitOne(deleteId,collection),action.payload.skip=!0):collection=this.entityChangeTracker.trackDeleteOne(deleteId,collection))})),this.isOptimistic(action)){const mergeStrategy=this.extractMergeStrategy(action);collection=this.entityChangeTracker.trackDeleteMany(deleteIds,collection,mergeStrategy),collection=this.adapter.removeMany(deleteIds,collection)}return this.setLoadingTrue(collection)}saveDeleteManyError(collection,action){return this.setLoadingFalse(collection)}saveDeleteManySuccess(collection,action){const deleteIds=this.extractData(action);if(this.isOptimistic(action)){const mergeStrategy=this.extractMergeStrategy(action);collection=this.entityChangeTracker.mergeSaveDeletes(deleteIds,collection,mergeStrategy)}else collection=this.adapter.removeMany(deleteIds,collection),collection=this.entityChangeTracker.commitMany(deleteIds,collection);return this.setLoadingFalse(collection)}saveUpdateOne(collection,action){const update=this.guard.mustBeUpdate(action);if(this.isOptimistic(action)){const mergeStrategy=this.extractMergeStrategy(action);collection=this.entityChangeTracker.trackUpdateOne(update,collection,mergeStrategy),collection=this.adapter.updateOne(update,collection)}return this.setLoadingTrue(collection)}saveUpdateOneError(collection,action){return this.setLoadingFalse(collection)}saveUpdateOneSuccess(collection,action){const update=this.guard.mustBeUpdateResponse(action),isOptimistic=this.isOptimistic(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.entityChangeTracker.mergeSaveUpdates([update],collection,mergeStrategy,isOptimistic),this.setLoadingFalse(collection)}saveUpdateMany(collection,action){const updates=this.guard.mustBeUpdates(action);if(this.isOptimistic(action)){const mergeStrategy=this.extractMergeStrategy(action);collection=this.entityChangeTracker.trackUpdateMany(updates,collection,mergeStrategy),collection=this.adapter.updateMany(updates,collection)}return this.setLoadingTrue(collection)}saveUpdateManyError(collection,action){return this.setLoadingFalse(collection)}saveUpdateManySuccess(collection,action){const updates=this.guard.mustBeUpdateResponses(action),mergeStrategy=(this.isOptimistic(action),this.extractMergeStrategy(action));return collection=this.entityChangeTracker.mergeSaveUpdates(updates,collection,mergeStrategy,!1),this.setLoadingFalse(collection)}saveUpsertOne(collection,action){if(this.isOptimistic(action)){const entity=this.guard.mustBeEntity(action),mergeStrategy=this.extractMergeStrategy(action);collection=this.entityChangeTracker.trackUpsertOne(entity,collection,mergeStrategy),collection=this.adapter.upsertOne(entity,collection)}return this.setLoadingTrue(collection)}saveUpsertOneError(collection,action){return this.setLoadingFalse(collection)}saveUpsertOneSuccess(collection,action){const entity=this.guard.mustBeEntity(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.entityChangeTracker.mergeSaveUpserts([entity],collection,mergeStrategy),this.setLoadingFalse(collection)}saveUpsertMany(collection,action){if(this.isOptimistic(action)){const entities=this.guard.mustBeEntities(action),mergeStrategy=this.extractMergeStrategy(action);collection=this.entityChangeTracker.trackUpsertMany(entities,collection,mergeStrategy),collection=this.adapter.upsertMany(entities,collection)}return this.setLoadingTrue(collection)}saveUpsertManyError(collection,action){return this.setLoadingFalse(collection)}saveUpsertManySuccess(collection,action){const entities=this.guard.mustBeEntities(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.entityChangeTracker.mergeSaveUpserts(entities,collection,mergeStrategy),this.setLoadingFalse(collection)}addAll(collection,action){const entities=this.guard.mustBeEntities(action);return{...this.adapter.setAll(entities,collection),loading:!1,loaded:!0,changeState:{}}}addMany(collection,action){const entities=this.guard.mustBeEntities(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.entityChangeTracker.trackAddMany(entities,collection,mergeStrategy),this.adapter.addMany(entities,collection)}addOne(collection,action){const entity=this.guard.mustBeEntity(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.entityChangeTracker.trackAddOne(entity,collection,mergeStrategy),this.adapter.addOne(entity,collection)}removeMany(collection,action){const keys=this.guard.mustBeKeys(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.entityChangeTracker.trackDeleteMany(keys,collection,mergeStrategy),this.adapter.removeMany(keys,collection)}removeOne(collection,action){const key=this.guard.mustBeKey(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.entityChangeTracker.trackDeleteOne(key,collection,mergeStrategy),this.adapter.removeOne(key,collection)}removeAll(collection,action){return{...this.adapter.removeAll(collection),loaded:!1,loading:!1,changeState:{}}}updateMany(collection,action){const updates=this.guard.mustBeUpdates(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.entityChangeTracker.trackUpdateMany(updates,collection,mergeStrategy),this.adapter.updateMany(updates,collection)}updateOne(collection,action){const update=this.guard.mustBeUpdate(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.entityChangeTracker.trackUpdateOne(update,collection,mergeStrategy),this.adapter.updateOne(update,collection)}upsertMany(collection,action){const entities=this.guard.mustBeEntities(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.entityChangeTracker.trackUpsertMany(entities,collection,mergeStrategy),this.adapter.upsertMany(entities,collection)}upsertOne(collection,action){const entity=this.guard.mustBeEntity(action),mergeStrategy=this.extractMergeStrategy(action);return collection=this.entityChangeTracker.trackUpsertOne(entity,collection,mergeStrategy),this.adapter.upsertOne(entity,collection)}commitAll(collection){return this.entityChangeTracker.commitAll(collection)}commitMany(collection,action){return this.entityChangeTracker.commitMany(this.extractData(action),collection)}commitOne(collection,action){return this.entityChangeTracker.commitOne(this.extractData(action),collection)}undoAll(collection){return this.entityChangeTracker.undoAll(collection)}undoMany(collection,action){return this.entityChangeTracker.undoMany(this.extractData(action),collection)}undoOne(collection,action){return this.entityChangeTracker.undoOne(this.extractData(action),collection)}setChangeState(collection,action){const changeState=this.extractData(action);return collection.changeState===changeState?collection:{...collection,changeState}}setCollection(collection,action){const newCollection=this.extractData(action);return collection===newCollection?collection:newCollection}setFilter(collection,action){const filter=this.extractData(action);return collection.filter===filter?collection:{...collection,filter}}setLoaded(collection,action){const loaded=!0===this.extractData(action)||!1;return collection.loaded===loaded?collection:{...collection,loaded}}setLoading(collection,action){return this.setLoadingFlag(collection,this.extractData(action))}setLoadingFalse(collection){return this.setLoadingFlag(collection,!1)}setLoadingTrue(collection){return this.setLoadingFlag(collection,!0)}setLoadingFlag(collection,loading){return loading=!0===loading,collection.loading===loading?collection:{...collection,loading}}extractData(action){return action.payload&&action.payload.data}extractMergeStrategy(action){return this.isChangeTracking?action.payload&&action.payload.mergeStrategy:MergeStrategy.IgnoreChanges}isOptimistic(action){return action.payload&&!0===action.payload.isOptimistic}}class EntityCollectionReducerMethodsFactory{constructor(entityDefinitionService){this.entityDefinitionService=entityDefinitionService}create(entityName){const definition=this.entityDefinitionService.getDefinition(entityName);return new EntityCollectionReducerMethods(entityName,definition).methods}static#_=this.ɵfac=function EntityCollectionReducerMethodsFactory_Factory(t){return new(t||EntityCollectionReducerMethodsFactory)(core["ɵɵinject"](EntityDefinitionService))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityCollectionReducerMethodsFactory,factory:EntityCollectionReducerMethodsFactory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityCollectionReducerMethodsFactory,[{type:core.Injectable}],(function(){return[{type:EntityDefinitionService}]}),null);class EntityCollectionReducerFactory{constructor(methodsFactory){this.methodsFactory=methodsFactory}create(entityName){const methods=this.methodsFactory.create(entityName);return function entityCollectionReducer(collection,action){const reducerMethod=methods[action.payload.entityOp];return reducerMethod?reducerMethod(collection,action):collection}}static#_=this.ɵfac=function EntityCollectionReducerFactory_Factory(t){return new(t||EntityCollectionReducerFactory)(core["ɵɵinject"](EntityCollectionReducerMethodsFactory))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityCollectionReducerFactory,factory:EntityCollectionReducerFactory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityCollectionReducerFactory,[{type:core.Injectable}],(function(){return[{type:EntityCollectionReducerMethodsFactory}]}),null);class EntityCollectionReducerRegistry{constructor(entityCollectionReducerFactory,entityCollectionMetaReducers){this.entityCollectionReducerFactory=entityCollectionReducerFactory,this.entityCollectionReducers={},this.entityCollectionMetaReducer=compose.apply(null,entityCollectionMetaReducers||[])}getOrCreateReducer(entityName){let reducer=this.entityCollectionReducers[entityName];return reducer||(reducer=this.entityCollectionReducerFactory.create(entityName),reducer=this.registerReducer(entityName,reducer),this.entityCollectionReducers[entityName]=reducer),reducer}registerReducer(entityName,reducer){return reducer=this.entityCollectionMetaReducer(reducer),this.entityCollectionReducers[entityName.trim()]=reducer}registerReducers(reducers){(reducers?Object.keys(reducers):[]).forEach((key=>this.registerReducer(key,reducers[key])))}static#_=this.ɵfac=function EntityCollectionReducerRegistry_Factory(t){return new(t||EntityCollectionReducerRegistry)(core["ɵɵinject"](EntityCollectionReducerFactory),core["ɵɵinject"](ENTITY_COLLECTION_META_REDUCERS,8))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityCollectionReducerRegistry,factory:EntityCollectionReducerRegistry.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityCollectionReducerRegistry,[{type:core.Injectable}],(function(){return[{type:EntityCollectionReducerFactory},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[ENTITY_COLLECTION_META_REDUCERS]}]}]}),null);class EntityCacheReducerFactory{constructor(entityCollectionCreator,entityCollectionReducerRegistry,logger){this.entityCollectionCreator=entityCollectionCreator,this.entityCollectionReducerRegistry=entityCollectionReducerRegistry,this.logger=logger}create(){return function entityCacheReducer(entityCache={},action){switch(action.type){case EntityCacheAction.CLEAR_COLLECTIONS:return this.clearCollectionsReducer(entityCache,action);case EntityCacheAction.LOAD_COLLECTIONS:return this.loadCollectionsReducer(entityCache,action);case EntityCacheAction.MERGE_QUERY_SET:return this.mergeQuerySetReducer(entityCache,action);case EntityCacheAction.SAVE_ENTITIES:return this.saveEntitiesReducer(entityCache,action);case EntityCacheAction.SAVE_ENTITIES_CANCEL:return this.saveEntitiesCancelReducer(entityCache,action);case EntityCacheAction.SAVE_ENTITIES_ERROR:return this.saveEntitiesErrorReducer(entityCache,action);case EntityCacheAction.SAVE_ENTITIES_SUCCESS:return this.saveEntitiesSuccessReducer(entityCache,action);case EntityCacheAction.SET_ENTITY_CACHE:return action.payload.cache}const payload=action.payload;if(payload&&payload.entityName&&payload.entityOp&&!payload.error)return this.applyCollectionReducer(entityCache,action);return entityCache}.bind(this)}clearCollectionsReducer(entityCache,action){let{collections,tag}=action.payload;const entityOp=EntityOp.REMOVE_ALL;return collections||(collections=Object.keys(entityCache)),entityCache=collections.reduce(((newCache,entityName)=>{const payload={entityName,entityOp},act={type:`[${entityName}] ${action.type}`,payload};return newCache=this.applyCollectionReducer(newCache,act)}),entityCache),entityCache}loadCollectionsReducer(entityCache,action){const{collections,tag}=action.payload,entityOp=EntityOp.ADD_ALL;return entityCache=Object.keys(collections).reduce(((newCache,entityName)=>{const payload={entityName,entityOp,data:collections[entityName]},act={type:`[${entityName}] ${action.type}`,payload};return newCache=this.applyCollectionReducer(newCache,act)}),entityCache),entityCache}mergeQuerySetReducer(entityCache,action){let{mergeStrategy,querySet,tag}=action.payload;mergeStrategy=null===mergeStrategy?MergeStrategy.PreserveChanges:mergeStrategy;const entityOp=EntityOp.QUERY_MANY_SUCCESS;return entityCache=Object.keys(querySet).reduce(((newCache,entityName)=>{const payload={entityName,entityOp,data:querySet[entityName],mergeStrategy},act={type:`[${entityName}] ${action.type}`,payload};return newCache=this.applyCollectionReducer(newCache,act)}),entityCache),entityCache}saveEntitiesReducer(entityCache,action){const{changeSet,correlationId,isOptimistic,mergeStrategy,tag}=action.payload;try{changeSet.changes.forEach((item=>{const entityName=item.entityName,payload={entityName,entityOp:getEntityOp(item),data:item.entities,correlationId,isOptimistic,mergeStrategy,tag},act={type:`[${entityName}] ${action.type}`,payload};if(entityCache=this.applyCollectionReducer(entityCache,act),act.payload.error)throw act.payload.error}))}catch(error){action.payload.error=error}return entityCache;function getEntityOp(item){switch(item.op){case ChangeSetOperation.Add:return EntityOp.SAVE_ADD_MANY;case ChangeSetOperation.Delete:return EntityOp.SAVE_DELETE_MANY;case ChangeSetOperation.Update:return EntityOp.SAVE_UPDATE_MANY;case ChangeSetOperation.Upsert:return EntityOp.SAVE_UPSERT_MANY}}}saveEntitiesCancelReducer(entityCache,action){return this.clearLoadingFlags(entityCache,action.payload.entityNames||[])}saveEntitiesErrorReducer(entityCache,action){const entityNames=action.payload.originalAction.payload.changeSet.changes.map((item=>item.entityName));return this.clearLoadingFlags(entityCache,entityNames)}saveEntitiesSuccessReducer(entityCache,action){const{changeSet,correlationId,isOptimistic,mergeStrategy,tag}=action.payload;return changeSet.changes.forEach((item=>{const entityName=item.entityName,payload={entityName,entityOp:getEntityOp(item),data:item.entities,correlationId,isOptimistic,mergeStrategy,tag},act={type:`[${entityName}] ${action.type}`,payload};entityCache=this.applyCollectionReducer(entityCache,act)})),entityCache;function getEntityOp(item){switch(item.op){case ChangeSetOperation.Add:return EntityOp.SAVE_ADD_MANY_SUCCESS;case ChangeSetOperation.Delete:return EntityOp.SAVE_DELETE_MANY_SUCCESS;case ChangeSetOperation.Update:return EntityOp.SAVE_UPDATE_MANY_SUCCESS;case ChangeSetOperation.Upsert:return EntityOp.SAVE_UPSERT_MANY_SUCCESS}}}applyCollectionReducer(cache={},action){const entityName=action.payload.entityName,collection=cache[entityName],reducer=this.entityCollectionReducerRegistry.getOrCreateReducer(entityName);let newCollection;try{newCollection=reducer(collection||this.entityCollectionCreator.create(entityName),action)}catch(error){this.logger.error(error),action.payload.error=error}return action.payload.error||collection===newCollection?cache:{...cache,[entityName]:newCollection}}clearLoadingFlags(entityCache,entityNames){let isMutated=!1;return entityNames.forEach((entityName=>{const collection=entityCache[entityName];collection.loading&&(isMutated||(entityCache={...entityCache},isMutated=!0),entityCache[entityName]={...collection,loading:!1})})),entityCache}static#_=this.ɵfac=function EntityCacheReducerFactory_Factory(t){return new(t||EntityCacheReducerFactory)(core["ɵɵinject"](EntityCollectionCreator),core["ɵɵinject"](EntityCollectionReducerRegistry),core["ɵɵinject"](Logger))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:EntityCacheReducerFactory,factory:EntityCacheReducerFactory.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityCacheReducerFactory,[{type:core.Injectable}],(function(){return[{type:EntityCollectionCreator},{type:EntityCollectionReducerRegistry},{type:Logger}]}),null);class DefaultLogger{error(message,extra){message&&(extra?console.error(message,extra):console.error(message))}log(message,extra){message&&(extra?console.log(message,extra):console.log(message))}warn(message,extra){message&&(extra?console.warn(message,extra):console.warn(message))}static#_=this.ɵfac=function DefaultLogger_Factory(t){return new(t||DefaultLogger)};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:DefaultLogger,factory:DefaultLogger.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](DefaultLogger,[{type:core.Injectable}],null,null);const uncountable=["equipment","information","money","series"];class DefaultPluralizer{constructor(pluralNames){this.pluralNames={},pluralNames&&pluralNames.forEach((pn=>this.registerPluralNames(pn)))}pluralize(name){const plural=this.pluralNames[name];return plural||(uncountable.indexOf(name.toLowerCase())>=0?name:/[aeiou]y$/.test(name)?name+"s":name.endsWith("y")?name.substring(0,name.length-1)+"ies":/[s|ss|sh|ch|x|z]$/.test(name)?name+"es":name+"s")}registerPluralNames(pluralNames){this.pluralNames={...this.pluralNames,...pluralNames||{}}}static#_=this.ɵfac=function DefaultPluralizer_Factory(t){return new(t||DefaultPluralizer)(core["ɵɵinject"](PLURAL_NAMES_TOKEN,8))};static#_2=this.ɵprov=core["ɵɵdefineInjectable"]({token:DefaultPluralizer,factory:DefaultPluralizer.ɵfac})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](DefaultPluralizer,[{type:core.Injectable}],(function(){return[{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[PLURAL_NAMES_TOKEN]}]}]}),null);const BASE_ENTITY_DATA_PROVIDERS=[CorrelationIdGenerator,EntityDispatcherDefaultOptions,EntityActionFactory,EntityCacheDispatcher,EntityCacheReducerFactory,entityCacheSelectorProvider,EntityCollectionCreator,EntityCollectionReducerFactory,EntityCollectionReducerMethodsFactory,EntityCollectionReducerRegistry,EntityCollectionServiceElementsFactory,EntityCollectionServiceFactory,EntityDefinitionService,EntityDispatcherFactory,EntitySelectorsFactory,EntitySelectors$Factory,EntityServicesElements,{provide:ENTITY_CACHE_NAME_TOKEN,useValue:"entityCache"},{provide:class EntityServices{},useClass:EntityServicesBase},{provide:Logger,useClass:DefaultLogger},{provide:core.ENVIRONMENT_INITIALIZER,multi:!0,useValue:()=>function initializeBaseEntityData(){const reducerManager=(0,core.inject)(ReducerManager),entityCacheReducerFactory=(0,core.inject)(EntityCacheReducerFactory),entityCacheName=(0,core.inject)(ENTITY_CACHE_NAME_TOKEN,{optional:!0}),initialStateOrFn=(0,core.inject)(INITIAL_ENTITY_CACHE_STATE,{optional:!0}),metaReducersOrTokens=(0,core.inject)(ENTITY_CACHE_META_REDUCERS,{optional:!0}),key=entityCacheName||"entityCache",metaReducers=(metaReducersOrTokens||[]).map((mr=>mr instanceof core.InjectionToken?(0,core.inject)(mr):mr)),initialState="function"==typeof initialStateOrFn?initialStateOrFn():initialStateOrFn,entityCacheFeature={key,reducers:entityCacheReducerFactory.create(),reducerFactory:combineReducers,initialState:initialState||{},metaReducers};reducerManager.addFeature(entityCacheFeature)}()}];const ENTITY_DATA_EFFECTS_PROVIDERS=[DefaultDataServiceFactory,EntityCacheDataService,EntityDataService,EntityCacheEffects,EntityEffects,{provide:HttpUrlGenerator,useClass:DefaultHttpUrlGenerator},{provide:PersistenceResultHandler,useClass:DefaultPersistenceResultHandler},{provide:Pluralizer,useClass:DefaultPluralizer},{provide:core.ENVIRONMENT_INITIALIZER,multi:!0,useValue:()=>function initializeEntityDataEffects(){const effectsSources=(0,core.inject)(EffectSources),entityCacheEffects=(0,core.inject)(EntityCacheEffects),entityEffects=(0,core.inject)(EntityEffects);effectsSources.addEffects(entityCacheEffects),effectsSources.addEffects(entityEffects)}()}];function provideEntityDataConfig(config){return[{provide:ENTITY_CACHE_META_REDUCERS,useValue:config.entityCacheMetaReducers?config.entityCacheMetaReducers:[]},{provide:ENTITY_COLLECTION_META_REDUCERS,useValue:config.entityCollectionMetaReducers?config.entityCollectionMetaReducers:[]},{provide:PLURAL_NAMES_TOKEN,multi:!0,useValue:config.pluralNames?config.pluralNames:{}},{provide:ENTITY_METADATA_TOKEN,multi:!0,useValue:config.entityMetadata?config.entityMetadata:[]}]}var EntityDataFeatureKind;!function(EntityDataFeatureKind){EntityDataFeatureKind[EntityDataFeatureKind.WithEffects=0]="WithEffects"}(EntityDataFeatureKind||(EntityDataFeatureKind={}));class EntityDataModuleWithoutEffects{static forRoot(config){return{ngModule:EntityDataModuleWithoutEffects,providers:[provideEntityDataConfig(config)]}}static#_=this.ɵfac=function EntityDataModuleWithoutEffects_Factory(t){return new(t||EntityDataModuleWithoutEffects)};static#_2=this.ɵmod=core["ɵɵdefineNgModule"]({type:EntityDataModuleWithoutEffects});static#_3=this.ɵinj=core["ɵɵdefineInjector"]({providers:[BASE_ENTITY_DATA_PROVIDERS]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityDataModuleWithoutEffects,[{type:core.NgModule,args:[{providers:[BASE_ENTITY_DATA_PROVIDERS]}]}],null,null);class EntityDataModule{static forRoot(config){return{ngModule:EntityDataModule,providers:[provideEntityDataConfig(config)]}}static#_=this.ɵfac=function EntityDataModule_Factory(t){return new(t||EntityDataModule)};static#_2=this.ɵmod=core["ɵɵdefineNgModule"]({type:EntityDataModule,imports:[EntityDataModuleWithoutEffects]});static#_3=this.ɵinj=core["ɵɵdefineInjector"]({providers:[ENTITY_DATA_EFFECTS_PROVIDERS],imports:[EntityDataModuleWithoutEffects]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](EntityDataModule,[{type:core.NgModule,args:[{imports:[EntityDataModuleWithoutEffects],providers:[ENTITY_DATA_EFFECTS_PROVIDERS]}]}],null,null)},"./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/delay.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{g:()=>delay});var scheduler_async=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),concat=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/observable/concat.js"),take=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/take.js"),ignoreElements=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/ignoreElements.js"),mapTo=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/mapTo.js"),mergeMap=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),innerFrom=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js");function delayWhen(delayDurationSelector,subscriptionDelay){return subscriptionDelay?function(source){return(0,concat.z)(subscriptionDelay.pipe((0,take.q)(1),(0,ignoreElements.l)()),source.pipe(delayWhen(delayDurationSelector)))}:(0,mergeMap.z)((function(value,index){return(0,innerFrom.Xf)(delayDurationSelector(value,index)).pipe((0,take.q)(1),(0,mapTo.h)(value))}))}var timer=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/observable/timer.js");function delay(due,scheduler){void 0===scheduler&&(scheduler=scheduler_async.z);var duration=(0,timer.H)(due,scheduler);return delayWhen((function(){return duration}))}},"./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/ignoreElements.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>ignoreElements});var _util_lift__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_noop__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/noop.js");function ignoreElements(){return(0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.e)((function(source,subscriber){source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.x)(subscriber,_util_noop__WEBPACK_IMPORTED_MODULE_2__.Z))}))}}}]);